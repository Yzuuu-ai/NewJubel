
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model notifikasi
 * 
 */
export type notifikasi = $Result.DefaultSelection<Prisma.$notifikasiPayload>
/**
 * Model produk
 * 
 */
export type produk = $Result.DefaultSelection<Prisma.$produkPayload>
/**
 * Model profile
 * 
 */
export type profile = $Result.DefaultSelection<Prisma.$profilePayload>
/**
 * Model riwayattransaksi
 * 
 */
export type riwayattransaksi = $Result.DefaultSelection<Prisma.$riwayattransaksiPayload>
/**
 * Model sengketa
 * 
 */
export type sengketa = $Result.DefaultSelection<Prisma.$sengketaPayload>
/**
 * Model transaksi
 * 
 */
export type transaksi = $Result.DefaultSelection<Prisma.$transaksiPayload>
/**
 * Model user
 * 
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>
/**
 * Model aplikasi_penjual
 * 
 */
export type aplikasi_penjual = $Result.DefaultSelection<Prisma.$aplikasi_penjualPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const notifikasi_tipe: {
  REGISTER: 'REGISTER',
  PEMBAYARAN_DITERIMA: 'PEMBAYARAN_DITERIMA',
  TRANSAKSI_SUKSES: 'TRANSAKSI_SUKSES',
  SENGKETA_DIMULAI: 'SENGKETA_DIMULAI',
  SENGKETA_DIPUTUSKAN: 'SENGKETA_DIPUTUSKAN',
  AKUN_DIKIRIM: 'AKUN_DIKIRIM',
  COUNTDOWN_PEMBAYARAN: 'COUNTDOWN_PEMBAYARAN',
  APLIKASI_PENJUAL_DIAJUKAN: 'APLIKASI_PENJUAL_DIAJUKAN',
  APLIKASI_PENJUAL_DISETUJUI: 'APLIKASI_PENJUAL_DISETUJUI',
  APLIKASI_PENJUAL_DITOLAK: 'APLIKASI_PENJUAL_DITOLAK',
  APLIKASI_PENJUAL_BARU: 'APLIKASI_PENJUAL_BARU'
};

export type notifikasi_tipe = (typeof notifikasi_tipe)[keyof typeof notifikasi_tipe]


export const produk_statusProduk: {
  AKTIF: 'AKTIF',
  TERJUAL: 'TERJUAL',
  PENDING: 'PENDING',
  DITOLAK: 'DITOLAK',
  DIHAPUS: 'DIHAPUS'
};

export type produk_statusProduk = (typeof produk_statusProduk)[keyof typeof produk_statusProduk]


export const sengketa_disputeType: {
  USER_DISPUTE: 'USER_DISPUTE',
  ADMIN_DISPUTE: 'ADMIN_DISPUTE'
};

export type sengketa_disputeType = (typeof sengketa_disputeType)[keyof typeof sengketa_disputeType]


export const sengketa_status: {
  DIPROSES: 'DIPROSES',
  DIMENANGKAN_PEMBELI: 'DIMENANGKAN_PEMBELI',
  DIMENANGKAN_PENJUAL: 'DIMENANGKAN_PENJUAL'
};

export type sengketa_status = (typeof sengketa_status)[keyof typeof sengketa_status]


export const transaksi_status: {
  MENUNGGU_PEMBAYARAN: 'MENUNGGU_PEMBAYARAN',
  DIBAYAR_SMARTCONTRACT: 'DIBAYAR_SMARTCONTRACT',
  MENUNGGU_KIRIM_AKUN: 'MENUNGGU_KIRIM_AKUN',
  DIKIRIM: 'DIKIRIM',
  DIKONFIRMASI_PEMBELI: 'DIKONFIRMASI_PEMBELI',
  SENGKETA: 'SENGKETA',
  SELESAI: 'SELESAI',
  REFUND: 'REFUND',
  GAGAL: 'GAGAL'
};

export type transaksi_status = (typeof transaksi_status)[keyof typeof transaksi_status]


export const user_role: {
  PEMBELI: 'PEMBELI',
  PENJUAL: 'PENJUAL',
  ADMIN: 'ADMIN'
};

export type user_role = (typeof user_role)[keyof typeof user_role]


export const status_aplikasi: {
  MENUNGGU: 'MENUNGGU',
  SEDANG_DIREVIEW: 'SEDANG_DIREVIEW',
  DISETUJUI: 'DISETUJUI',
  DITOLAK: 'DITOLAK'
};

export type status_aplikasi = (typeof status_aplikasi)[keyof typeof status_aplikasi]

}

export type notifikasi_tipe = $Enums.notifikasi_tipe

export const notifikasi_tipe: typeof $Enums.notifikasi_tipe

export type produk_statusProduk = $Enums.produk_statusProduk

export const produk_statusProduk: typeof $Enums.produk_statusProduk

export type sengketa_disputeType = $Enums.sengketa_disputeType

export const sengketa_disputeType: typeof $Enums.sengketa_disputeType

export type sengketa_status = $Enums.sengketa_status

export const sengketa_status: typeof $Enums.sengketa_status

export type transaksi_status = $Enums.transaksi_status

export const transaksi_status: typeof $Enums.transaksi_status

export type user_role = $Enums.user_role

export const user_role: typeof $Enums.user_role

export type status_aplikasi = $Enums.status_aplikasi

export const status_aplikasi: typeof $Enums.status_aplikasi

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Notifikasis
 * const notifikasis = await prisma.notifikasi.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Notifikasis
   * const notifikasis = await prisma.notifikasi.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.notifikasi`: Exposes CRUD operations for the **notifikasi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifikasis
    * const notifikasis = await prisma.notifikasi.findMany()
    * ```
    */
  get notifikasi(): Prisma.notifikasiDelegate<ExtArgs>;

  /**
   * `prisma.produk`: Exposes CRUD operations for the **produk** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Produks
    * const produks = await prisma.produk.findMany()
    * ```
    */
  get produk(): Prisma.produkDelegate<ExtArgs>;

  /**
   * `prisma.profile`: Exposes CRUD operations for the **profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profile.findMany()
    * ```
    */
  get profile(): Prisma.profileDelegate<ExtArgs>;

  /**
   * `prisma.riwayattransaksi`: Exposes CRUD operations for the **riwayattransaksi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Riwayattransaksis
    * const riwayattransaksis = await prisma.riwayattransaksi.findMany()
    * ```
    */
  get riwayattransaksi(): Prisma.riwayattransaksiDelegate<ExtArgs>;

  /**
   * `prisma.sengketa`: Exposes CRUD operations for the **sengketa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sengketas
    * const sengketas = await prisma.sengketa.findMany()
    * ```
    */
  get sengketa(): Prisma.sengketaDelegate<ExtArgs>;

  /**
   * `prisma.transaksi`: Exposes CRUD operations for the **transaksi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Transaksis
    * const transaksis = await prisma.transaksi.findMany()
    * ```
    */
  get transaksi(): Prisma.transaksiDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs>;

  /**
   * `prisma.aplikasi_penjual`: Exposes CRUD operations for the **aplikasi_penjual** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Aplikasi_penjuals
    * const aplikasi_penjuals = await prisma.aplikasi_penjual.findMany()
    * ```
    */
  get aplikasi_penjual(): Prisma.aplikasi_penjualDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    notifikasi: 'notifikasi',
    produk: 'produk',
    profile: 'profile',
    riwayattransaksi: 'riwayattransaksi',
    sengketa: 'sengketa',
    transaksi: 'transaksi',
    user: 'user',
    aplikasi_penjual: 'aplikasi_penjual'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "notifikasi" | "produk" | "profile" | "riwayattransaksi" | "sengketa" | "transaksi" | "user" | "aplikasi_penjual"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      notifikasi: {
        payload: Prisma.$notifikasiPayload<ExtArgs>
        fields: Prisma.notifikasiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notifikasiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notifikasiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notifikasiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notifikasiPayload>
          }
          findFirst: {
            args: Prisma.notifikasiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notifikasiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notifikasiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notifikasiPayload>
          }
          findMany: {
            args: Prisma.notifikasiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notifikasiPayload>[]
          }
          create: {
            args: Prisma.notifikasiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notifikasiPayload>
          }
          createMany: {
            args: Prisma.notifikasiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.notifikasiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notifikasiPayload>
          }
          update: {
            args: Prisma.notifikasiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notifikasiPayload>
          }
          deleteMany: {
            args: Prisma.notifikasiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notifikasiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.notifikasiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notifikasiPayload>
          }
          aggregate: {
            args: Prisma.NotifikasiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotifikasi>
          }
          groupBy: {
            args: Prisma.notifikasiGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotifikasiGroupByOutputType>[]
          }
          count: {
            args: Prisma.notifikasiCountArgs<ExtArgs>
            result: $Utils.Optional<NotifikasiCountAggregateOutputType> | number
          }
        }
      }
      produk: {
        payload: Prisma.$produkPayload<ExtArgs>
        fields: Prisma.produkFieldRefs
        operations: {
          findUnique: {
            args: Prisma.produkFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produkPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.produkFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produkPayload>
          }
          findFirst: {
            args: Prisma.produkFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produkPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.produkFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produkPayload>
          }
          findMany: {
            args: Prisma.produkFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produkPayload>[]
          }
          create: {
            args: Prisma.produkCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produkPayload>
          }
          createMany: {
            args: Prisma.produkCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.produkDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produkPayload>
          }
          update: {
            args: Prisma.produkUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produkPayload>
          }
          deleteMany: {
            args: Prisma.produkDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.produkUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.produkUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produkPayload>
          }
          aggregate: {
            args: Prisma.ProdukAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduk>
          }
          groupBy: {
            args: Prisma.produkGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProdukGroupByOutputType>[]
          }
          count: {
            args: Prisma.produkCountArgs<ExtArgs>
            result: $Utils.Optional<ProdukCountAggregateOutputType> | number
          }
        }
      }
      profile: {
        payload: Prisma.$profilePayload<ExtArgs>
        fields: Prisma.profileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.profileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.profileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          findFirst: {
            args: Prisma.profileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.profileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          findMany: {
            args: Prisma.profileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>[]
          }
          create: {
            args: Prisma.profileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          createMany: {
            args: Prisma.profileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.profileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          update: {
            args: Prisma.profileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          deleteMany: {
            args: Prisma.profileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.profileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.profileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$profilePayload>
          }
          aggregate: {
            args: Prisma.ProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile>
          }
          groupBy: {
            args: Prisma.profileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.profileCountArgs<ExtArgs>
            result: $Utils.Optional<ProfileCountAggregateOutputType> | number
          }
        }
      }
      riwayattransaksi: {
        payload: Prisma.$riwayattransaksiPayload<ExtArgs>
        fields: Prisma.riwayattransaksiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.riwayattransaksiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$riwayattransaksiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.riwayattransaksiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$riwayattransaksiPayload>
          }
          findFirst: {
            args: Prisma.riwayattransaksiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$riwayattransaksiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.riwayattransaksiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$riwayattransaksiPayload>
          }
          findMany: {
            args: Prisma.riwayattransaksiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$riwayattransaksiPayload>[]
          }
          create: {
            args: Prisma.riwayattransaksiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$riwayattransaksiPayload>
          }
          createMany: {
            args: Prisma.riwayattransaksiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.riwayattransaksiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$riwayattransaksiPayload>
          }
          update: {
            args: Prisma.riwayattransaksiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$riwayattransaksiPayload>
          }
          deleteMany: {
            args: Prisma.riwayattransaksiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.riwayattransaksiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.riwayattransaksiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$riwayattransaksiPayload>
          }
          aggregate: {
            args: Prisma.RiwayattransaksiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRiwayattransaksi>
          }
          groupBy: {
            args: Prisma.riwayattransaksiGroupByArgs<ExtArgs>
            result: $Utils.Optional<RiwayattransaksiGroupByOutputType>[]
          }
          count: {
            args: Prisma.riwayattransaksiCountArgs<ExtArgs>
            result: $Utils.Optional<RiwayattransaksiCountAggregateOutputType> | number
          }
        }
      }
      sengketa: {
        payload: Prisma.$sengketaPayload<ExtArgs>
        fields: Prisma.sengketaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sengketaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sengketaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sengketaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sengketaPayload>
          }
          findFirst: {
            args: Prisma.sengketaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sengketaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sengketaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sengketaPayload>
          }
          findMany: {
            args: Prisma.sengketaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sengketaPayload>[]
          }
          create: {
            args: Prisma.sengketaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sengketaPayload>
          }
          createMany: {
            args: Prisma.sengketaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sengketaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sengketaPayload>
          }
          update: {
            args: Prisma.sengketaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sengketaPayload>
          }
          deleteMany: {
            args: Prisma.sengketaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sengketaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sengketaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sengketaPayload>
          }
          aggregate: {
            args: Prisma.SengketaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSengketa>
          }
          groupBy: {
            args: Prisma.sengketaGroupByArgs<ExtArgs>
            result: $Utils.Optional<SengketaGroupByOutputType>[]
          }
          count: {
            args: Prisma.sengketaCountArgs<ExtArgs>
            result: $Utils.Optional<SengketaCountAggregateOutputType> | number
          }
        }
      }
      transaksi: {
        payload: Prisma.$transaksiPayload<ExtArgs>
        fields: Prisma.transaksiFieldRefs
        operations: {
          findUnique: {
            args: Prisma.transaksiFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.transaksiFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          findFirst: {
            args: Prisma.transaksiFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.transaksiFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          findMany: {
            args: Prisma.transaksiFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>[]
          }
          create: {
            args: Prisma.transaksiCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          createMany: {
            args: Prisma.transaksiCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.transaksiDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          update: {
            args: Prisma.transaksiUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          deleteMany: {
            args: Prisma.transaksiDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.transaksiUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.transaksiUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$transaksiPayload>
          }
          aggregate: {
            args: Prisma.TransaksiAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTransaksi>
          }
          groupBy: {
            args: Prisma.transaksiGroupByArgs<ExtArgs>
            result: $Utils.Optional<TransaksiGroupByOutputType>[]
          }
          count: {
            args: Prisma.transaksiCountArgs<ExtArgs>
            result: $Utils.Optional<TransaksiCountAggregateOutputType> | number
          }
        }
      }
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      aplikasi_penjual: {
        payload: Prisma.$aplikasi_penjualPayload<ExtArgs>
        fields: Prisma.aplikasi_penjualFieldRefs
        operations: {
          findUnique: {
            args: Prisma.aplikasi_penjualFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aplikasi_penjualPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.aplikasi_penjualFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aplikasi_penjualPayload>
          }
          findFirst: {
            args: Prisma.aplikasi_penjualFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aplikasi_penjualPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.aplikasi_penjualFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aplikasi_penjualPayload>
          }
          findMany: {
            args: Prisma.aplikasi_penjualFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aplikasi_penjualPayload>[]
          }
          create: {
            args: Prisma.aplikasi_penjualCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aplikasi_penjualPayload>
          }
          createMany: {
            args: Prisma.aplikasi_penjualCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.aplikasi_penjualDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aplikasi_penjualPayload>
          }
          update: {
            args: Prisma.aplikasi_penjualUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aplikasi_penjualPayload>
          }
          deleteMany: {
            args: Prisma.aplikasi_penjualDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.aplikasi_penjualUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.aplikasi_penjualUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$aplikasi_penjualPayload>
          }
          aggregate: {
            args: Prisma.Aplikasi_penjualAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAplikasi_penjual>
          }
          groupBy: {
            args: Prisma.aplikasi_penjualGroupByArgs<ExtArgs>
            result: $Utils.Optional<Aplikasi_penjualGroupByOutputType>[]
          }
          count: {
            args: Prisma.aplikasi_penjualCountArgs<ExtArgs>
            result: $Utils.Optional<Aplikasi_penjualCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ProdukCountOutputType
   */

  export type ProdukCountOutputType = {
    transaksi: number
  }

  export type ProdukCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaksi?: boolean | ProdukCountOutputTypeCountTransaksiArgs
  }

  // Custom InputTypes
  /**
   * ProdukCountOutputType without action
   */
  export type ProdukCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProdukCountOutputType
     */
    select?: ProdukCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProdukCountOutputType without action
   */
  export type ProdukCountOutputTypeCountTransaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaksiWhereInput
  }


  /**
   * Count Type TransaksiCountOutputType
   */

  export type TransaksiCountOutputType = {
    notifikasi: number
  }

  export type TransaksiCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notifikasi?: boolean | TransaksiCountOutputTypeCountNotifikasiArgs
  }

  // Custom InputTypes
  /**
   * TransaksiCountOutputType without action
   */
  export type TransaksiCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TransaksiCountOutputType
     */
    select?: TransaksiCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TransaksiCountOutputType without action
   */
  export type TransaksiCountOutputTypeCountNotifikasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notifikasiWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    notifikasi: number
    produk: number
    transaksi_transaksi_pembeliIdTouser: number
    transaksi_transaksi_penjualIdTouser: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notifikasi?: boolean | UserCountOutputTypeCountNotifikasiArgs
    produk?: boolean | UserCountOutputTypeCountProdukArgs
    transaksi_transaksi_pembeliIdTouser?: boolean | UserCountOutputTypeCountTransaksi_transaksi_pembeliIdTouserArgs
    transaksi_transaksi_penjualIdTouser?: boolean | UserCountOutputTypeCountTransaksi_transaksi_penjualIdTouserArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountNotifikasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notifikasiWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountProdukArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produkWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTransaksi_transaksi_pembeliIdTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaksiWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTransaksi_transaksi_penjualIdTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaksiWhereInput
  }


  /**
   * Models
   */

  /**
   * Model notifikasi
   */

  export type AggregateNotifikasi = {
    _count: NotifikasiCountAggregateOutputType | null
    _min: NotifikasiMinAggregateOutputType | null
    _max: NotifikasiMaxAggregateOutputType | null
  }

  export type NotifikasiMinAggregateOutputType = {
    id: string | null
    userId: string | null
    transaksiId: string | null
    tipe: $Enums.notifikasi_tipe | null
    judul: string | null
    pesan: string | null
    dibaca: boolean | null
    dibuatPada: Date | null
  }

  export type NotifikasiMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    transaksiId: string | null
    tipe: $Enums.notifikasi_tipe | null
    judul: string | null
    pesan: string | null
    dibaca: boolean | null
    dibuatPada: Date | null
  }

  export type NotifikasiCountAggregateOutputType = {
    id: number
    userId: number
    transaksiId: number
    tipe: number
    judul: number
    pesan: number
    dibaca: number
    dibuatPada: number
    _all: number
  }


  export type NotifikasiMinAggregateInputType = {
    id?: true
    userId?: true
    transaksiId?: true
    tipe?: true
    judul?: true
    pesan?: true
    dibaca?: true
    dibuatPada?: true
  }

  export type NotifikasiMaxAggregateInputType = {
    id?: true
    userId?: true
    transaksiId?: true
    tipe?: true
    judul?: true
    pesan?: true
    dibaca?: true
    dibuatPada?: true
  }

  export type NotifikasiCountAggregateInputType = {
    id?: true
    userId?: true
    transaksiId?: true
    tipe?: true
    judul?: true
    pesan?: true
    dibaca?: true
    dibuatPada?: true
    _all?: true
  }

  export type NotifikasiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifikasi to aggregate.
     */
    where?: notifikasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifikasis to fetch.
     */
    orderBy?: notifikasiOrderByWithRelationInput | notifikasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notifikasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifikasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifikasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notifikasis
    **/
    _count?: true | NotifikasiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotifikasiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotifikasiMaxAggregateInputType
  }

  export type GetNotifikasiAggregateType<T extends NotifikasiAggregateArgs> = {
        [P in keyof T & keyof AggregateNotifikasi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotifikasi[P]>
      : GetScalarType<T[P], AggregateNotifikasi[P]>
  }




  export type notifikasiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notifikasiWhereInput
    orderBy?: notifikasiOrderByWithAggregationInput | notifikasiOrderByWithAggregationInput[]
    by: NotifikasiScalarFieldEnum[] | NotifikasiScalarFieldEnum
    having?: notifikasiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotifikasiCountAggregateInputType | true
    _min?: NotifikasiMinAggregateInputType
    _max?: NotifikasiMaxAggregateInputType
  }

  export type NotifikasiGroupByOutputType = {
    id: string
    userId: string
    transaksiId: string | null
    tipe: $Enums.notifikasi_tipe
    judul: string
    pesan: string
    dibaca: boolean
    dibuatPada: Date
    _count: NotifikasiCountAggregateOutputType | null
    _min: NotifikasiMinAggregateOutputType | null
    _max: NotifikasiMaxAggregateOutputType | null
  }

  type GetNotifikasiGroupByPayload<T extends notifikasiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotifikasiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotifikasiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotifikasiGroupByOutputType[P]>
            : GetScalarType<T[P], NotifikasiGroupByOutputType[P]>
        }
      >
    >


  export type notifikasiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    transaksiId?: boolean
    tipe?: boolean
    judul?: boolean
    pesan?: boolean
    dibaca?: boolean
    dibuatPada?: boolean
    transaksi?: boolean | notifikasi$transaksiArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notifikasi"]>


  export type notifikasiSelectScalar = {
    id?: boolean
    userId?: boolean
    transaksiId?: boolean
    tipe?: boolean
    judul?: boolean
    pesan?: boolean
    dibaca?: boolean
    dibuatPada?: boolean
  }

  export type notifikasiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaksi?: boolean | notifikasi$transaksiArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $notifikasiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notifikasi"
    objects: {
      transaksi: Prisma.$transaksiPayload<ExtArgs> | null
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      transaksiId: string | null
      tipe: $Enums.notifikasi_tipe
      judul: string
      pesan: string
      dibaca: boolean
      dibuatPada: Date
    }, ExtArgs["result"]["notifikasi"]>
    composites: {}
  }

  type notifikasiGetPayload<S extends boolean | null | undefined | notifikasiDefaultArgs> = $Result.GetResult<Prisma.$notifikasiPayload, S>

  type notifikasiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<notifikasiFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NotifikasiCountAggregateInputType | true
    }

  export interface notifikasiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notifikasi'], meta: { name: 'notifikasi' } }
    /**
     * Find zero or one Notifikasi that matches the filter.
     * @param {notifikasiFindUniqueArgs} args - Arguments to find a Notifikasi
     * @example
     * // Get one Notifikasi
     * const notifikasi = await prisma.notifikasi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notifikasiFindUniqueArgs>(args: SelectSubset<T, notifikasiFindUniqueArgs<ExtArgs>>): Prisma__notifikasiClient<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Notifikasi that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {notifikasiFindUniqueOrThrowArgs} args - Arguments to find a Notifikasi
     * @example
     * // Get one Notifikasi
     * const notifikasi = await prisma.notifikasi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notifikasiFindUniqueOrThrowArgs>(args: SelectSubset<T, notifikasiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notifikasiClient<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Notifikasi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notifikasiFindFirstArgs} args - Arguments to find a Notifikasi
     * @example
     * // Get one Notifikasi
     * const notifikasi = await prisma.notifikasi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notifikasiFindFirstArgs>(args?: SelectSubset<T, notifikasiFindFirstArgs<ExtArgs>>): Prisma__notifikasiClient<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Notifikasi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notifikasiFindFirstOrThrowArgs} args - Arguments to find a Notifikasi
     * @example
     * // Get one Notifikasi
     * const notifikasi = await prisma.notifikasi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notifikasiFindFirstOrThrowArgs>(args?: SelectSubset<T, notifikasiFindFirstOrThrowArgs<ExtArgs>>): Prisma__notifikasiClient<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Notifikasis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notifikasiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifikasis
     * const notifikasis = await prisma.notifikasi.findMany()
     * 
     * // Get first 10 Notifikasis
     * const notifikasis = await prisma.notifikasi.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notifikasiWithIdOnly = await prisma.notifikasi.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends notifikasiFindManyArgs>(args?: SelectSubset<T, notifikasiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Notifikasi.
     * @param {notifikasiCreateArgs} args - Arguments to create a Notifikasi.
     * @example
     * // Create one Notifikasi
     * const Notifikasi = await prisma.notifikasi.create({
     *   data: {
     *     // ... data to create a Notifikasi
     *   }
     * })
     * 
     */
    create<T extends notifikasiCreateArgs>(args: SelectSubset<T, notifikasiCreateArgs<ExtArgs>>): Prisma__notifikasiClient<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Notifikasis.
     * @param {notifikasiCreateManyArgs} args - Arguments to create many Notifikasis.
     * @example
     * // Create many Notifikasis
     * const notifikasi = await prisma.notifikasi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notifikasiCreateManyArgs>(args?: SelectSubset<T, notifikasiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Notifikasi.
     * @param {notifikasiDeleteArgs} args - Arguments to delete one Notifikasi.
     * @example
     * // Delete one Notifikasi
     * const Notifikasi = await prisma.notifikasi.delete({
     *   where: {
     *     // ... filter to delete one Notifikasi
     *   }
     * })
     * 
     */
    delete<T extends notifikasiDeleteArgs>(args: SelectSubset<T, notifikasiDeleteArgs<ExtArgs>>): Prisma__notifikasiClient<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Notifikasi.
     * @param {notifikasiUpdateArgs} args - Arguments to update one Notifikasi.
     * @example
     * // Update one Notifikasi
     * const notifikasi = await prisma.notifikasi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notifikasiUpdateArgs>(args: SelectSubset<T, notifikasiUpdateArgs<ExtArgs>>): Prisma__notifikasiClient<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Notifikasis.
     * @param {notifikasiDeleteManyArgs} args - Arguments to filter Notifikasis to delete.
     * @example
     * // Delete a few Notifikasis
     * const { count } = await prisma.notifikasi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notifikasiDeleteManyArgs>(args?: SelectSubset<T, notifikasiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifikasis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notifikasiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifikasis
     * const notifikasi = await prisma.notifikasi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notifikasiUpdateManyArgs>(args: SelectSubset<T, notifikasiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Notifikasi.
     * @param {notifikasiUpsertArgs} args - Arguments to update or create a Notifikasi.
     * @example
     * // Update or create a Notifikasi
     * const notifikasi = await prisma.notifikasi.upsert({
     *   create: {
     *     // ... data to create a Notifikasi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notifikasi we want to update
     *   }
     * })
     */
    upsert<T extends notifikasiUpsertArgs>(args: SelectSubset<T, notifikasiUpsertArgs<ExtArgs>>): Prisma__notifikasiClient<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Notifikasis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notifikasiCountArgs} args - Arguments to filter Notifikasis to count.
     * @example
     * // Count the number of Notifikasis
     * const count = await prisma.notifikasi.count({
     *   where: {
     *     // ... the filter for the Notifikasis we want to count
     *   }
     * })
    **/
    count<T extends notifikasiCountArgs>(
      args?: Subset<T, notifikasiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotifikasiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notifikasi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotifikasiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotifikasiAggregateArgs>(args: Subset<T, NotifikasiAggregateArgs>): Prisma.PrismaPromise<GetNotifikasiAggregateType<T>>

    /**
     * Group by Notifikasi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notifikasiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notifikasiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notifikasiGroupByArgs['orderBy'] }
        : { orderBy?: notifikasiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notifikasiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotifikasiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notifikasi model
   */
  readonly fields: notifikasiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notifikasi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notifikasiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transaksi<T extends notifikasi$transaksiArgs<ExtArgs> = {}>(args?: Subset<T, notifikasi$transaksiArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notifikasi model
   */ 
  interface notifikasiFieldRefs {
    readonly id: FieldRef<"notifikasi", 'String'>
    readonly userId: FieldRef<"notifikasi", 'String'>
    readonly transaksiId: FieldRef<"notifikasi", 'String'>
    readonly tipe: FieldRef<"notifikasi", 'notifikasi_tipe'>
    readonly judul: FieldRef<"notifikasi", 'String'>
    readonly pesan: FieldRef<"notifikasi", 'String'>
    readonly dibaca: FieldRef<"notifikasi", 'Boolean'>
    readonly dibuatPada: FieldRef<"notifikasi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * notifikasi findUnique
   */
  export type notifikasiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    /**
     * Filter, which notifikasi to fetch.
     */
    where: notifikasiWhereUniqueInput
  }

  /**
   * notifikasi findUniqueOrThrow
   */
  export type notifikasiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    /**
     * Filter, which notifikasi to fetch.
     */
    where: notifikasiWhereUniqueInput
  }

  /**
   * notifikasi findFirst
   */
  export type notifikasiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    /**
     * Filter, which notifikasi to fetch.
     */
    where?: notifikasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifikasis to fetch.
     */
    orderBy?: notifikasiOrderByWithRelationInput | notifikasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifikasis.
     */
    cursor?: notifikasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifikasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifikasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifikasis.
     */
    distinct?: NotifikasiScalarFieldEnum | NotifikasiScalarFieldEnum[]
  }

  /**
   * notifikasi findFirstOrThrow
   */
  export type notifikasiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    /**
     * Filter, which notifikasi to fetch.
     */
    where?: notifikasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifikasis to fetch.
     */
    orderBy?: notifikasiOrderByWithRelationInput | notifikasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifikasis.
     */
    cursor?: notifikasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifikasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifikasis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifikasis.
     */
    distinct?: NotifikasiScalarFieldEnum | NotifikasiScalarFieldEnum[]
  }

  /**
   * notifikasi findMany
   */
  export type notifikasiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    /**
     * Filter, which notifikasis to fetch.
     */
    where?: notifikasiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifikasis to fetch.
     */
    orderBy?: notifikasiOrderByWithRelationInput | notifikasiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notifikasis.
     */
    cursor?: notifikasiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifikasis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifikasis.
     */
    skip?: number
    distinct?: NotifikasiScalarFieldEnum | NotifikasiScalarFieldEnum[]
  }

  /**
   * notifikasi create
   */
  export type notifikasiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    /**
     * The data needed to create a notifikasi.
     */
    data: XOR<notifikasiCreateInput, notifikasiUncheckedCreateInput>
  }

  /**
   * notifikasi createMany
   */
  export type notifikasiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notifikasis.
     */
    data: notifikasiCreateManyInput | notifikasiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notifikasi update
   */
  export type notifikasiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    /**
     * The data needed to update a notifikasi.
     */
    data: XOR<notifikasiUpdateInput, notifikasiUncheckedUpdateInput>
    /**
     * Choose, which notifikasi to update.
     */
    where: notifikasiWhereUniqueInput
  }

  /**
   * notifikasi updateMany
   */
  export type notifikasiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notifikasis.
     */
    data: XOR<notifikasiUpdateManyMutationInput, notifikasiUncheckedUpdateManyInput>
    /**
     * Filter which notifikasis to update
     */
    where?: notifikasiWhereInput
  }

  /**
   * notifikasi upsert
   */
  export type notifikasiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    /**
     * The filter to search for the notifikasi to update in case it exists.
     */
    where: notifikasiWhereUniqueInput
    /**
     * In case the notifikasi found by the `where` argument doesn't exist, create a new notifikasi with this data.
     */
    create: XOR<notifikasiCreateInput, notifikasiUncheckedCreateInput>
    /**
     * In case the notifikasi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notifikasiUpdateInput, notifikasiUncheckedUpdateInput>
  }

  /**
   * notifikasi delete
   */
  export type notifikasiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    /**
     * Filter which notifikasi to delete.
     */
    where: notifikasiWhereUniqueInput
  }

  /**
   * notifikasi deleteMany
   */
  export type notifikasiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifikasis to delete
     */
    where?: notifikasiWhereInput
  }

  /**
   * notifikasi.transaksi
   */
  export type notifikasi$transaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    where?: transaksiWhereInput
  }

  /**
   * notifikasi without action
   */
  export type notifikasiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
  }


  /**
   * Model produk
   */

  export type AggregateProduk = {
    _count: ProdukCountAggregateOutputType | null
    _avg: ProdukAvgAggregateOutputType | null
    _sum: ProdukSumAggregateOutputType | null
    _min: ProdukMinAggregateOutputType | null
    _max: ProdukMaxAggregateOutputType | null
  }

  export type ProdukAvgAggregateOutputType = {
    harga: number | null
    hargaEth: number | null
  }

  export type ProdukSumAggregateOutputType = {
    harga: number | null
    hargaEth: number | null
  }

  export type ProdukMinAggregateOutputType = {
    id: string | null
    kodeProduk: string | null
    namaGame: string | null
    deskripsi: string | null
    harga: number | null
    penjualId: string | null
    statusJual: boolean | null
    gambar: string | null
    judulProduk: string | null
    dibuatPada: Date | null
    diperbaruiPada: Date | null
    statusProduk: $Enums.produk_statusProduk | null
    hargaEth: number | null
  }

  export type ProdukMaxAggregateOutputType = {
    id: string | null
    kodeProduk: string | null
    namaGame: string | null
    deskripsi: string | null
    harga: number | null
    penjualId: string | null
    statusJual: boolean | null
    gambar: string | null
    judulProduk: string | null
    dibuatPada: Date | null
    diperbaruiPada: Date | null
    statusProduk: $Enums.produk_statusProduk | null
    hargaEth: number | null
  }

  export type ProdukCountAggregateOutputType = {
    id: number
    kodeProduk: number
    namaGame: number
    deskripsi: number
    harga: number
    penjualId: number
    statusJual: number
    gambar: number
    judulProduk: number
    dibuatPada: number
    diperbaruiPada: number
    statusProduk: number
    hargaEth: number
    _all: number
  }


  export type ProdukAvgAggregateInputType = {
    harga?: true
    hargaEth?: true
  }

  export type ProdukSumAggregateInputType = {
    harga?: true
    hargaEth?: true
  }

  export type ProdukMinAggregateInputType = {
    id?: true
    kodeProduk?: true
    namaGame?: true
    deskripsi?: true
    harga?: true
    penjualId?: true
    statusJual?: true
    gambar?: true
    judulProduk?: true
    dibuatPada?: true
    diperbaruiPada?: true
    statusProduk?: true
    hargaEth?: true
  }

  export type ProdukMaxAggregateInputType = {
    id?: true
    kodeProduk?: true
    namaGame?: true
    deskripsi?: true
    harga?: true
    penjualId?: true
    statusJual?: true
    gambar?: true
    judulProduk?: true
    dibuatPada?: true
    diperbaruiPada?: true
    statusProduk?: true
    hargaEth?: true
  }

  export type ProdukCountAggregateInputType = {
    id?: true
    kodeProduk?: true
    namaGame?: true
    deskripsi?: true
    harga?: true
    penjualId?: true
    statusJual?: true
    gambar?: true
    judulProduk?: true
    dibuatPada?: true
    diperbaruiPada?: true
    statusProduk?: true
    hargaEth?: true
    _all?: true
  }

  export type ProdukAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which produk to aggregate.
     */
    where?: produkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produks to fetch.
     */
    orderBy?: produkOrderByWithRelationInput | produkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: produkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned produks
    **/
    _count?: true | ProdukCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProdukAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProdukSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProdukMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProdukMaxAggregateInputType
  }

  export type GetProdukAggregateType<T extends ProdukAggregateArgs> = {
        [P in keyof T & keyof AggregateProduk]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduk[P]>
      : GetScalarType<T[P], AggregateProduk[P]>
  }




  export type produkGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produkWhereInput
    orderBy?: produkOrderByWithAggregationInput | produkOrderByWithAggregationInput[]
    by: ProdukScalarFieldEnum[] | ProdukScalarFieldEnum
    having?: produkScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProdukCountAggregateInputType | true
    _avg?: ProdukAvgAggregateInputType
    _sum?: ProdukSumAggregateInputType
    _min?: ProdukMinAggregateInputType
    _max?: ProdukMaxAggregateInputType
  }

  export type ProdukGroupByOutputType = {
    id: string
    kodeProduk: string
    namaGame: string
    deskripsi: string | null
    harga: number
    penjualId: string
    statusJual: boolean
    gambar: string | null
    judulProduk: string
    dibuatPada: Date
    diperbaruiPada: Date
    statusProduk: $Enums.produk_statusProduk | null
    hargaEth: number | null
    _count: ProdukCountAggregateOutputType | null
    _avg: ProdukAvgAggregateOutputType | null
    _sum: ProdukSumAggregateOutputType | null
    _min: ProdukMinAggregateOutputType | null
    _max: ProdukMaxAggregateOutputType | null
  }

  type GetProdukGroupByPayload<T extends produkGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProdukGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProdukGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProdukGroupByOutputType[P]>
            : GetScalarType<T[P], ProdukGroupByOutputType[P]>
        }
      >
    >


  export type produkSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    kodeProduk?: boolean
    namaGame?: boolean
    deskripsi?: boolean
    harga?: boolean
    penjualId?: boolean
    statusJual?: boolean
    gambar?: boolean
    judulProduk?: boolean
    dibuatPada?: boolean
    diperbaruiPada?: boolean
    statusProduk?: boolean
    hargaEth?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    transaksi?: boolean | produk$transaksiArgs<ExtArgs>
    _count?: boolean | ProdukCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["produk"]>


  export type produkSelectScalar = {
    id?: boolean
    kodeProduk?: boolean
    namaGame?: boolean
    deskripsi?: boolean
    harga?: boolean
    penjualId?: boolean
    statusJual?: boolean
    gambar?: boolean
    judulProduk?: boolean
    dibuatPada?: boolean
    diperbaruiPada?: boolean
    statusProduk?: boolean
    hargaEth?: boolean
  }

  export type produkInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    transaksi?: boolean | produk$transaksiArgs<ExtArgs>
    _count?: boolean | ProdukCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $produkPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "produk"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      transaksi: Prisma.$transaksiPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      kodeProduk: string
      namaGame: string
      deskripsi: string | null
      harga: number
      penjualId: string
      statusJual: boolean
      gambar: string | null
      judulProduk: string
      dibuatPada: Date
      diperbaruiPada: Date
      statusProduk: $Enums.produk_statusProduk | null
      hargaEth: number | null
    }, ExtArgs["result"]["produk"]>
    composites: {}
  }

  type produkGetPayload<S extends boolean | null | undefined | produkDefaultArgs> = $Result.GetResult<Prisma.$produkPayload, S>

  type produkCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<produkFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProdukCountAggregateInputType | true
    }

  export interface produkDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['produk'], meta: { name: 'produk' } }
    /**
     * Find zero or one Produk that matches the filter.
     * @param {produkFindUniqueArgs} args - Arguments to find a Produk
     * @example
     * // Get one Produk
     * const produk = await prisma.produk.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends produkFindUniqueArgs>(args: SelectSubset<T, produkFindUniqueArgs<ExtArgs>>): Prisma__produkClient<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Produk that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {produkFindUniqueOrThrowArgs} args - Arguments to find a Produk
     * @example
     * // Get one Produk
     * const produk = await prisma.produk.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends produkFindUniqueOrThrowArgs>(args: SelectSubset<T, produkFindUniqueOrThrowArgs<ExtArgs>>): Prisma__produkClient<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Produk that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produkFindFirstArgs} args - Arguments to find a Produk
     * @example
     * // Get one Produk
     * const produk = await prisma.produk.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends produkFindFirstArgs>(args?: SelectSubset<T, produkFindFirstArgs<ExtArgs>>): Prisma__produkClient<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Produk that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produkFindFirstOrThrowArgs} args - Arguments to find a Produk
     * @example
     * // Get one Produk
     * const produk = await prisma.produk.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends produkFindFirstOrThrowArgs>(args?: SelectSubset<T, produkFindFirstOrThrowArgs<ExtArgs>>): Prisma__produkClient<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Produks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produkFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Produks
     * const produks = await prisma.produk.findMany()
     * 
     * // Get first 10 Produks
     * const produks = await prisma.produk.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const produkWithIdOnly = await prisma.produk.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends produkFindManyArgs>(args?: SelectSubset<T, produkFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Produk.
     * @param {produkCreateArgs} args - Arguments to create a Produk.
     * @example
     * // Create one Produk
     * const Produk = await prisma.produk.create({
     *   data: {
     *     // ... data to create a Produk
     *   }
     * })
     * 
     */
    create<T extends produkCreateArgs>(args: SelectSubset<T, produkCreateArgs<ExtArgs>>): Prisma__produkClient<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Produks.
     * @param {produkCreateManyArgs} args - Arguments to create many Produks.
     * @example
     * // Create many Produks
     * const produk = await prisma.produk.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends produkCreateManyArgs>(args?: SelectSubset<T, produkCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Produk.
     * @param {produkDeleteArgs} args - Arguments to delete one Produk.
     * @example
     * // Delete one Produk
     * const Produk = await prisma.produk.delete({
     *   where: {
     *     // ... filter to delete one Produk
     *   }
     * })
     * 
     */
    delete<T extends produkDeleteArgs>(args: SelectSubset<T, produkDeleteArgs<ExtArgs>>): Prisma__produkClient<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Produk.
     * @param {produkUpdateArgs} args - Arguments to update one Produk.
     * @example
     * // Update one Produk
     * const produk = await prisma.produk.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends produkUpdateArgs>(args: SelectSubset<T, produkUpdateArgs<ExtArgs>>): Prisma__produkClient<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Produks.
     * @param {produkDeleteManyArgs} args - Arguments to filter Produks to delete.
     * @example
     * // Delete a few Produks
     * const { count } = await prisma.produk.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends produkDeleteManyArgs>(args?: SelectSubset<T, produkDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Produks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produkUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Produks
     * const produk = await prisma.produk.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends produkUpdateManyArgs>(args: SelectSubset<T, produkUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Produk.
     * @param {produkUpsertArgs} args - Arguments to update or create a Produk.
     * @example
     * // Update or create a Produk
     * const produk = await prisma.produk.upsert({
     *   create: {
     *     // ... data to create a Produk
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Produk we want to update
     *   }
     * })
     */
    upsert<T extends produkUpsertArgs>(args: SelectSubset<T, produkUpsertArgs<ExtArgs>>): Prisma__produkClient<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Produks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produkCountArgs} args - Arguments to filter Produks to count.
     * @example
     * // Count the number of Produks
     * const count = await prisma.produk.count({
     *   where: {
     *     // ... the filter for the Produks we want to count
     *   }
     * })
    **/
    count<T extends produkCountArgs>(
      args?: Subset<T, produkCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProdukCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Produk.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProdukAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProdukAggregateArgs>(args: Subset<T, ProdukAggregateArgs>): Prisma.PrismaPromise<GetProdukAggregateType<T>>

    /**
     * Group by Produk.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produkGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends produkGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: produkGroupByArgs['orderBy'] }
        : { orderBy?: produkGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, produkGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProdukGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the produk model
   */
  readonly fields: produkFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for produk.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__produkClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    transaksi<T extends produk$transaksiArgs<ExtArgs> = {}>(args?: Subset<T, produk$transaksiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the produk model
   */ 
  interface produkFieldRefs {
    readonly id: FieldRef<"produk", 'String'>
    readonly kodeProduk: FieldRef<"produk", 'String'>
    readonly namaGame: FieldRef<"produk", 'String'>
    readonly deskripsi: FieldRef<"produk", 'String'>
    readonly harga: FieldRef<"produk", 'Int'>
    readonly penjualId: FieldRef<"produk", 'String'>
    readonly statusJual: FieldRef<"produk", 'Boolean'>
    readonly gambar: FieldRef<"produk", 'String'>
    readonly judulProduk: FieldRef<"produk", 'String'>
    readonly dibuatPada: FieldRef<"produk", 'DateTime'>
    readonly diperbaruiPada: FieldRef<"produk", 'DateTime'>
    readonly statusProduk: FieldRef<"produk", 'produk_statusProduk'>
    readonly hargaEth: FieldRef<"produk", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * produk findUnique
   */
  export type produkFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
    /**
     * Filter, which produk to fetch.
     */
    where: produkWhereUniqueInput
  }

  /**
   * produk findUniqueOrThrow
   */
  export type produkFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
    /**
     * Filter, which produk to fetch.
     */
    where: produkWhereUniqueInput
  }

  /**
   * produk findFirst
   */
  export type produkFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
    /**
     * Filter, which produk to fetch.
     */
    where?: produkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produks to fetch.
     */
    orderBy?: produkOrderByWithRelationInput | produkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for produks.
     */
    cursor?: produkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of produks.
     */
    distinct?: ProdukScalarFieldEnum | ProdukScalarFieldEnum[]
  }

  /**
   * produk findFirstOrThrow
   */
  export type produkFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
    /**
     * Filter, which produk to fetch.
     */
    where?: produkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produks to fetch.
     */
    orderBy?: produkOrderByWithRelationInput | produkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for produks.
     */
    cursor?: produkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of produks.
     */
    distinct?: ProdukScalarFieldEnum | ProdukScalarFieldEnum[]
  }

  /**
   * produk findMany
   */
  export type produkFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
    /**
     * Filter, which produks to fetch.
     */
    where?: produkWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produks to fetch.
     */
    orderBy?: produkOrderByWithRelationInput | produkOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing produks.
     */
    cursor?: produkWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produks.
     */
    skip?: number
    distinct?: ProdukScalarFieldEnum | ProdukScalarFieldEnum[]
  }

  /**
   * produk create
   */
  export type produkCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
    /**
     * The data needed to create a produk.
     */
    data: XOR<produkCreateInput, produkUncheckedCreateInput>
  }

  /**
   * produk createMany
   */
  export type produkCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many produks.
     */
    data: produkCreateManyInput | produkCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * produk update
   */
  export type produkUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
    /**
     * The data needed to update a produk.
     */
    data: XOR<produkUpdateInput, produkUncheckedUpdateInput>
    /**
     * Choose, which produk to update.
     */
    where: produkWhereUniqueInput
  }

  /**
   * produk updateMany
   */
  export type produkUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update produks.
     */
    data: XOR<produkUpdateManyMutationInput, produkUncheckedUpdateManyInput>
    /**
     * Filter which produks to update
     */
    where?: produkWhereInput
  }

  /**
   * produk upsert
   */
  export type produkUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
    /**
     * The filter to search for the produk to update in case it exists.
     */
    where: produkWhereUniqueInput
    /**
     * In case the produk found by the `where` argument doesn't exist, create a new produk with this data.
     */
    create: XOR<produkCreateInput, produkUncheckedCreateInput>
    /**
     * In case the produk was found with the provided `where` argument, update it with this data.
     */
    update: XOR<produkUpdateInput, produkUncheckedUpdateInput>
  }

  /**
   * produk delete
   */
  export type produkDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
    /**
     * Filter which produk to delete.
     */
    where: produkWhereUniqueInput
  }

  /**
   * produk deleteMany
   */
  export type produkDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which produks to delete
     */
    where?: produkWhereInput
  }

  /**
   * produk.transaksi
   */
  export type produk$transaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    where?: transaksiWhereInput
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    cursor?: transaksiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * produk without action
   */
  export type produkDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
  }


  /**
   * Model profile
   */

  export type AggregateProfile = {
    _count: ProfileCountAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  export type ProfileMinAggregateOutputType = {
    id: string | null
    userId: string | null
    nama: string | null
    nomor_telepon: string | null
    alamat: string | null
    nomor_whatsapp: string | null
  }

  export type ProfileMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    nama: string | null
    nomor_telepon: string | null
    alamat: string | null
    nomor_whatsapp: string | null
  }

  export type ProfileCountAggregateOutputType = {
    id: number
    userId: number
    nama: number
    nomor_telepon: number
    alamat: number
    nomor_whatsapp: number
    _all: number
  }


  export type ProfileMinAggregateInputType = {
    id?: true
    userId?: true
    nama?: true
    nomor_telepon?: true
    alamat?: true
    nomor_whatsapp?: true
  }

  export type ProfileMaxAggregateInputType = {
    id?: true
    userId?: true
    nama?: true
    nomor_telepon?: true
    alamat?: true
    nomor_whatsapp?: true
  }

  export type ProfileCountAggregateInputType = {
    id?: true
    userId?: true
    nama?: true
    nomor_telepon?: true
    alamat?: true
    nomor_whatsapp?: true
    _all?: true
  }

  export type ProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which profile to aggregate.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned profiles
    **/
    _count?: true | ProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfileMaxAggregateInputType
  }

  export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile[P]>
      : GetScalarType<T[P], AggregateProfile[P]>
  }




  export type profileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: profileWhereInput
    orderBy?: profileOrderByWithAggregationInput | profileOrderByWithAggregationInput[]
    by: ProfileScalarFieldEnum[] | ProfileScalarFieldEnum
    having?: profileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfileCountAggregateInputType | true
    _min?: ProfileMinAggregateInputType
    _max?: ProfileMaxAggregateInputType
  }

  export type ProfileGroupByOutputType = {
    id: string
    userId: string
    nama: string
    nomor_telepon: string | null
    alamat: string | null
    nomor_whatsapp: string | null
    _count: ProfileCountAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  type GetProfileGroupByPayload<T extends profileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProfileGroupByOutputType[P]>
        }
      >
    >


  export type profileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    nama?: boolean
    nomor_telepon?: boolean
    alamat?: boolean
    nomor_whatsapp?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>


  export type profileSelectScalar = {
    id?: boolean
    userId?: boolean
    nama?: boolean
    nomor_telepon?: boolean
    alamat?: boolean
    nomor_whatsapp?: boolean
  }

  export type profileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $profilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "profile"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      nama: string
      nomor_telepon: string | null
      alamat: string | null
      nomor_whatsapp: string | null
    }, ExtArgs["result"]["profile"]>
    composites: {}
  }

  type profileGetPayload<S extends boolean | null | undefined | profileDefaultArgs> = $Result.GetResult<Prisma.$profilePayload, S>

  type profileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<profileFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProfileCountAggregateInputType | true
    }

  export interface profileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['profile'], meta: { name: 'profile' } }
    /**
     * Find zero or one Profile that matches the filter.
     * @param {profileFindUniqueArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends profileFindUniqueArgs>(args: SelectSubset<T, profileFindUniqueArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Profile that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {profileFindUniqueOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends profileFindUniqueOrThrowArgs>(args: SelectSubset<T, profileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileFindFirstArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends profileFindFirstArgs>(args?: SelectSubset<T, profileFindFirstArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileFindFirstOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends profileFindFirstOrThrowArgs>(args?: SelectSubset<T, profileFindFirstOrThrowArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profile.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profileWithIdOnly = await prisma.profile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends profileFindManyArgs>(args?: SelectSubset<T, profileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Profile.
     * @param {profileCreateArgs} args - Arguments to create a Profile.
     * @example
     * // Create one Profile
     * const Profile = await prisma.profile.create({
     *   data: {
     *     // ... data to create a Profile
     *   }
     * })
     * 
     */
    create<T extends profileCreateArgs>(args: SelectSubset<T, profileCreateArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Profiles.
     * @param {profileCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends profileCreateManyArgs>(args?: SelectSubset<T, profileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Profile.
     * @param {profileDeleteArgs} args - Arguments to delete one Profile.
     * @example
     * // Delete one Profile
     * const Profile = await prisma.profile.delete({
     *   where: {
     *     // ... filter to delete one Profile
     *   }
     * })
     * 
     */
    delete<T extends profileDeleteArgs>(args: SelectSubset<T, profileDeleteArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Profile.
     * @param {profileUpdateArgs} args - Arguments to update one Profile.
     * @example
     * // Update one Profile
     * const profile = await prisma.profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends profileUpdateArgs>(args: SelectSubset<T, profileUpdateArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Profiles.
     * @param {profileDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends profileDeleteManyArgs>(args?: SelectSubset<T, profileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends profileUpdateManyArgs>(args: SelectSubset<T, profileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Profile.
     * @param {profileUpsertArgs} args - Arguments to update or create a Profile.
     * @example
     * // Update or create a Profile
     * const profile = await prisma.profile.upsert({
     *   create: {
     *     // ... data to create a Profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile we want to update
     *   }
     * })
     */
    upsert<T extends profileUpsertArgs>(args: SelectSubset<T, profileUpsertArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profile.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends profileCountArgs>(
      args?: Subset<T, profileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfileAggregateArgs>(args: Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

    /**
     * Group by Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {profileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends profileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: profileGroupByArgs['orderBy'] }
        : { orderBy?: profileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, profileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the profile model
   */
  readonly fields: profileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__profileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the profile model
   */ 
  interface profileFieldRefs {
    readonly id: FieldRef<"profile", 'String'>
    readonly userId: FieldRef<"profile", 'String'>
    readonly nama: FieldRef<"profile", 'String'>
    readonly nomor_telepon: FieldRef<"profile", 'String'>
    readonly alamat: FieldRef<"profile", 'String'>
    readonly nomor_whatsapp: FieldRef<"profile", 'String'>
  }
    

  // Custom InputTypes
  /**
   * profile findUnique
   */
  export type profileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile findUniqueOrThrow
   */
  export type profileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile findFirst
   */
  export type profileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for profiles.
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * profile findFirstOrThrow
   */
  export type profileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profile to fetch.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for profiles.
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * profile findMany
   */
  export type profileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter, which profiles to fetch.
     */
    where?: profileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of profiles to fetch.
     */
    orderBy?: profileOrderByWithRelationInput | profileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing profiles.
     */
    cursor?: profileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` profiles.
     */
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * profile create
   */
  export type profileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * The data needed to create a profile.
     */
    data: XOR<profileCreateInput, profileUncheckedCreateInput>
  }

  /**
   * profile createMany
   */
  export type profileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many profiles.
     */
    data: profileCreateManyInput | profileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * profile update
   */
  export type profileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * The data needed to update a profile.
     */
    data: XOR<profileUpdateInput, profileUncheckedUpdateInput>
    /**
     * Choose, which profile to update.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile updateMany
   */
  export type profileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update profiles.
     */
    data: XOR<profileUpdateManyMutationInput, profileUncheckedUpdateManyInput>
    /**
     * Filter which profiles to update
     */
    where?: profileWhereInput
  }

  /**
   * profile upsert
   */
  export type profileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * The filter to search for the profile to update in case it exists.
     */
    where: profileWhereUniqueInput
    /**
     * In case the profile found by the `where` argument doesn't exist, create a new profile with this data.
     */
    create: XOR<profileCreateInput, profileUncheckedCreateInput>
    /**
     * In case the profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<profileUpdateInput, profileUncheckedUpdateInput>
  }

  /**
   * profile delete
   */
  export type profileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    /**
     * Filter which profile to delete.
     */
    where: profileWhereUniqueInput
  }

  /**
   * profile deleteMany
   */
  export type profileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which profiles to delete
     */
    where?: profileWhereInput
  }

  /**
   * profile without action
   */
  export type profileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
  }


  /**
   * Model riwayattransaksi
   */

  export type AggregateRiwayattransaksi = {
    _count: RiwayattransaksiCountAggregateOutputType | null
    _avg: RiwayattransaksiAvgAggregateOutputType | null
    _sum: RiwayattransaksiSumAggregateOutputType | null
    _min: RiwayattransaksiMinAggregateOutputType | null
    _max: RiwayattransaksiMaxAggregateOutputType | null
  }

  export type RiwayattransaksiAvgAggregateOutputType = {
    harga: number | null
  }

  export type RiwayattransaksiSumAggregateOutputType = {
    harga: number | null
  }

  export type RiwayattransaksiMinAggregateOutputType = {
    id: string | null
    kodeTransaksi: string | null
    namaGame: string | null
    harga: number | null
    walletPenjual: string | null
    walletPembeli: string | null
    tanggalSelesai: Date | null
    dibuatPada: Date | null
  }

  export type RiwayattransaksiMaxAggregateOutputType = {
    id: string | null
    kodeTransaksi: string | null
    namaGame: string | null
    harga: number | null
    walletPenjual: string | null
    walletPembeli: string | null
    tanggalSelesai: Date | null
    dibuatPada: Date | null
  }

  export type RiwayattransaksiCountAggregateOutputType = {
    id: number
    kodeTransaksi: number
    namaGame: number
    harga: number
    walletPenjual: number
    walletPembeli: number
    tanggalSelesai: number
    dibuatPada: number
    _all: number
  }


  export type RiwayattransaksiAvgAggregateInputType = {
    harga?: true
  }

  export type RiwayattransaksiSumAggregateInputType = {
    harga?: true
  }

  export type RiwayattransaksiMinAggregateInputType = {
    id?: true
    kodeTransaksi?: true
    namaGame?: true
    harga?: true
    walletPenjual?: true
    walletPembeli?: true
    tanggalSelesai?: true
    dibuatPada?: true
  }

  export type RiwayattransaksiMaxAggregateInputType = {
    id?: true
    kodeTransaksi?: true
    namaGame?: true
    harga?: true
    walletPenjual?: true
    walletPembeli?: true
    tanggalSelesai?: true
    dibuatPada?: true
  }

  export type RiwayattransaksiCountAggregateInputType = {
    id?: true
    kodeTransaksi?: true
    namaGame?: true
    harga?: true
    walletPenjual?: true
    walletPembeli?: true
    tanggalSelesai?: true
    dibuatPada?: true
    _all?: true
  }

  export type RiwayattransaksiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which riwayattransaksi to aggregate.
     */
    where?: riwayattransaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of riwayattransaksis to fetch.
     */
    orderBy?: riwayattransaksiOrderByWithRelationInput | riwayattransaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: riwayattransaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` riwayattransaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` riwayattransaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned riwayattransaksis
    **/
    _count?: true | RiwayattransaksiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RiwayattransaksiAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RiwayattransaksiSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RiwayattransaksiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RiwayattransaksiMaxAggregateInputType
  }

  export type GetRiwayattransaksiAggregateType<T extends RiwayattransaksiAggregateArgs> = {
        [P in keyof T & keyof AggregateRiwayattransaksi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRiwayattransaksi[P]>
      : GetScalarType<T[P], AggregateRiwayattransaksi[P]>
  }




  export type riwayattransaksiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: riwayattransaksiWhereInput
    orderBy?: riwayattransaksiOrderByWithAggregationInput | riwayattransaksiOrderByWithAggregationInput[]
    by: RiwayattransaksiScalarFieldEnum[] | RiwayattransaksiScalarFieldEnum
    having?: riwayattransaksiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RiwayattransaksiCountAggregateInputType | true
    _avg?: RiwayattransaksiAvgAggregateInputType
    _sum?: RiwayattransaksiSumAggregateInputType
    _min?: RiwayattransaksiMinAggregateInputType
    _max?: RiwayattransaksiMaxAggregateInputType
  }

  export type RiwayattransaksiGroupByOutputType = {
    id: string
    kodeTransaksi: string
    namaGame: string
    harga: number
    walletPenjual: string
    walletPembeli: string
    tanggalSelesai: Date
    dibuatPada: Date
    _count: RiwayattransaksiCountAggregateOutputType | null
    _avg: RiwayattransaksiAvgAggregateOutputType | null
    _sum: RiwayattransaksiSumAggregateOutputType | null
    _min: RiwayattransaksiMinAggregateOutputType | null
    _max: RiwayattransaksiMaxAggregateOutputType | null
  }

  type GetRiwayattransaksiGroupByPayload<T extends riwayattransaksiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RiwayattransaksiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RiwayattransaksiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RiwayattransaksiGroupByOutputType[P]>
            : GetScalarType<T[P], RiwayattransaksiGroupByOutputType[P]>
        }
      >
    >


  export type riwayattransaksiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    kodeTransaksi?: boolean
    namaGame?: boolean
    harga?: boolean
    walletPenjual?: boolean
    walletPembeli?: boolean
    tanggalSelesai?: boolean
    dibuatPada?: boolean
  }, ExtArgs["result"]["riwayattransaksi"]>


  export type riwayattransaksiSelectScalar = {
    id?: boolean
    kodeTransaksi?: boolean
    namaGame?: boolean
    harga?: boolean
    walletPenjual?: boolean
    walletPembeli?: boolean
    tanggalSelesai?: boolean
    dibuatPada?: boolean
  }


  export type $riwayattransaksiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "riwayattransaksi"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      kodeTransaksi: string
      namaGame: string
      harga: number
      walletPenjual: string
      walletPembeli: string
      tanggalSelesai: Date
      dibuatPada: Date
    }, ExtArgs["result"]["riwayattransaksi"]>
    composites: {}
  }

  type riwayattransaksiGetPayload<S extends boolean | null | undefined | riwayattransaksiDefaultArgs> = $Result.GetResult<Prisma.$riwayattransaksiPayload, S>

  type riwayattransaksiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<riwayattransaksiFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RiwayattransaksiCountAggregateInputType | true
    }

  export interface riwayattransaksiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['riwayattransaksi'], meta: { name: 'riwayattransaksi' } }
    /**
     * Find zero or one Riwayattransaksi that matches the filter.
     * @param {riwayattransaksiFindUniqueArgs} args - Arguments to find a Riwayattransaksi
     * @example
     * // Get one Riwayattransaksi
     * const riwayattransaksi = await prisma.riwayattransaksi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends riwayattransaksiFindUniqueArgs>(args: SelectSubset<T, riwayattransaksiFindUniqueArgs<ExtArgs>>): Prisma__riwayattransaksiClient<$Result.GetResult<Prisma.$riwayattransaksiPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Riwayattransaksi that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {riwayattransaksiFindUniqueOrThrowArgs} args - Arguments to find a Riwayattransaksi
     * @example
     * // Get one Riwayattransaksi
     * const riwayattransaksi = await prisma.riwayattransaksi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends riwayattransaksiFindUniqueOrThrowArgs>(args: SelectSubset<T, riwayattransaksiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__riwayattransaksiClient<$Result.GetResult<Prisma.$riwayattransaksiPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Riwayattransaksi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {riwayattransaksiFindFirstArgs} args - Arguments to find a Riwayattransaksi
     * @example
     * // Get one Riwayattransaksi
     * const riwayattransaksi = await prisma.riwayattransaksi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends riwayattransaksiFindFirstArgs>(args?: SelectSubset<T, riwayattransaksiFindFirstArgs<ExtArgs>>): Prisma__riwayattransaksiClient<$Result.GetResult<Prisma.$riwayattransaksiPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Riwayattransaksi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {riwayattransaksiFindFirstOrThrowArgs} args - Arguments to find a Riwayattransaksi
     * @example
     * // Get one Riwayattransaksi
     * const riwayattransaksi = await prisma.riwayattransaksi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends riwayattransaksiFindFirstOrThrowArgs>(args?: SelectSubset<T, riwayattransaksiFindFirstOrThrowArgs<ExtArgs>>): Prisma__riwayattransaksiClient<$Result.GetResult<Prisma.$riwayattransaksiPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Riwayattransaksis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {riwayattransaksiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Riwayattransaksis
     * const riwayattransaksis = await prisma.riwayattransaksi.findMany()
     * 
     * // Get first 10 Riwayattransaksis
     * const riwayattransaksis = await prisma.riwayattransaksi.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const riwayattransaksiWithIdOnly = await prisma.riwayattransaksi.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends riwayattransaksiFindManyArgs>(args?: SelectSubset<T, riwayattransaksiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$riwayattransaksiPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Riwayattransaksi.
     * @param {riwayattransaksiCreateArgs} args - Arguments to create a Riwayattransaksi.
     * @example
     * // Create one Riwayattransaksi
     * const Riwayattransaksi = await prisma.riwayattransaksi.create({
     *   data: {
     *     // ... data to create a Riwayattransaksi
     *   }
     * })
     * 
     */
    create<T extends riwayattransaksiCreateArgs>(args: SelectSubset<T, riwayattransaksiCreateArgs<ExtArgs>>): Prisma__riwayattransaksiClient<$Result.GetResult<Prisma.$riwayattransaksiPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Riwayattransaksis.
     * @param {riwayattransaksiCreateManyArgs} args - Arguments to create many Riwayattransaksis.
     * @example
     * // Create many Riwayattransaksis
     * const riwayattransaksi = await prisma.riwayattransaksi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends riwayattransaksiCreateManyArgs>(args?: SelectSubset<T, riwayattransaksiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Riwayattransaksi.
     * @param {riwayattransaksiDeleteArgs} args - Arguments to delete one Riwayattransaksi.
     * @example
     * // Delete one Riwayattransaksi
     * const Riwayattransaksi = await prisma.riwayattransaksi.delete({
     *   where: {
     *     // ... filter to delete one Riwayattransaksi
     *   }
     * })
     * 
     */
    delete<T extends riwayattransaksiDeleteArgs>(args: SelectSubset<T, riwayattransaksiDeleteArgs<ExtArgs>>): Prisma__riwayattransaksiClient<$Result.GetResult<Prisma.$riwayattransaksiPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Riwayattransaksi.
     * @param {riwayattransaksiUpdateArgs} args - Arguments to update one Riwayattransaksi.
     * @example
     * // Update one Riwayattransaksi
     * const riwayattransaksi = await prisma.riwayattransaksi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends riwayattransaksiUpdateArgs>(args: SelectSubset<T, riwayattransaksiUpdateArgs<ExtArgs>>): Prisma__riwayattransaksiClient<$Result.GetResult<Prisma.$riwayattransaksiPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Riwayattransaksis.
     * @param {riwayattransaksiDeleteManyArgs} args - Arguments to filter Riwayattransaksis to delete.
     * @example
     * // Delete a few Riwayattransaksis
     * const { count } = await prisma.riwayattransaksi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends riwayattransaksiDeleteManyArgs>(args?: SelectSubset<T, riwayattransaksiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Riwayattransaksis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {riwayattransaksiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Riwayattransaksis
     * const riwayattransaksi = await prisma.riwayattransaksi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends riwayattransaksiUpdateManyArgs>(args: SelectSubset<T, riwayattransaksiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Riwayattransaksi.
     * @param {riwayattransaksiUpsertArgs} args - Arguments to update or create a Riwayattransaksi.
     * @example
     * // Update or create a Riwayattransaksi
     * const riwayattransaksi = await prisma.riwayattransaksi.upsert({
     *   create: {
     *     // ... data to create a Riwayattransaksi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Riwayattransaksi we want to update
     *   }
     * })
     */
    upsert<T extends riwayattransaksiUpsertArgs>(args: SelectSubset<T, riwayattransaksiUpsertArgs<ExtArgs>>): Prisma__riwayattransaksiClient<$Result.GetResult<Prisma.$riwayattransaksiPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Riwayattransaksis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {riwayattransaksiCountArgs} args - Arguments to filter Riwayattransaksis to count.
     * @example
     * // Count the number of Riwayattransaksis
     * const count = await prisma.riwayattransaksi.count({
     *   where: {
     *     // ... the filter for the Riwayattransaksis we want to count
     *   }
     * })
    **/
    count<T extends riwayattransaksiCountArgs>(
      args?: Subset<T, riwayattransaksiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RiwayattransaksiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Riwayattransaksi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RiwayattransaksiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RiwayattransaksiAggregateArgs>(args: Subset<T, RiwayattransaksiAggregateArgs>): Prisma.PrismaPromise<GetRiwayattransaksiAggregateType<T>>

    /**
     * Group by Riwayattransaksi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {riwayattransaksiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends riwayattransaksiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: riwayattransaksiGroupByArgs['orderBy'] }
        : { orderBy?: riwayattransaksiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, riwayattransaksiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRiwayattransaksiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the riwayattransaksi model
   */
  readonly fields: riwayattransaksiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for riwayattransaksi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__riwayattransaksiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the riwayattransaksi model
   */ 
  interface riwayattransaksiFieldRefs {
    readonly id: FieldRef<"riwayattransaksi", 'String'>
    readonly kodeTransaksi: FieldRef<"riwayattransaksi", 'String'>
    readonly namaGame: FieldRef<"riwayattransaksi", 'String'>
    readonly harga: FieldRef<"riwayattransaksi", 'Int'>
    readonly walletPenjual: FieldRef<"riwayattransaksi", 'String'>
    readonly walletPembeli: FieldRef<"riwayattransaksi", 'String'>
    readonly tanggalSelesai: FieldRef<"riwayattransaksi", 'DateTime'>
    readonly dibuatPada: FieldRef<"riwayattransaksi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * riwayattransaksi findUnique
   */
  export type riwayattransaksiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the riwayattransaksi
     */
    select?: riwayattransaksiSelect<ExtArgs> | null
    /**
     * Filter, which riwayattransaksi to fetch.
     */
    where: riwayattransaksiWhereUniqueInput
  }

  /**
   * riwayattransaksi findUniqueOrThrow
   */
  export type riwayattransaksiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the riwayattransaksi
     */
    select?: riwayattransaksiSelect<ExtArgs> | null
    /**
     * Filter, which riwayattransaksi to fetch.
     */
    where: riwayattransaksiWhereUniqueInput
  }

  /**
   * riwayattransaksi findFirst
   */
  export type riwayattransaksiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the riwayattransaksi
     */
    select?: riwayattransaksiSelect<ExtArgs> | null
    /**
     * Filter, which riwayattransaksi to fetch.
     */
    where?: riwayattransaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of riwayattransaksis to fetch.
     */
    orderBy?: riwayattransaksiOrderByWithRelationInput | riwayattransaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for riwayattransaksis.
     */
    cursor?: riwayattransaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` riwayattransaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` riwayattransaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of riwayattransaksis.
     */
    distinct?: RiwayattransaksiScalarFieldEnum | RiwayattransaksiScalarFieldEnum[]
  }

  /**
   * riwayattransaksi findFirstOrThrow
   */
  export type riwayattransaksiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the riwayattransaksi
     */
    select?: riwayattransaksiSelect<ExtArgs> | null
    /**
     * Filter, which riwayattransaksi to fetch.
     */
    where?: riwayattransaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of riwayattransaksis to fetch.
     */
    orderBy?: riwayattransaksiOrderByWithRelationInput | riwayattransaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for riwayattransaksis.
     */
    cursor?: riwayattransaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` riwayattransaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` riwayattransaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of riwayattransaksis.
     */
    distinct?: RiwayattransaksiScalarFieldEnum | RiwayattransaksiScalarFieldEnum[]
  }

  /**
   * riwayattransaksi findMany
   */
  export type riwayattransaksiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the riwayattransaksi
     */
    select?: riwayattransaksiSelect<ExtArgs> | null
    /**
     * Filter, which riwayattransaksis to fetch.
     */
    where?: riwayattransaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of riwayattransaksis to fetch.
     */
    orderBy?: riwayattransaksiOrderByWithRelationInput | riwayattransaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing riwayattransaksis.
     */
    cursor?: riwayattransaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` riwayattransaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` riwayattransaksis.
     */
    skip?: number
    distinct?: RiwayattransaksiScalarFieldEnum | RiwayattransaksiScalarFieldEnum[]
  }

  /**
   * riwayattransaksi create
   */
  export type riwayattransaksiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the riwayattransaksi
     */
    select?: riwayattransaksiSelect<ExtArgs> | null
    /**
     * The data needed to create a riwayattransaksi.
     */
    data: XOR<riwayattransaksiCreateInput, riwayattransaksiUncheckedCreateInput>
  }

  /**
   * riwayattransaksi createMany
   */
  export type riwayattransaksiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many riwayattransaksis.
     */
    data: riwayattransaksiCreateManyInput | riwayattransaksiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * riwayattransaksi update
   */
  export type riwayattransaksiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the riwayattransaksi
     */
    select?: riwayattransaksiSelect<ExtArgs> | null
    /**
     * The data needed to update a riwayattransaksi.
     */
    data: XOR<riwayattransaksiUpdateInput, riwayattransaksiUncheckedUpdateInput>
    /**
     * Choose, which riwayattransaksi to update.
     */
    where: riwayattransaksiWhereUniqueInput
  }

  /**
   * riwayattransaksi updateMany
   */
  export type riwayattransaksiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update riwayattransaksis.
     */
    data: XOR<riwayattransaksiUpdateManyMutationInput, riwayattransaksiUncheckedUpdateManyInput>
    /**
     * Filter which riwayattransaksis to update
     */
    where?: riwayattransaksiWhereInput
  }

  /**
   * riwayattransaksi upsert
   */
  export type riwayattransaksiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the riwayattransaksi
     */
    select?: riwayattransaksiSelect<ExtArgs> | null
    /**
     * The filter to search for the riwayattransaksi to update in case it exists.
     */
    where: riwayattransaksiWhereUniqueInput
    /**
     * In case the riwayattransaksi found by the `where` argument doesn't exist, create a new riwayattransaksi with this data.
     */
    create: XOR<riwayattransaksiCreateInput, riwayattransaksiUncheckedCreateInput>
    /**
     * In case the riwayattransaksi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<riwayattransaksiUpdateInput, riwayattransaksiUncheckedUpdateInput>
  }

  /**
   * riwayattransaksi delete
   */
  export type riwayattransaksiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the riwayattransaksi
     */
    select?: riwayattransaksiSelect<ExtArgs> | null
    /**
     * Filter which riwayattransaksi to delete.
     */
    where: riwayattransaksiWhereUniqueInput
  }

  /**
   * riwayattransaksi deleteMany
   */
  export type riwayattransaksiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which riwayattransaksis to delete
     */
    where?: riwayattransaksiWhereInput
  }

  /**
   * riwayattransaksi without action
   */
  export type riwayattransaksiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the riwayattransaksi
     */
    select?: riwayattransaksiSelect<ExtArgs> | null
  }


  /**
   * Model sengketa
   */

  export type AggregateSengketa = {
    _count: SengketaCountAggregateOutputType | null
    _min: SengketaMinAggregateOutputType | null
    _max: SengketaMaxAggregateOutputType | null
  }

  export type SengketaMinAggregateOutputType = {
    id: string | null
    transaksiId: string | null
    deskripsi: string | null
    adminNote: string | null
    dibuatPada: Date | null
    disputeType: $Enums.sengketa_disputeType | null
    paymentMethod: string | null
    paymentTxHash: string | null
    pembeliBukti: string | null
    penjualBukti: string | null
    resolution: string | null
    resolvedAt: Date | null
    status: $Enums.sengketa_status | null
  }

  export type SengketaMaxAggregateOutputType = {
    id: string | null
    transaksiId: string | null
    deskripsi: string | null
    adminNote: string | null
    dibuatPada: Date | null
    disputeType: $Enums.sengketa_disputeType | null
    paymentMethod: string | null
    paymentTxHash: string | null
    pembeliBukti: string | null
    penjualBukti: string | null
    resolution: string | null
    resolvedAt: Date | null
    status: $Enums.sengketa_status | null
  }

  export type SengketaCountAggregateOutputType = {
    id: number
    transaksiId: number
    deskripsi: number
    adminNote: number
    dibuatPada: number
    disputeType: number
    paymentMethod: number
    paymentTxHash: number
    pembeliBukti: number
    penjualBukti: number
    resolution: number
    resolvedAt: number
    status: number
    _all: number
  }


  export type SengketaMinAggregateInputType = {
    id?: true
    transaksiId?: true
    deskripsi?: true
    adminNote?: true
    dibuatPada?: true
    disputeType?: true
    paymentMethod?: true
    paymentTxHash?: true
    pembeliBukti?: true
    penjualBukti?: true
    resolution?: true
    resolvedAt?: true
    status?: true
  }

  export type SengketaMaxAggregateInputType = {
    id?: true
    transaksiId?: true
    deskripsi?: true
    adminNote?: true
    dibuatPada?: true
    disputeType?: true
    paymentMethod?: true
    paymentTxHash?: true
    pembeliBukti?: true
    penjualBukti?: true
    resolution?: true
    resolvedAt?: true
    status?: true
  }

  export type SengketaCountAggregateInputType = {
    id?: true
    transaksiId?: true
    deskripsi?: true
    adminNote?: true
    dibuatPada?: true
    disputeType?: true
    paymentMethod?: true
    paymentTxHash?: true
    pembeliBukti?: true
    penjualBukti?: true
    resolution?: true
    resolvedAt?: true
    status?: true
    _all?: true
  }

  export type SengketaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sengketa to aggregate.
     */
    where?: sengketaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sengketas to fetch.
     */
    orderBy?: sengketaOrderByWithRelationInput | sengketaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sengketaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sengketas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sengketas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sengketas
    **/
    _count?: true | SengketaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SengketaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SengketaMaxAggregateInputType
  }

  export type GetSengketaAggregateType<T extends SengketaAggregateArgs> = {
        [P in keyof T & keyof AggregateSengketa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSengketa[P]>
      : GetScalarType<T[P], AggregateSengketa[P]>
  }




  export type sengketaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sengketaWhereInput
    orderBy?: sengketaOrderByWithAggregationInput | sengketaOrderByWithAggregationInput[]
    by: SengketaScalarFieldEnum[] | SengketaScalarFieldEnum
    having?: sengketaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SengketaCountAggregateInputType | true
    _min?: SengketaMinAggregateInputType
    _max?: SengketaMaxAggregateInputType
  }

  export type SengketaGroupByOutputType = {
    id: string
    transaksiId: string
    deskripsi: string | null
    adminNote: string | null
    dibuatPada: Date
    disputeType: $Enums.sengketa_disputeType
    paymentMethod: string | null
    paymentTxHash: string | null
    pembeliBukti: string | null
    penjualBukti: string | null
    resolution: string | null
    resolvedAt: Date | null
    status: $Enums.sengketa_status
    _count: SengketaCountAggregateOutputType | null
    _min: SengketaMinAggregateOutputType | null
    _max: SengketaMaxAggregateOutputType | null
  }

  type GetSengketaGroupByPayload<T extends sengketaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SengketaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SengketaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SengketaGroupByOutputType[P]>
            : GetScalarType<T[P], SengketaGroupByOutputType[P]>
        }
      >
    >


  export type sengketaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transaksiId?: boolean
    deskripsi?: boolean
    adminNote?: boolean
    dibuatPada?: boolean
    disputeType?: boolean
    paymentMethod?: boolean
    paymentTxHash?: boolean
    pembeliBukti?: boolean
    penjualBukti?: boolean
    resolution?: boolean
    resolvedAt?: boolean
    status?: boolean
    transaksi?: boolean | transaksiDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sengketa"]>


  export type sengketaSelectScalar = {
    id?: boolean
    transaksiId?: boolean
    deskripsi?: boolean
    adminNote?: boolean
    dibuatPada?: boolean
    disputeType?: boolean
    paymentMethod?: boolean
    paymentTxHash?: boolean
    pembeliBukti?: boolean
    penjualBukti?: boolean
    resolution?: boolean
    resolvedAt?: boolean
    status?: boolean
  }

  export type sengketaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    transaksi?: boolean | transaksiDefaultArgs<ExtArgs>
  }

  export type $sengketaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sengketa"
    objects: {
      transaksi: Prisma.$transaksiPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      transaksiId: string
      deskripsi: string | null
      adminNote: string | null
      dibuatPada: Date
      disputeType: $Enums.sengketa_disputeType
      paymentMethod: string | null
      paymentTxHash: string | null
      pembeliBukti: string | null
      penjualBukti: string | null
      resolution: string | null
      resolvedAt: Date | null
      status: $Enums.sengketa_status
    }, ExtArgs["result"]["sengketa"]>
    composites: {}
  }

  type sengketaGetPayload<S extends boolean | null | undefined | sengketaDefaultArgs> = $Result.GetResult<Prisma.$sengketaPayload, S>

  type sengketaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<sengketaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SengketaCountAggregateInputType | true
    }

  export interface sengketaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sengketa'], meta: { name: 'sengketa' } }
    /**
     * Find zero or one Sengketa that matches the filter.
     * @param {sengketaFindUniqueArgs} args - Arguments to find a Sengketa
     * @example
     * // Get one Sengketa
     * const sengketa = await prisma.sengketa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sengketaFindUniqueArgs>(args: SelectSubset<T, sengketaFindUniqueArgs<ExtArgs>>): Prisma__sengketaClient<$Result.GetResult<Prisma.$sengketaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Sengketa that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {sengketaFindUniqueOrThrowArgs} args - Arguments to find a Sengketa
     * @example
     * // Get one Sengketa
     * const sengketa = await prisma.sengketa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sengketaFindUniqueOrThrowArgs>(args: SelectSubset<T, sengketaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sengketaClient<$Result.GetResult<Prisma.$sengketaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Sengketa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sengketaFindFirstArgs} args - Arguments to find a Sengketa
     * @example
     * // Get one Sengketa
     * const sengketa = await prisma.sengketa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sengketaFindFirstArgs>(args?: SelectSubset<T, sengketaFindFirstArgs<ExtArgs>>): Prisma__sengketaClient<$Result.GetResult<Prisma.$sengketaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Sengketa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sengketaFindFirstOrThrowArgs} args - Arguments to find a Sengketa
     * @example
     * // Get one Sengketa
     * const sengketa = await prisma.sengketa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sengketaFindFirstOrThrowArgs>(args?: SelectSubset<T, sengketaFindFirstOrThrowArgs<ExtArgs>>): Prisma__sengketaClient<$Result.GetResult<Prisma.$sengketaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sengketas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sengketaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sengketas
     * const sengketas = await prisma.sengketa.findMany()
     * 
     * // Get first 10 Sengketas
     * const sengketas = await prisma.sengketa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sengketaWithIdOnly = await prisma.sengketa.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sengketaFindManyArgs>(args?: SelectSubset<T, sengketaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sengketaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Sengketa.
     * @param {sengketaCreateArgs} args - Arguments to create a Sengketa.
     * @example
     * // Create one Sengketa
     * const Sengketa = await prisma.sengketa.create({
     *   data: {
     *     // ... data to create a Sengketa
     *   }
     * })
     * 
     */
    create<T extends sengketaCreateArgs>(args: SelectSubset<T, sengketaCreateArgs<ExtArgs>>): Prisma__sengketaClient<$Result.GetResult<Prisma.$sengketaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sengketas.
     * @param {sengketaCreateManyArgs} args - Arguments to create many Sengketas.
     * @example
     * // Create many Sengketas
     * const sengketa = await prisma.sengketa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sengketaCreateManyArgs>(args?: SelectSubset<T, sengketaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sengketa.
     * @param {sengketaDeleteArgs} args - Arguments to delete one Sengketa.
     * @example
     * // Delete one Sengketa
     * const Sengketa = await prisma.sengketa.delete({
     *   where: {
     *     // ... filter to delete one Sengketa
     *   }
     * })
     * 
     */
    delete<T extends sengketaDeleteArgs>(args: SelectSubset<T, sengketaDeleteArgs<ExtArgs>>): Prisma__sengketaClient<$Result.GetResult<Prisma.$sengketaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Sengketa.
     * @param {sengketaUpdateArgs} args - Arguments to update one Sengketa.
     * @example
     * // Update one Sengketa
     * const sengketa = await prisma.sengketa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sengketaUpdateArgs>(args: SelectSubset<T, sengketaUpdateArgs<ExtArgs>>): Prisma__sengketaClient<$Result.GetResult<Prisma.$sengketaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sengketas.
     * @param {sengketaDeleteManyArgs} args - Arguments to filter Sengketas to delete.
     * @example
     * // Delete a few Sengketas
     * const { count } = await prisma.sengketa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sengketaDeleteManyArgs>(args?: SelectSubset<T, sengketaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sengketas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sengketaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sengketas
     * const sengketa = await prisma.sengketa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sengketaUpdateManyArgs>(args: SelectSubset<T, sengketaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sengketa.
     * @param {sengketaUpsertArgs} args - Arguments to update or create a Sengketa.
     * @example
     * // Update or create a Sengketa
     * const sengketa = await prisma.sengketa.upsert({
     *   create: {
     *     // ... data to create a Sengketa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sengketa we want to update
     *   }
     * })
     */
    upsert<T extends sengketaUpsertArgs>(args: SelectSubset<T, sengketaUpsertArgs<ExtArgs>>): Prisma__sengketaClient<$Result.GetResult<Prisma.$sengketaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sengketas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sengketaCountArgs} args - Arguments to filter Sengketas to count.
     * @example
     * // Count the number of Sengketas
     * const count = await prisma.sengketa.count({
     *   where: {
     *     // ... the filter for the Sengketas we want to count
     *   }
     * })
    **/
    count<T extends sengketaCountArgs>(
      args?: Subset<T, sengketaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SengketaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sengketa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SengketaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SengketaAggregateArgs>(args: Subset<T, SengketaAggregateArgs>): Prisma.PrismaPromise<GetSengketaAggregateType<T>>

    /**
     * Group by Sengketa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sengketaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sengketaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sengketaGroupByArgs['orderBy'] }
        : { orderBy?: sengketaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sengketaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSengketaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sengketa model
   */
  readonly fields: sengketaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sengketa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sengketaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    transaksi<T extends transaksiDefaultArgs<ExtArgs> = {}>(args?: Subset<T, transaksiDefaultArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sengketa model
   */ 
  interface sengketaFieldRefs {
    readonly id: FieldRef<"sengketa", 'String'>
    readonly transaksiId: FieldRef<"sengketa", 'String'>
    readonly deskripsi: FieldRef<"sengketa", 'String'>
    readonly adminNote: FieldRef<"sengketa", 'String'>
    readonly dibuatPada: FieldRef<"sengketa", 'DateTime'>
    readonly disputeType: FieldRef<"sengketa", 'sengketa_disputeType'>
    readonly paymentMethod: FieldRef<"sengketa", 'String'>
    readonly paymentTxHash: FieldRef<"sengketa", 'String'>
    readonly pembeliBukti: FieldRef<"sengketa", 'String'>
    readonly penjualBukti: FieldRef<"sengketa", 'String'>
    readonly resolution: FieldRef<"sengketa", 'String'>
    readonly resolvedAt: FieldRef<"sengketa", 'DateTime'>
    readonly status: FieldRef<"sengketa", 'sengketa_status'>
  }
    

  // Custom InputTypes
  /**
   * sengketa findUnique
   */
  export type sengketaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
    /**
     * Filter, which sengketa to fetch.
     */
    where: sengketaWhereUniqueInput
  }

  /**
   * sengketa findUniqueOrThrow
   */
  export type sengketaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
    /**
     * Filter, which sengketa to fetch.
     */
    where: sengketaWhereUniqueInput
  }

  /**
   * sengketa findFirst
   */
  export type sengketaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
    /**
     * Filter, which sengketa to fetch.
     */
    where?: sengketaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sengketas to fetch.
     */
    orderBy?: sengketaOrderByWithRelationInput | sengketaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sengketas.
     */
    cursor?: sengketaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sengketas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sengketas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sengketas.
     */
    distinct?: SengketaScalarFieldEnum | SengketaScalarFieldEnum[]
  }

  /**
   * sengketa findFirstOrThrow
   */
  export type sengketaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
    /**
     * Filter, which sengketa to fetch.
     */
    where?: sengketaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sengketas to fetch.
     */
    orderBy?: sengketaOrderByWithRelationInput | sengketaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sengketas.
     */
    cursor?: sengketaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sengketas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sengketas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sengketas.
     */
    distinct?: SengketaScalarFieldEnum | SengketaScalarFieldEnum[]
  }

  /**
   * sengketa findMany
   */
  export type sengketaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
    /**
     * Filter, which sengketas to fetch.
     */
    where?: sengketaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sengketas to fetch.
     */
    orderBy?: sengketaOrderByWithRelationInput | sengketaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sengketas.
     */
    cursor?: sengketaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sengketas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sengketas.
     */
    skip?: number
    distinct?: SengketaScalarFieldEnum | SengketaScalarFieldEnum[]
  }

  /**
   * sengketa create
   */
  export type sengketaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
    /**
     * The data needed to create a sengketa.
     */
    data: XOR<sengketaCreateInput, sengketaUncheckedCreateInput>
  }

  /**
   * sengketa createMany
   */
  export type sengketaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sengketas.
     */
    data: sengketaCreateManyInput | sengketaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sengketa update
   */
  export type sengketaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
    /**
     * The data needed to update a sengketa.
     */
    data: XOR<sengketaUpdateInput, sengketaUncheckedUpdateInput>
    /**
     * Choose, which sengketa to update.
     */
    where: sengketaWhereUniqueInput
  }

  /**
   * sengketa updateMany
   */
  export type sengketaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sengketas.
     */
    data: XOR<sengketaUpdateManyMutationInput, sengketaUncheckedUpdateManyInput>
    /**
     * Filter which sengketas to update
     */
    where?: sengketaWhereInput
  }

  /**
   * sengketa upsert
   */
  export type sengketaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
    /**
     * The filter to search for the sengketa to update in case it exists.
     */
    where: sengketaWhereUniqueInput
    /**
     * In case the sengketa found by the `where` argument doesn't exist, create a new sengketa with this data.
     */
    create: XOR<sengketaCreateInput, sengketaUncheckedCreateInput>
    /**
     * In case the sengketa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sengketaUpdateInput, sengketaUncheckedUpdateInput>
  }

  /**
   * sengketa delete
   */
  export type sengketaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
    /**
     * Filter which sengketa to delete.
     */
    where: sengketaWhereUniqueInput
  }

  /**
   * sengketa deleteMany
   */
  export type sengketaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sengketas to delete
     */
    where?: sengketaWhereInput
  }

  /**
   * sengketa without action
   */
  export type sengketaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
  }


  /**
   * Model transaksi
   */

  export type AggregateTransaksi = {
    _count: TransaksiCountAggregateOutputType | null
    _min: TransaksiMinAggregateOutputType | null
    _max: TransaksiMaxAggregateOutputType | null
  }

  export type TransaksiMinAggregateOutputType = {
    id: string | null
    kodeTransaksi: string | null
    produkId: string | null
    pembeliId: string | null
    penjualId: string | null
    status: $Enums.transaksi_status | null
    waktuBayar: Date | null
    waktuSelesai: Date | null
    contractAddress: string | null
    escrowAmount: string | null
    smartContractTxHash: string | null
    accountData: string | null
    deskripsiBukti: string | null
    adminRefundAt: Date | null
    adminRefundBy: string | null
    adminRefundNote: string | null
    adminRefundTxHash: string | null
    adminReleaseAt: Date | null
    adminReleaseBy: string | null
    adminReleaseNote: string | null
    adminReleaseTxHash: string | null
    dibuatPada: Date | null
    diperbaruiPada: Date | null
    escrowId: string | null
    expiredAt: Date | null
  }

  export type TransaksiMaxAggregateOutputType = {
    id: string | null
    kodeTransaksi: string | null
    produkId: string | null
    pembeliId: string | null
    penjualId: string | null
    status: $Enums.transaksi_status | null
    waktuBayar: Date | null
    waktuSelesai: Date | null
    contractAddress: string | null
    escrowAmount: string | null
    smartContractTxHash: string | null
    accountData: string | null
    deskripsiBukti: string | null
    adminRefundAt: Date | null
    adminRefundBy: string | null
    adminRefundNote: string | null
    adminRefundTxHash: string | null
    adminReleaseAt: Date | null
    adminReleaseBy: string | null
    adminReleaseNote: string | null
    adminReleaseTxHash: string | null
    dibuatPada: Date | null
    diperbaruiPada: Date | null
    escrowId: string | null
    expiredAt: Date | null
  }

  export type TransaksiCountAggregateOutputType = {
    id: number
    kodeTransaksi: number
    produkId: number
    pembeliId: number
    penjualId: number
    status: number
    waktuBayar: number
    waktuSelesai: number
    contractAddress: number
    escrowAmount: number
    smartContractTxHash: number
    accountData: number
    deskripsiBukti: number
    adminRefundAt: number
    adminRefundBy: number
    adminRefundNote: number
    adminRefundTxHash: number
    adminReleaseAt: number
    adminReleaseBy: number
    adminReleaseNote: number
    adminReleaseTxHash: number
    dibuatPada: number
    diperbaruiPada: number
    escrowId: number
    expiredAt: number
    _all: number
  }


  export type TransaksiMinAggregateInputType = {
    id?: true
    kodeTransaksi?: true
    produkId?: true
    pembeliId?: true
    penjualId?: true
    status?: true
    waktuBayar?: true
    waktuSelesai?: true
    contractAddress?: true
    escrowAmount?: true
    smartContractTxHash?: true
    accountData?: true
    deskripsiBukti?: true
    adminRefundAt?: true
    adminRefundBy?: true
    adminRefundNote?: true
    adminRefundTxHash?: true
    adminReleaseAt?: true
    adminReleaseBy?: true
    adminReleaseNote?: true
    adminReleaseTxHash?: true
    dibuatPada?: true
    diperbaruiPada?: true
    escrowId?: true
    expiredAt?: true
  }

  export type TransaksiMaxAggregateInputType = {
    id?: true
    kodeTransaksi?: true
    produkId?: true
    pembeliId?: true
    penjualId?: true
    status?: true
    waktuBayar?: true
    waktuSelesai?: true
    contractAddress?: true
    escrowAmount?: true
    smartContractTxHash?: true
    accountData?: true
    deskripsiBukti?: true
    adminRefundAt?: true
    adminRefundBy?: true
    adminRefundNote?: true
    adminRefundTxHash?: true
    adminReleaseAt?: true
    adminReleaseBy?: true
    adminReleaseNote?: true
    adminReleaseTxHash?: true
    dibuatPada?: true
    diperbaruiPada?: true
    escrowId?: true
    expiredAt?: true
  }

  export type TransaksiCountAggregateInputType = {
    id?: true
    kodeTransaksi?: true
    produkId?: true
    pembeliId?: true
    penjualId?: true
    status?: true
    waktuBayar?: true
    waktuSelesai?: true
    contractAddress?: true
    escrowAmount?: true
    smartContractTxHash?: true
    accountData?: true
    deskripsiBukti?: true
    adminRefundAt?: true
    adminRefundBy?: true
    adminRefundNote?: true
    adminRefundTxHash?: true
    adminReleaseAt?: true
    adminReleaseBy?: true
    adminReleaseNote?: true
    adminReleaseTxHash?: true
    dibuatPada?: true
    diperbaruiPada?: true
    escrowId?: true
    expiredAt?: true
    _all?: true
  }

  export type TransaksiAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaksi to aggregate.
     */
    where?: transaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaksis to fetch.
     */
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: transaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned transaksis
    **/
    _count?: true | TransaksiCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TransaksiMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TransaksiMaxAggregateInputType
  }

  export type GetTransaksiAggregateType<T extends TransaksiAggregateArgs> = {
        [P in keyof T & keyof AggregateTransaksi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTransaksi[P]>
      : GetScalarType<T[P], AggregateTransaksi[P]>
  }




  export type transaksiGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: transaksiWhereInput
    orderBy?: transaksiOrderByWithAggregationInput | transaksiOrderByWithAggregationInput[]
    by: TransaksiScalarFieldEnum[] | TransaksiScalarFieldEnum
    having?: transaksiScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TransaksiCountAggregateInputType | true
    _min?: TransaksiMinAggregateInputType
    _max?: TransaksiMaxAggregateInputType
  }

  export type TransaksiGroupByOutputType = {
    id: string
    kodeTransaksi: string
    produkId: string
    pembeliId: string
    penjualId: string
    status: $Enums.transaksi_status
    waktuBayar: Date | null
    waktuSelesai: Date | null
    contractAddress: string | null
    escrowAmount: string | null
    smartContractTxHash: string | null
    accountData: string | null
    deskripsiBukti: string | null
    adminRefundAt: Date | null
    adminRefundBy: string | null
    adminRefundNote: string | null
    adminRefundTxHash: string | null
    adminReleaseAt: Date | null
    adminReleaseBy: string | null
    adminReleaseNote: string | null
    adminReleaseTxHash: string | null
    dibuatPada: Date
    diperbaruiPada: Date
    escrowId: string | null
    expiredAt: Date | null
    _count: TransaksiCountAggregateOutputType | null
    _min: TransaksiMinAggregateOutputType | null
    _max: TransaksiMaxAggregateOutputType | null
  }

  type GetTransaksiGroupByPayload<T extends transaksiGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TransaksiGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TransaksiGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TransaksiGroupByOutputType[P]>
            : GetScalarType<T[P], TransaksiGroupByOutputType[P]>
        }
      >
    >


  export type transaksiSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    kodeTransaksi?: boolean
    produkId?: boolean
    pembeliId?: boolean
    penjualId?: boolean
    status?: boolean
    waktuBayar?: boolean
    waktuSelesai?: boolean
    contractAddress?: boolean
    escrowAmount?: boolean
    smartContractTxHash?: boolean
    accountData?: boolean
    deskripsiBukti?: boolean
    adminRefundAt?: boolean
    adminRefundBy?: boolean
    adminRefundNote?: boolean
    adminRefundTxHash?: boolean
    adminReleaseAt?: boolean
    adminReleaseBy?: boolean
    adminReleaseNote?: boolean
    adminReleaseTxHash?: boolean
    dibuatPada?: boolean
    diperbaruiPada?: boolean
    escrowId?: boolean
    expiredAt?: boolean
    notifikasi?: boolean | transaksi$notifikasiArgs<ExtArgs>
    sengketa?: boolean | transaksi$sengketaArgs<ExtArgs>
    user_transaksi_pembeliIdTouser?: boolean | userDefaultArgs<ExtArgs>
    user_transaksi_penjualIdTouser?: boolean | userDefaultArgs<ExtArgs>
    produk?: boolean | produkDefaultArgs<ExtArgs>
    _count?: boolean | TransaksiCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["transaksi"]>


  export type transaksiSelectScalar = {
    id?: boolean
    kodeTransaksi?: boolean
    produkId?: boolean
    pembeliId?: boolean
    penjualId?: boolean
    status?: boolean
    waktuBayar?: boolean
    waktuSelesai?: boolean
    contractAddress?: boolean
    escrowAmount?: boolean
    smartContractTxHash?: boolean
    accountData?: boolean
    deskripsiBukti?: boolean
    adminRefundAt?: boolean
    adminRefundBy?: boolean
    adminRefundNote?: boolean
    adminRefundTxHash?: boolean
    adminReleaseAt?: boolean
    adminReleaseBy?: boolean
    adminReleaseNote?: boolean
    adminReleaseTxHash?: boolean
    dibuatPada?: boolean
    diperbaruiPada?: boolean
    escrowId?: boolean
    expiredAt?: boolean
  }

  export type transaksiInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    notifikasi?: boolean | transaksi$notifikasiArgs<ExtArgs>
    sengketa?: boolean | transaksi$sengketaArgs<ExtArgs>
    user_transaksi_pembeliIdTouser?: boolean | userDefaultArgs<ExtArgs>
    user_transaksi_penjualIdTouser?: boolean | userDefaultArgs<ExtArgs>
    produk?: boolean | produkDefaultArgs<ExtArgs>
    _count?: boolean | TransaksiCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $transaksiPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "transaksi"
    objects: {
      notifikasi: Prisma.$notifikasiPayload<ExtArgs>[]
      sengketa: Prisma.$sengketaPayload<ExtArgs> | null
      user_transaksi_pembeliIdTouser: Prisma.$userPayload<ExtArgs>
      user_transaksi_penjualIdTouser: Prisma.$userPayload<ExtArgs>
      produk: Prisma.$produkPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      kodeTransaksi: string
      produkId: string
      pembeliId: string
      penjualId: string
      status: $Enums.transaksi_status
      waktuBayar: Date | null
      waktuSelesai: Date | null
      contractAddress: string | null
      escrowAmount: string | null
      smartContractTxHash: string | null
      accountData: string | null
      deskripsiBukti: string | null
      adminRefundAt: Date | null
      adminRefundBy: string | null
      adminRefundNote: string | null
      adminRefundTxHash: string | null
      adminReleaseAt: Date | null
      adminReleaseBy: string | null
      adminReleaseNote: string | null
      adminReleaseTxHash: string | null
      dibuatPada: Date
      diperbaruiPada: Date
      escrowId: string | null
      expiredAt: Date | null
    }, ExtArgs["result"]["transaksi"]>
    composites: {}
  }

  type transaksiGetPayload<S extends boolean | null | undefined | transaksiDefaultArgs> = $Result.GetResult<Prisma.$transaksiPayload, S>

  type transaksiCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<transaksiFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TransaksiCountAggregateInputType | true
    }

  export interface transaksiDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['transaksi'], meta: { name: 'transaksi' } }
    /**
     * Find zero or one Transaksi that matches the filter.
     * @param {transaksiFindUniqueArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends transaksiFindUniqueArgs>(args: SelectSubset<T, transaksiFindUniqueArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Transaksi that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {transaksiFindUniqueOrThrowArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends transaksiFindUniqueOrThrowArgs>(args: SelectSubset<T, transaksiFindUniqueOrThrowArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Transaksi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiFindFirstArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends transaksiFindFirstArgs>(args?: SelectSubset<T, transaksiFindFirstArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Transaksi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiFindFirstOrThrowArgs} args - Arguments to find a Transaksi
     * @example
     * // Get one Transaksi
     * const transaksi = await prisma.transaksi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends transaksiFindFirstOrThrowArgs>(args?: SelectSubset<T, transaksiFindFirstOrThrowArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Transaksis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Transaksis
     * const transaksis = await prisma.transaksi.findMany()
     * 
     * // Get first 10 Transaksis
     * const transaksis = await prisma.transaksi.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const transaksiWithIdOnly = await prisma.transaksi.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends transaksiFindManyArgs>(args?: SelectSubset<T, transaksiFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Transaksi.
     * @param {transaksiCreateArgs} args - Arguments to create a Transaksi.
     * @example
     * // Create one Transaksi
     * const Transaksi = await prisma.transaksi.create({
     *   data: {
     *     // ... data to create a Transaksi
     *   }
     * })
     * 
     */
    create<T extends transaksiCreateArgs>(args: SelectSubset<T, transaksiCreateArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Transaksis.
     * @param {transaksiCreateManyArgs} args - Arguments to create many Transaksis.
     * @example
     * // Create many Transaksis
     * const transaksi = await prisma.transaksi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends transaksiCreateManyArgs>(args?: SelectSubset<T, transaksiCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Transaksi.
     * @param {transaksiDeleteArgs} args - Arguments to delete one Transaksi.
     * @example
     * // Delete one Transaksi
     * const Transaksi = await prisma.transaksi.delete({
     *   where: {
     *     // ... filter to delete one Transaksi
     *   }
     * })
     * 
     */
    delete<T extends transaksiDeleteArgs>(args: SelectSubset<T, transaksiDeleteArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Transaksi.
     * @param {transaksiUpdateArgs} args - Arguments to update one Transaksi.
     * @example
     * // Update one Transaksi
     * const transaksi = await prisma.transaksi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends transaksiUpdateArgs>(args: SelectSubset<T, transaksiUpdateArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Transaksis.
     * @param {transaksiDeleteManyArgs} args - Arguments to filter Transaksis to delete.
     * @example
     * // Delete a few Transaksis
     * const { count } = await prisma.transaksi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends transaksiDeleteManyArgs>(args?: SelectSubset<T, transaksiDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Transaksis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Transaksis
     * const transaksi = await prisma.transaksi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends transaksiUpdateManyArgs>(args: SelectSubset<T, transaksiUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Transaksi.
     * @param {transaksiUpsertArgs} args - Arguments to update or create a Transaksi.
     * @example
     * // Update or create a Transaksi
     * const transaksi = await prisma.transaksi.upsert({
     *   create: {
     *     // ... data to create a Transaksi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Transaksi we want to update
     *   }
     * })
     */
    upsert<T extends transaksiUpsertArgs>(args: SelectSubset<T, transaksiUpsertArgs<ExtArgs>>): Prisma__transaksiClient<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Transaksis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiCountArgs} args - Arguments to filter Transaksis to count.
     * @example
     * // Count the number of Transaksis
     * const count = await prisma.transaksi.count({
     *   where: {
     *     // ... the filter for the Transaksis we want to count
     *   }
     * })
    **/
    count<T extends transaksiCountArgs>(
      args?: Subset<T, transaksiCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TransaksiCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Transaksi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TransaksiAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TransaksiAggregateArgs>(args: Subset<T, TransaksiAggregateArgs>): Prisma.PrismaPromise<GetTransaksiAggregateType<T>>

    /**
     * Group by Transaksi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {transaksiGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends transaksiGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: transaksiGroupByArgs['orderBy'] }
        : { orderBy?: transaksiGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, transaksiGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTransaksiGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the transaksi model
   */
  readonly fields: transaksiFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for transaksi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__transaksiClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    notifikasi<T extends transaksi$notifikasiArgs<ExtArgs> = {}>(args?: Subset<T, transaksi$notifikasiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "findMany"> | Null>
    sengketa<T extends transaksi$sengketaArgs<ExtArgs> = {}>(args?: Subset<T, transaksi$sengketaArgs<ExtArgs>>): Prisma__sengketaClient<$Result.GetResult<Prisma.$sengketaPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    user_transaksi_pembeliIdTouser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    user_transaksi_penjualIdTouser<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    produk<T extends produkDefaultArgs<ExtArgs> = {}>(args?: Subset<T, produkDefaultArgs<ExtArgs>>): Prisma__produkClient<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the transaksi model
   */ 
  interface transaksiFieldRefs {
    readonly id: FieldRef<"transaksi", 'String'>
    readonly kodeTransaksi: FieldRef<"transaksi", 'String'>
    readonly produkId: FieldRef<"transaksi", 'String'>
    readonly pembeliId: FieldRef<"transaksi", 'String'>
    readonly penjualId: FieldRef<"transaksi", 'String'>
    readonly status: FieldRef<"transaksi", 'transaksi_status'>
    readonly waktuBayar: FieldRef<"transaksi", 'DateTime'>
    readonly waktuSelesai: FieldRef<"transaksi", 'DateTime'>
    readonly contractAddress: FieldRef<"transaksi", 'String'>
    readonly escrowAmount: FieldRef<"transaksi", 'String'>
    readonly smartContractTxHash: FieldRef<"transaksi", 'String'>
    readonly accountData: FieldRef<"transaksi", 'String'>
    readonly deskripsiBukti: FieldRef<"transaksi", 'String'>
    readonly adminRefundAt: FieldRef<"transaksi", 'DateTime'>
    readonly adminRefundBy: FieldRef<"transaksi", 'String'>
    readonly adminRefundNote: FieldRef<"transaksi", 'String'>
    readonly adminRefundTxHash: FieldRef<"transaksi", 'String'>
    readonly adminReleaseAt: FieldRef<"transaksi", 'DateTime'>
    readonly adminReleaseBy: FieldRef<"transaksi", 'String'>
    readonly adminReleaseNote: FieldRef<"transaksi", 'String'>
    readonly adminReleaseTxHash: FieldRef<"transaksi", 'String'>
    readonly dibuatPada: FieldRef<"transaksi", 'DateTime'>
    readonly diperbaruiPada: FieldRef<"transaksi", 'DateTime'>
    readonly escrowId: FieldRef<"transaksi", 'String'>
    readonly expiredAt: FieldRef<"transaksi", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * transaksi findUnique
   */
  export type transaksiFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter, which transaksi to fetch.
     */
    where: transaksiWhereUniqueInput
  }

  /**
   * transaksi findUniqueOrThrow
   */
  export type transaksiFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter, which transaksi to fetch.
     */
    where: transaksiWhereUniqueInput
  }

  /**
   * transaksi findFirst
   */
  export type transaksiFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter, which transaksi to fetch.
     */
    where?: transaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaksis to fetch.
     */
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transaksis.
     */
    cursor?: transaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transaksis.
     */
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * transaksi findFirstOrThrow
   */
  export type transaksiFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter, which transaksi to fetch.
     */
    where?: transaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaksis to fetch.
     */
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for transaksis.
     */
    cursor?: transaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaksis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of transaksis.
     */
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * transaksi findMany
   */
  export type transaksiFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter, which transaksis to fetch.
     */
    where?: transaksiWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of transaksis to fetch.
     */
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing transaksis.
     */
    cursor?: transaksiWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` transaksis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` transaksis.
     */
    skip?: number
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * transaksi create
   */
  export type transaksiCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * The data needed to create a transaksi.
     */
    data: XOR<transaksiCreateInput, transaksiUncheckedCreateInput>
  }

  /**
   * transaksi createMany
   */
  export type transaksiCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many transaksis.
     */
    data: transaksiCreateManyInput | transaksiCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * transaksi update
   */
  export type transaksiUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * The data needed to update a transaksi.
     */
    data: XOR<transaksiUpdateInput, transaksiUncheckedUpdateInput>
    /**
     * Choose, which transaksi to update.
     */
    where: transaksiWhereUniqueInput
  }

  /**
   * transaksi updateMany
   */
  export type transaksiUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update transaksis.
     */
    data: XOR<transaksiUpdateManyMutationInput, transaksiUncheckedUpdateManyInput>
    /**
     * Filter which transaksis to update
     */
    where?: transaksiWhereInput
  }

  /**
   * transaksi upsert
   */
  export type transaksiUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * The filter to search for the transaksi to update in case it exists.
     */
    where: transaksiWhereUniqueInput
    /**
     * In case the transaksi found by the `where` argument doesn't exist, create a new transaksi with this data.
     */
    create: XOR<transaksiCreateInput, transaksiUncheckedCreateInput>
    /**
     * In case the transaksi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<transaksiUpdateInput, transaksiUncheckedUpdateInput>
  }

  /**
   * transaksi delete
   */
  export type transaksiDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    /**
     * Filter which transaksi to delete.
     */
    where: transaksiWhereUniqueInput
  }

  /**
   * transaksi deleteMany
   */
  export type transaksiDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which transaksis to delete
     */
    where?: transaksiWhereInput
  }

  /**
   * transaksi.notifikasi
   */
  export type transaksi$notifikasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    where?: notifikasiWhereInput
    orderBy?: notifikasiOrderByWithRelationInput | notifikasiOrderByWithRelationInput[]
    cursor?: notifikasiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotifikasiScalarFieldEnum | NotifikasiScalarFieldEnum[]
  }

  /**
   * transaksi.sengketa
   */
  export type transaksi$sengketaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sengketa
     */
    select?: sengketaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sengketaInclude<ExtArgs> | null
    where?: sengketaWhereInput
  }

  /**
   * transaksi without action
   */
  export type transaksiDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
  }


  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    role: $Enums.user_role | null
    walletAddress: string | null
    dibuatPada: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    password: string | null
    role: $Enums.user_role | null
    walletAddress: string | null
    dibuatPada: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    password: number
    role: number
    walletAddress: number
    dibuatPada: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    password?: true
    role?: true
    walletAddress?: true
    dibuatPada?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    password?: true
    role?: true
    walletAddress?: true
    dibuatPada?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    password?: true
    role?: true
    walletAddress?: true
    dibuatPada?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    password: string
    role: $Enums.user_role
    walletAddress: string | null
    dibuatPada: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    walletAddress?: boolean
    dibuatPada?: boolean
    aplikasiPenjual?: boolean | user$aplikasiPenjualArgs<ExtArgs>
    notifikasi?: boolean | user$notifikasiArgs<ExtArgs>
    produk?: boolean | user$produkArgs<ExtArgs>
    profile?: boolean | user$profileArgs<ExtArgs>
    transaksi_transaksi_pembeliIdTouser?: boolean | user$transaksi_transaksi_pembeliIdTouserArgs<ExtArgs>
    transaksi_transaksi_penjualIdTouser?: boolean | user$transaksi_transaksi_penjualIdTouserArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>


  export type userSelectScalar = {
    id?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    walletAddress?: boolean
    dibuatPada?: boolean
  }

  export type userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    aplikasiPenjual?: boolean | user$aplikasiPenjualArgs<ExtArgs>
    notifikasi?: boolean | user$notifikasiArgs<ExtArgs>
    produk?: boolean | user$produkArgs<ExtArgs>
    profile?: boolean | user$profileArgs<ExtArgs>
    transaksi_transaksi_pembeliIdTouser?: boolean | user$transaksi_transaksi_pembeliIdTouserArgs<ExtArgs>
    transaksi_transaksi_penjualIdTouser?: boolean | user$transaksi_transaksi_penjualIdTouserArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {
      aplikasiPenjual: Prisma.$aplikasi_penjualPayload<ExtArgs> | null
      notifikasi: Prisma.$notifikasiPayload<ExtArgs>[]
      produk: Prisma.$produkPayload<ExtArgs>[]
      profile: Prisma.$profilePayload<ExtArgs> | null
      transaksi_transaksi_pembeliIdTouser: Prisma.$transaksiPayload<ExtArgs>[]
      transaksi_transaksi_penjualIdTouser: Prisma.$transaksiPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      password: string
      role: $Enums.user_role
      walletAddress: string | null
      dibuatPada: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends userFindUniqueArgs>(args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs>(args: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends userFindFirstArgs>(args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends userFindFirstOrThrowArgs>(args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends userFindManyArgs>(args?: SelectSubset<T, userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends userCreateArgs>(args: SelectSubset<T, userCreateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {userCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends userCreateManyArgs>(args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends userDeleteArgs>(args: SelectSubset<T, userDeleteArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends userUpdateArgs>(args: SelectSubset<T, userUpdateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends userDeleteManyArgs>(args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends userUpdateManyArgs>(args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends userUpsertArgs>(args: SelectSubset<T, userUpsertArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    aplikasiPenjual<T extends user$aplikasiPenjualArgs<ExtArgs> = {}>(args?: Subset<T, user$aplikasiPenjualArgs<ExtArgs>>): Prisma__aplikasi_penjualClient<$Result.GetResult<Prisma.$aplikasi_penjualPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    notifikasi<T extends user$notifikasiArgs<ExtArgs> = {}>(args?: Subset<T, user$notifikasiArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notifikasiPayload<ExtArgs>, T, "findMany"> | Null>
    produk<T extends user$produkArgs<ExtArgs> = {}>(args?: Subset<T, user$produkArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produkPayload<ExtArgs>, T, "findMany"> | Null>
    profile<T extends user$profileArgs<ExtArgs> = {}>(args?: Subset<T, user$profileArgs<ExtArgs>>): Prisma__profileClient<$Result.GetResult<Prisma.$profilePayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    transaksi_transaksi_pembeliIdTouser<T extends user$transaksi_transaksi_pembeliIdTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$transaksi_transaksi_pembeliIdTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findMany"> | Null>
    transaksi_transaksi_penjualIdTouser<T extends user$transaksi_transaksi_penjualIdTouserArgs<ExtArgs> = {}>(args?: Subset<T, user$transaksi_transaksi_penjualIdTouserArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$transaksiPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user model
   */ 
  interface userFieldRefs {
    readonly id: FieldRef<"user", 'String'>
    readonly email: FieldRef<"user", 'String'>
    readonly password: FieldRef<"user", 'String'>
    readonly role: FieldRef<"user", 'user_role'>
    readonly walletAddress: FieldRef<"user", 'String'>
    readonly dibuatPada: FieldRef<"user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data: XOR<userCreateInput, userUncheckedCreateInput>
  }

  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }

  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
  }

  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }

  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }

  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
  }

  /**
   * user.aplikasiPenjual
   */
  export type user$aplikasiPenjualArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
    where?: aplikasi_penjualWhereInput
  }

  /**
   * user.notifikasi
   */
  export type user$notifikasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifikasi
     */
    select?: notifikasiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notifikasiInclude<ExtArgs> | null
    where?: notifikasiWhereInput
    orderBy?: notifikasiOrderByWithRelationInput | notifikasiOrderByWithRelationInput[]
    cursor?: notifikasiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotifikasiScalarFieldEnum | NotifikasiScalarFieldEnum[]
  }

  /**
   * user.produk
   */
  export type user$produkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produk
     */
    select?: produkSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produkInclude<ExtArgs> | null
    where?: produkWhereInput
    orderBy?: produkOrderByWithRelationInput | produkOrderByWithRelationInput[]
    cursor?: produkWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProdukScalarFieldEnum | ProdukScalarFieldEnum[]
  }

  /**
   * user.profile
   */
  export type user$profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the profile
     */
    select?: profileSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: profileInclude<ExtArgs> | null
    where?: profileWhereInput
  }

  /**
   * user.transaksi_transaksi_pembeliIdTouser
   */
  export type user$transaksi_transaksi_pembeliIdTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    where?: transaksiWhereInput
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    cursor?: transaksiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * user.transaksi_transaksi_penjualIdTouser
   */
  export type user$transaksi_transaksi_penjualIdTouserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the transaksi
     */
    select?: transaksiSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: transaksiInclude<ExtArgs> | null
    where?: transaksiWhereInput
    orderBy?: transaksiOrderByWithRelationInput | transaksiOrderByWithRelationInput[]
    cursor?: transaksiWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TransaksiScalarFieldEnum | TransaksiScalarFieldEnum[]
  }

  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
  }


  /**
   * Model aplikasi_penjual
   */

  export type AggregateAplikasi_penjual = {
    _count: Aplikasi_penjualCountAggregateOutputType | null
    _min: Aplikasi_penjualMinAggregateOutputType | null
    _max: Aplikasi_penjualMaxAggregateOutputType | null
  }

  export type Aplikasi_penjualMinAggregateOutputType = {
    id: string | null
    userId: string | null
    nomor_telepon: string | null
    nomor_whatsapp: string | null
    alamat: string | null
    alasan_jual: string | null
    status: $Enums.status_aplikasi | null
    catatan_admin: string | null
    diajukan_pada: Date | null
    diperbarui: Date | null
  }

  export type Aplikasi_penjualMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    nomor_telepon: string | null
    nomor_whatsapp: string | null
    alamat: string | null
    alasan_jual: string | null
    status: $Enums.status_aplikasi | null
    catatan_admin: string | null
    diajukan_pada: Date | null
    diperbarui: Date | null
  }

  export type Aplikasi_penjualCountAggregateOutputType = {
    id: number
    userId: number
    nomor_telepon: number
    nomor_whatsapp: number
    alamat: number
    alasan_jual: number
    status: number
    catatan_admin: number
    diajukan_pada: number
    diperbarui: number
    _all: number
  }


  export type Aplikasi_penjualMinAggregateInputType = {
    id?: true
    userId?: true
    nomor_telepon?: true
    nomor_whatsapp?: true
    alamat?: true
    alasan_jual?: true
    status?: true
    catatan_admin?: true
    diajukan_pada?: true
    diperbarui?: true
  }

  export type Aplikasi_penjualMaxAggregateInputType = {
    id?: true
    userId?: true
    nomor_telepon?: true
    nomor_whatsapp?: true
    alamat?: true
    alasan_jual?: true
    status?: true
    catatan_admin?: true
    diajukan_pada?: true
    diperbarui?: true
  }

  export type Aplikasi_penjualCountAggregateInputType = {
    id?: true
    userId?: true
    nomor_telepon?: true
    nomor_whatsapp?: true
    alamat?: true
    alasan_jual?: true
    status?: true
    catatan_admin?: true
    diajukan_pada?: true
    diperbarui?: true
    _all?: true
  }

  export type Aplikasi_penjualAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which aplikasi_penjual to aggregate.
     */
    where?: aplikasi_penjualWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aplikasi_penjuals to fetch.
     */
    orderBy?: aplikasi_penjualOrderByWithRelationInput | aplikasi_penjualOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: aplikasi_penjualWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aplikasi_penjuals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aplikasi_penjuals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned aplikasi_penjuals
    **/
    _count?: true | Aplikasi_penjualCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Aplikasi_penjualMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Aplikasi_penjualMaxAggregateInputType
  }

  export type GetAplikasi_penjualAggregateType<T extends Aplikasi_penjualAggregateArgs> = {
        [P in keyof T & keyof AggregateAplikasi_penjual]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAplikasi_penjual[P]>
      : GetScalarType<T[P], AggregateAplikasi_penjual[P]>
  }




  export type aplikasi_penjualGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: aplikasi_penjualWhereInput
    orderBy?: aplikasi_penjualOrderByWithAggregationInput | aplikasi_penjualOrderByWithAggregationInput[]
    by: Aplikasi_penjualScalarFieldEnum[] | Aplikasi_penjualScalarFieldEnum
    having?: aplikasi_penjualScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Aplikasi_penjualCountAggregateInputType | true
    _min?: Aplikasi_penjualMinAggregateInputType
    _max?: Aplikasi_penjualMaxAggregateInputType
  }

  export type Aplikasi_penjualGroupByOutputType = {
    id: string
    userId: string
    nomor_telepon: string | null
    nomor_whatsapp: string | null
    alamat: string | null
    alasan_jual: string | null
    status: $Enums.status_aplikasi
    catatan_admin: string | null
    diajukan_pada: Date | null
    diperbarui: Date | null
    _count: Aplikasi_penjualCountAggregateOutputType | null
    _min: Aplikasi_penjualMinAggregateOutputType | null
    _max: Aplikasi_penjualMaxAggregateOutputType | null
  }

  type GetAplikasi_penjualGroupByPayload<T extends aplikasi_penjualGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Aplikasi_penjualGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Aplikasi_penjualGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Aplikasi_penjualGroupByOutputType[P]>
            : GetScalarType<T[P], Aplikasi_penjualGroupByOutputType[P]>
        }
      >
    >


  export type aplikasi_penjualSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    nomor_telepon?: boolean
    nomor_whatsapp?: boolean
    alamat?: boolean
    alasan_jual?: boolean
    status?: boolean
    catatan_admin?: boolean
    diajukan_pada?: boolean
    diperbarui?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["aplikasi_penjual"]>


  export type aplikasi_penjualSelectScalar = {
    id?: boolean
    userId?: boolean
    nomor_telepon?: boolean
    nomor_whatsapp?: boolean
    alamat?: boolean
    alasan_jual?: boolean
    status?: boolean
    catatan_admin?: boolean
    diajukan_pada?: boolean
    diperbarui?: boolean
  }

  export type aplikasi_penjualInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $aplikasi_penjualPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "aplikasi_penjual"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      nomor_telepon: string | null
      nomor_whatsapp: string | null
      alamat: string | null
      alasan_jual: string | null
      status: $Enums.status_aplikasi
      catatan_admin: string | null
      diajukan_pada: Date | null
      diperbarui: Date | null
    }, ExtArgs["result"]["aplikasi_penjual"]>
    composites: {}
  }

  type aplikasi_penjualGetPayload<S extends boolean | null | undefined | aplikasi_penjualDefaultArgs> = $Result.GetResult<Prisma.$aplikasi_penjualPayload, S>

  type aplikasi_penjualCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<aplikasi_penjualFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Aplikasi_penjualCountAggregateInputType | true
    }

  export interface aplikasi_penjualDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['aplikasi_penjual'], meta: { name: 'aplikasi_penjual' } }
    /**
     * Find zero or one Aplikasi_penjual that matches the filter.
     * @param {aplikasi_penjualFindUniqueArgs} args - Arguments to find a Aplikasi_penjual
     * @example
     * // Get one Aplikasi_penjual
     * const aplikasi_penjual = await prisma.aplikasi_penjual.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends aplikasi_penjualFindUniqueArgs>(args: SelectSubset<T, aplikasi_penjualFindUniqueArgs<ExtArgs>>): Prisma__aplikasi_penjualClient<$Result.GetResult<Prisma.$aplikasi_penjualPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Aplikasi_penjual that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {aplikasi_penjualFindUniqueOrThrowArgs} args - Arguments to find a Aplikasi_penjual
     * @example
     * // Get one Aplikasi_penjual
     * const aplikasi_penjual = await prisma.aplikasi_penjual.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends aplikasi_penjualFindUniqueOrThrowArgs>(args: SelectSubset<T, aplikasi_penjualFindUniqueOrThrowArgs<ExtArgs>>): Prisma__aplikasi_penjualClient<$Result.GetResult<Prisma.$aplikasi_penjualPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Aplikasi_penjual that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aplikasi_penjualFindFirstArgs} args - Arguments to find a Aplikasi_penjual
     * @example
     * // Get one Aplikasi_penjual
     * const aplikasi_penjual = await prisma.aplikasi_penjual.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends aplikasi_penjualFindFirstArgs>(args?: SelectSubset<T, aplikasi_penjualFindFirstArgs<ExtArgs>>): Prisma__aplikasi_penjualClient<$Result.GetResult<Prisma.$aplikasi_penjualPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Aplikasi_penjual that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aplikasi_penjualFindFirstOrThrowArgs} args - Arguments to find a Aplikasi_penjual
     * @example
     * // Get one Aplikasi_penjual
     * const aplikasi_penjual = await prisma.aplikasi_penjual.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends aplikasi_penjualFindFirstOrThrowArgs>(args?: SelectSubset<T, aplikasi_penjualFindFirstOrThrowArgs<ExtArgs>>): Prisma__aplikasi_penjualClient<$Result.GetResult<Prisma.$aplikasi_penjualPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Aplikasi_penjuals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aplikasi_penjualFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Aplikasi_penjuals
     * const aplikasi_penjuals = await prisma.aplikasi_penjual.findMany()
     * 
     * // Get first 10 Aplikasi_penjuals
     * const aplikasi_penjuals = await prisma.aplikasi_penjual.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const aplikasi_penjualWithIdOnly = await prisma.aplikasi_penjual.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends aplikasi_penjualFindManyArgs>(args?: SelectSubset<T, aplikasi_penjualFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$aplikasi_penjualPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Aplikasi_penjual.
     * @param {aplikasi_penjualCreateArgs} args - Arguments to create a Aplikasi_penjual.
     * @example
     * // Create one Aplikasi_penjual
     * const Aplikasi_penjual = await prisma.aplikasi_penjual.create({
     *   data: {
     *     // ... data to create a Aplikasi_penjual
     *   }
     * })
     * 
     */
    create<T extends aplikasi_penjualCreateArgs>(args: SelectSubset<T, aplikasi_penjualCreateArgs<ExtArgs>>): Prisma__aplikasi_penjualClient<$Result.GetResult<Prisma.$aplikasi_penjualPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Aplikasi_penjuals.
     * @param {aplikasi_penjualCreateManyArgs} args - Arguments to create many Aplikasi_penjuals.
     * @example
     * // Create many Aplikasi_penjuals
     * const aplikasi_penjual = await prisma.aplikasi_penjual.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends aplikasi_penjualCreateManyArgs>(args?: SelectSubset<T, aplikasi_penjualCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Aplikasi_penjual.
     * @param {aplikasi_penjualDeleteArgs} args - Arguments to delete one Aplikasi_penjual.
     * @example
     * // Delete one Aplikasi_penjual
     * const Aplikasi_penjual = await prisma.aplikasi_penjual.delete({
     *   where: {
     *     // ... filter to delete one Aplikasi_penjual
     *   }
     * })
     * 
     */
    delete<T extends aplikasi_penjualDeleteArgs>(args: SelectSubset<T, aplikasi_penjualDeleteArgs<ExtArgs>>): Prisma__aplikasi_penjualClient<$Result.GetResult<Prisma.$aplikasi_penjualPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Aplikasi_penjual.
     * @param {aplikasi_penjualUpdateArgs} args - Arguments to update one Aplikasi_penjual.
     * @example
     * // Update one Aplikasi_penjual
     * const aplikasi_penjual = await prisma.aplikasi_penjual.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends aplikasi_penjualUpdateArgs>(args: SelectSubset<T, aplikasi_penjualUpdateArgs<ExtArgs>>): Prisma__aplikasi_penjualClient<$Result.GetResult<Prisma.$aplikasi_penjualPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Aplikasi_penjuals.
     * @param {aplikasi_penjualDeleteManyArgs} args - Arguments to filter Aplikasi_penjuals to delete.
     * @example
     * // Delete a few Aplikasi_penjuals
     * const { count } = await prisma.aplikasi_penjual.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends aplikasi_penjualDeleteManyArgs>(args?: SelectSubset<T, aplikasi_penjualDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Aplikasi_penjuals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aplikasi_penjualUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Aplikasi_penjuals
     * const aplikasi_penjual = await prisma.aplikasi_penjual.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends aplikasi_penjualUpdateManyArgs>(args: SelectSubset<T, aplikasi_penjualUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Aplikasi_penjual.
     * @param {aplikasi_penjualUpsertArgs} args - Arguments to update or create a Aplikasi_penjual.
     * @example
     * // Update or create a Aplikasi_penjual
     * const aplikasi_penjual = await prisma.aplikasi_penjual.upsert({
     *   create: {
     *     // ... data to create a Aplikasi_penjual
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Aplikasi_penjual we want to update
     *   }
     * })
     */
    upsert<T extends aplikasi_penjualUpsertArgs>(args: SelectSubset<T, aplikasi_penjualUpsertArgs<ExtArgs>>): Prisma__aplikasi_penjualClient<$Result.GetResult<Prisma.$aplikasi_penjualPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Aplikasi_penjuals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aplikasi_penjualCountArgs} args - Arguments to filter Aplikasi_penjuals to count.
     * @example
     * // Count the number of Aplikasi_penjuals
     * const count = await prisma.aplikasi_penjual.count({
     *   where: {
     *     // ... the filter for the Aplikasi_penjuals we want to count
     *   }
     * })
    **/
    count<T extends aplikasi_penjualCountArgs>(
      args?: Subset<T, aplikasi_penjualCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Aplikasi_penjualCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Aplikasi_penjual.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Aplikasi_penjualAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Aplikasi_penjualAggregateArgs>(args: Subset<T, Aplikasi_penjualAggregateArgs>): Prisma.PrismaPromise<GetAplikasi_penjualAggregateType<T>>

    /**
     * Group by Aplikasi_penjual.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {aplikasi_penjualGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends aplikasi_penjualGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: aplikasi_penjualGroupByArgs['orderBy'] }
        : { orderBy?: aplikasi_penjualGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, aplikasi_penjualGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAplikasi_penjualGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the aplikasi_penjual model
   */
  readonly fields: aplikasi_penjualFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for aplikasi_penjual.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__aplikasi_penjualClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the aplikasi_penjual model
   */ 
  interface aplikasi_penjualFieldRefs {
    readonly id: FieldRef<"aplikasi_penjual", 'String'>
    readonly userId: FieldRef<"aplikasi_penjual", 'String'>
    readonly nomor_telepon: FieldRef<"aplikasi_penjual", 'String'>
    readonly nomor_whatsapp: FieldRef<"aplikasi_penjual", 'String'>
    readonly alamat: FieldRef<"aplikasi_penjual", 'String'>
    readonly alasan_jual: FieldRef<"aplikasi_penjual", 'String'>
    readonly status: FieldRef<"aplikasi_penjual", 'status_aplikasi'>
    readonly catatan_admin: FieldRef<"aplikasi_penjual", 'String'>
    readonly diajukan_pada: FieldRef<"aplikasi_penjual", 'DateTime'>
    readonly diperbarui: FieldRef<"aplikasi_penjual", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * aplikasi_penjual findUnique
   */
  export type aplikasi_penjualFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
    /**
     * Filter, which aplikasi_penjual to fetch.
     */
    where: aplikasi_penjualWhereUniqueInput
  }

  /**
   * aplikasi_penjual findUniqueOrThrow
   */
  export type aplikasi_penjualFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
    /**
     * Filter, which aplikasi_penjual to fetch.
     */
    where: aplikasi_penjualWhereUniqueInput
  }

  /**
   * aplikasi_penjual findFirst
   */
  export type aplikasi_penjualFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
    /**
     * Filter, which aplikasi_penjual to fetch.
     */
    where?: aplikasi_penjualWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aplikasi_penjuals to fetch.
     */
    orderBy?: aplikasi_penjualOrderByWithRelationInput | aplikasi_penjualOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for aplikasi_penjuals.
     */
    cursor?: aplikasi_penjualWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aplikasi_penjuals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aplikasi_penjuals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of aplikasi_penjuals.
     */
    distinct?: Aplikasi_penjualScalarFieldEnum | Aplikasi_penjualScalarFieldEnum[]
  }

  /**
   * aplikasi_penjual findFirstOrThrow
   */
  export type aplikasi_penjualFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
    /**
     * Filter, which aplikasi_penjual to fetch.
     */
    where?: aplikasi_penjualWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aplikasi_penjuals to fetch.
     */
    orderBy?: aplikasi_penjualOrderByWithRelationInput | aplikasi_penjualOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for aplikasi_penjuals.
     */
    cursor?: aplikasi_penjualWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aplikasi_penjuals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aplikasi_penjuals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of aplikasi_penjuals.
     */
    distinct?: Aplikasi_penjualScalarFieldEnum | Aplikasi_penjualScalarFieldEnum[]
  }

  /**
   * aplikasi_penjual findMany
   */
  export type aplikasi_penjualFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
    /**
     * Filter, which aplikasi_penjuals to fetch.
     */
    where?: aplikasi_penjualWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of aplikasi_penjuals to fetch.
     */
    orderBy?: aplikasi_penjualOrderByWithRelationInput | aplikasi_penjualOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing aplikasi_penjuals.
     */
    cursor?: aplikasi_penjualWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` aplikasi_penjuals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` aplikasi_penjuals.
     */
    skip?: number
    distinct?: Aplikasi_penjualScalarFieldEnum | Aplikasi_penjualScalarFieldEnum[]
  }

  /**
   * aplikasi_penjual create
   */
  export type aplikasi_penjualCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
    /**
     * The data needed to create a aplikasi_penjual.
     */
    data: XOR<aplikasi_penjualCreateInput, aplikasi_penjualUncheckedCreateInput>
  }

  /**
   * aplikasi_penjual createMany
   */
  export type aplikasi_penjualCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many aplikasi_penjuals.
     */
    data: aplikasi_penjualCreateManyInput | aplikasi_penjualCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * aplikasi_penjual update
   */
  export type aplikasi_penjualUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
    /**
     * The data needed to update a aplikasi_penjual.
     */
    data: XOR<aplikasi_penjualUpdateInput, aplikasi_penjualUncheckedUpdateInput>
    /**
     * Choose, which aplikasi_penjual to update.
     */
    where: aplikasi_penjualWhereUniqueInput
  }

  /**
   * aplikasi_penjual updateMany
   */
  export type aplikasi_penjualUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update aplikasi_penjuals.
     */
    data: XOR<aplikasi_penjualUpdateManyMutationInput, aplikasi_penjualUncheckedUpdateManyInput>
    /**
     * Filter which aplikasi_penjuals to update
     */
    where?: aplikasi_penjualWhereInput
  }

  /**
   * aplikasi_penjual upsert
   */
  export type aplikasi_penjualUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
    /**
     * The filter to search for the aplikasi_penjual to update in case it exists.
     */
    where: aplikasi_penjualWhereUniqueInput
    /**
     * In case the aplikasi_penjual found by the `where` argument doesn't exist, create a new aplikasi_penjual with this data.
     */
    create: XOR<aplikasi_penjualCreateInput, aplikasi_penjualUncheckedCreateInput>
    /**
     * In case the aplikasi_penjual was found with the provided `where` argument, update it with this data.
     */
    update: XOR<aplikasi_penjualUpdateInput, aplikasi_penjualUncheckedUpdateInput>
  }

  /**
   * aplikasi_penjual delete
   */
  export type aplikasi_penjualDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
    /**
     * Filter which aplikasi_penjual to delete.
     */
    where: aplikasi_penjualWhereUniqueInput
  }

  /**
   * aplikasi_penjual deleteMany
   */
  export type aplikasi_penjualDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which aplikasi_penjuals to delete
     */
    where?: aplikasi_penjualWhereInput
  }

  /**
   * aplikasi_penjual without action
   */
  export type aplikasi_penjualDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the aplikasi_penjual
     */
    select?: aplikasi_penjualSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: aplikasi_penjualInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const NotifikasiScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    transaksiId: 'transaksiId',
    tipe: 'tipe',
    judul: 'judul',
    pesan: 'pesan',
    dibaca: 'dibaca',
    dibuatPada: 'dibuatPada'
  };

  export type NotifikasiScalarFieldEnum = (typeof NotifikasiScalarFieldEnum)[keyof typeof NotifikasiScalarFieldEnum]


  export const ProdukScalarFieldEnum: {
    id: 'id',
    kodeProduk: 'kodeProduk',
    namaGame: 'namaGame',
    deskripsi: 'deskripsi',
    harga: 'harga',
    penjualId: 'penjualId',
    statusJual: 'statusJual',
    gambar: 'gambar',
    judulProduk: 'judulProduk',
    dibuatPada: 'dibuatPada',
    diperbaruiPada: 'diperbaruiPada',
    statusProduk: 'statusProduk',
    hargaEth: 'hargaEth'
  };

  export type ProdukScalarFieldEnum = (typeof ProdukScalarFieldEnum)[keyof typeof ProdukScalarFieldEnum]


  export const ProfileScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    nama: 'nama',
    nomor_telepon: 'nomor_telepon',
    alamat: 'alamat',
    nomor_whatsapp: 'nomor_whatsapp'
  };

  export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


  export const RiwayattransaksiScalarFieldEnum: {
    id: 'id',
    kodeTransaksi: 'kodeTransaksi',
    namaGame: 'namaGame',
    harga: 'harga',
    walletPenjual: 'walletPenjual',
    walletPembeli: 'walletPembeli',
    tanggalSelesai: 'tanggalSelesai',
    dibuatPada: 'dibuatPada'
  };

  export type RiwayattransaksiScalarFieldEnum = (typeof RiwayattransaksiScalarFieldEnum)[keyof typeof RiwayattransaksiScalarFieldEnum]


  export const SengketaScalarFieldEnum: {
    id: 'id',
    transaksiId: 'transaksiId',
    deskripsi: 'deskripsi',
    adminNote: 'adminNote',
    dibuatPada: 'dibuatPada',
    disputeType: 'disputeType',
    paymentMethod: 'paymentMethod',
    paymentTxHash: 'paymentTxHash',
    pembeliBukti: 'pembeliBukti',
    penjualBukti: 'penjualBukti',
    resolution: 'resolution',
    resolvedAt: 'resolvedAt',
    status: 'status'
  };

  export type SengketaScalarFieldEnum = (typeof SengketaScalarFieldEnum)[keyof typeof SengketaScalarFieldEnum]


  export const TransaksiScalarFieldEnum: {
    id: 'id',
    kodeTransaksi: 'kodeTransaksi',
    produkId: 'produkId',
    pembeliId: 'pembeliId',
    penjualId: 'penjualId',
    status: 'status',
    waktuBayar: 'waktuBayar',
    waktuSelesai: 'waktuSelesai',
    contractAddress: 'contractAddress',
    escrowAmount: 'escrowAmount',
    smartContractTxHash: 'smartContractTxHash',
    accountData: 'accountData',
    deskripsiBukti: 'deskripsiBukti',
    adminRefundAt: 'adminRefundAt',
    adminRefundBy: 'adminRefundBy',
    adminRefundNote: 'adminRefundNote',
    adminRefundTxHash: 'adminRefundTxHash',
    adminReleaseAt: 'adminReleaseAt',
    adminReleaseBy: 'adminReleaseBy',
    adminReleaseNote: 'adminReleaseNote',
    adminReleaseTxHash: 'adminReleaseTxHash',
    dibuatPada: 'dibuatPada',
    diperbaruiPada: 'diperbaruiPada',
    escrowId: 'escrowId',
    expiredAt: 'expiredAt'
  };

  export type TransaksiScalarFieldEnum = (typeof TransaksiScalarFieldEnum)[keyof typeof TransaksiScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    password: 'password',
    role: 'role',
    walletAddress: 'walletAddress',
    dibuatPada: 'dibuatPada'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const Aplikasi_penjualScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    nomor_telepon: 'nomor_telepon',
    nomor_whatsapp: 'nomor_whatsapp',
    alamat: 'alamat',
    alasan_jual: 'alasan_jual',
    status: 'status',
    catatan_admin: 'catatan_admin',
    diajukan_pada: 'diajukan_pada',
    diperbarui: 'diperbarui'
  };

  export type Aplikasi_penjualScalarFieldEnum = (typeof Aplikasi_penjualScalarFieldEnum)[keyof typeof Aplikasi_penjualScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'notifikasi_tipe'
   */
  export type Enumnotifikasi_tipeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'notifikasi_tipe'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'produk_statusProduk'
   */
  export type Enumproduk_statusProdukFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'produk_statusProduk'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'sengketa_disputeType'
   */
  export type Enumsengketa_disputeTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'sengketa_disputeType'>
    


  /**
   * Reference to a field of type 'sengketa_status'
   */
  export type Enumsengketa_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'sengketa_status'>
    


  /**
   * Reference to a field of type 'transaksi_status'
   */
  export type Enumtransaksi_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'transaksi_status'>
    


  /**
   * Reference to a field of type 'user_role'
   */
  export type Enumuser_roleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_role'>
    


  /**
   * Reference to a field of type 'status_aplikasi'
   */
  export type Enumstatus_aplikasiFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'status_aplikasi'>
    
  /**
   * Deep Input Types
   */


  export type notifikasiWhereInput = {
    AND?: notifikasiWhereInput | notifikasiWhereInput[]
    OR?: notifikasiWhereInput[]
    NOT?: notifikasiWhereInput | notifikasiWhereInput[]
    id?: StringFilter<"notifikasi"> | string
    userId?: StringFilter<"notifikasi"> | string
    transaksiId?: StringNullableFilter<"notifikasi"> | string | null
    tipe?: Enumnotifikasi_tipeFilter<"notifikasi"> | $Enums.notifikasi_tipe
    judul?: StringFilter<"notifikasi"> | string
    pesan?: StringFilter<"notifikasi"> | string
    dibaca?: BoolFilter<"notifikasi"> | boolean
    dibuatPada?: DateTimeFilter<"notifikasi"> | Date | string
    transaksi?: XOR<TransaksiNullableRelationFilter, transaksiWhereInput> | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type notifikasiOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    transaksiId?: SortOrderInput | SortOrder
    tipe?: SortOrder
    judul?: SortOrder
    pesan?: SortOrder
    dibaca?: SortOrder
    dibuatPada?: SortOrder
    transaksi?: transaksiOrderByWithRelationInput
    user?: userOrderByWithRelationInput
  }

  export type notifikasiWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: notifikasiWhereInput | notifikasiWhereInput[]
    OR?: notifikasiWhereInput[]
    NOT?: notifikasiWhereInput | notifikasiWhereInput[]
    userId?: StringFilter<"notifikasi"> | string
    transaksiId?: StringNullableFilter<"notifikasi"> | string | null
    tipe?: Enumnotifikasi_tipeFilter<"notifikasi"> | $Enums.notifikasi_tipe
    judul?: StringFilter<"notifikasi"> | string
    pesan?: StringFilter<"notifikasi"> | string
    dibaca?: BoolFilter<"notifikasi"> | boolean
    dibuatPada?: DateTimeFilter<"notifikasi"> | Date | string
    transaksi?: XOR<TransaksiNullableRelationFilter, transaksiWhereInput> | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "id">

  export type notifikasiOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    transaksiId?: SortOrderInput | SortOrder
    tipe?: SortOrder
    judul?: SortOrder
    pesan?: SortOrder
    dibaca?: SortOrder
    dibuatPada?: SortOrder
    _count?: notifikasiCountOrderByAggregateInput
    _max?: notifikasiMaxOrderByAggregateInput
    _min?: notifikasiMinOrderByAggregateInput
  }

  export type notifikasiScalarWhereWithAggregatesInput = {
    AND?: notifikasiScalarWhereWithAggregatesInput | notifikasiScalarWhereWithAggregatesInput[]
    OR?: notifikasiScalarWhereWithAggregatesInput[]
    NOT?: notifikasiScalarWhereWithAggregatesInput | notifikasiScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"notifikasi"> | string
    userId?: StringWithAggregatesFilter<"notifikasi"> | string
    transaksiId?: StringNullableWithAggregatesFilter<"notifikasi"> | string | null
    tipe?: Enumnotifikasi_tipeWithAggregatesFilter<"notifikasi"> | $Enums.notifikasi_tipe
    judul?: StringWithAggregatesFilter<"notifikasi"> | string
    pesan?: StringWithAggregatesFilter<"notifikasi"> | string
    dibaca?: BoolWithAggregatesFilter<"notifikasi"> | boolean
    dibuatPada?: DateTimeWithAggregatesFilter<"notifikasi"> | Date | string
  }

  export type produkWhereInput = {
    AND?: produkWhereInput | produkWhereInput[]
    OR?: produkWhereInput[]
    NOT?: produkWhereInput | produkWhereInput[]
    id?: StringFilter<"produk"> | string
    kodeProduk?: StringFilter<"produk"> | string
    namaGame?: StringFilter<"produk"> | string
    deskripsi?: StringNullableFilter<"produk"> | string | null
    harga?: IntFilter<"produk"> | number
    penjualId?: StringFilter<"produk"> | string
    statusJual?: BoolFilter<"produk"> | boolean
    gambar?: StringNullableFilter<"produk"> | string | null
    judulProduk?: StringFilter<"produk"> | string
    dibuatPada?: DateTimeFilter<"produk"> | Date | string
    diperbaruiPada?: DateTimeFilter<"produk"> | Date | string
    statusProduk?: Enumproduk_statusProdukNullableFilter<"produk"> | $Enums.produk_statusProduk | null
    hargaEth?: FloatNullableFilter<"produk"> | number | null
    user?: XOR<UserRelationFilter, userWhereInput>
    transaksi?: TransaksiListRelationFilter
  }

  export type produkOrderByWithRelationInput = {
    id?: SortOrder
    kodeProduk?: SortOrder
    namaGame?: SortOrder
    deskripsi?: SortOrderInput | SortOrder
    harga?: SortOrder
    penjualId?: SortOrder
    statusJual?: SortOrder
    gambar?: SortOrderInput | SortOrder
    judulProduk?: SortOrder
    dibuatPada?: SortOrder
    diperbaruiPada?: SortOrder
    statusProduk?: SortOrderInput | SortOrder
    hargaEth?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
    transaksi?: transaksiOrderByRelationAggregateInput
  }

  export type produkWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    kodeProduk?: string
    AND?: produkWhereInput | produkWhereInput[]
    OR?: produkWhereInput[]
    NOT?: produkWhereInput | produkWhereInput[]
    namaGame?: StringFilter<"produk"> | string
    deskripsi?: StringNullableFilter<"produk"> | string | null
    harga?: IntFilter<"produk"> | number
    penjualId?: StringFilter<"produk"> | string
    statusJual?: BoolFilter<"produk"> | boolean
    gambar?: StringNullableFilter<"produk"> | string | null
    judulProduk?: StringFilter<"produk"> | string
    dibuatPada?: DateTimeFilter<"produk"> | Date | string
    diperbaruiPada?: DateTimeFilter<"produk"> | Date | string
    statusProduk?: Enumproduk_statusProdukNullableFilter<"produk"> | $Enums.produk_statusProduk | null
    hargaEth?: FloatNullableFilter<"produk"> | number | null
    user?: XOR<UserRelationFilter, userWhereInput>
    transaksi?: TransaksiListRelationFilter
  }, "id" | "kodeProduk">

  export type produkOrderByWithAggregationInput = {
    id?: SortOrder
    kodeProduk?: SortOrder
    namaGame?: SortOrder
    deskripsi?: SortOrderInput | SortOrder
    harga?: SortOrder
    penjualId?: SortOrder
    statusJual?: SortOrder
    gambar?: SortOrderInput | SortOrder
    judulProduk?: SortOrder
    dibuatPada?: SortOrder
    diperbaruiPada?: SortOrder
    statusProduk?: SortOrderInput | SortOrder
    hargaEth?: SortOrderInput | SortOrder
    _count?: produkCountOrderByAggregateInput
    _avg?: produkAvgOrderByAggregateInput
    _max?: produkMaxOrderByAggregateInput
    _min?: produkMinOrderByAggregateInput
    _sum?: produkSumOrderByAggregateInput
  }

  export type produkScalarWhereWithAggregatesInput = {
    AND?: produkScalarWhereWithAggregatesInput | produkScalarWhereWithAggregatesInput[]
    OR?: produkScalarWhereWithAggregatesInput[]
    NOT?: produkScalarWhereWithAggregatesInput | produkScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"produk"> | string
    kodeProduk?: StringWithAggregatesFilter<"produk"> | string
    namaGame?: StringWithAggregatesFilter<"produk"> | string
    deskripsi?: StringNullableWithAggregatesFilter<"produk"> | string | null
    harga?: IntWithAggregatesFilter<"produk"> | number
    penjualId?: StringWithAggregatesFilter<"produk"> | string
    statusJual?: BoolWithAggregatesFilter<"produk"> | boolean
    gambar?: StringNullableWithAggregatesFilter<"produk"> | string | null
    judulProduk?: StringWithAggregatesFilter<"produk"> | string
    dibuatPada?: DateTimeWithAggregatesFilter<"produk"> | Date | string
    diperbaruiPada?: DateTimeWithAggregatesFilter<"produk"> | Date | string
    statusProduk?: Enumproduk_statusProdukNullableWithAggregatesFilter<"produk"> | $Enums.produk_statusProduk | null
    hargaEth?: FloatNullableWithAggregatesFilter<"produk"> | number | null
  }

  export type profileWhereInput = {
    AND?: profileWhereInput | profileWhereInput[]
    OR?: profileWhereInput[]
    NOT?: profileWhereInput | profileWhereInput[]
    id?: StringFilter<"profile"> | string
    userId?: StringFilter<"profile"> | string
    nama?: StringFilter<"profile"> | string
    nomor_telepon?: StringNullableFilter<"profile"> | string | null
    alamat?: StringNullableFilter<"profile"> | string | null
    nomor_whatsapp?: StringNullableFilter<"profile"> | string | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type profileOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    nama?: SortOrder
    nomor_telepon?: SortOrderInput | SortOrder
    alamat?: SortOrderInput | SortOrder
    nomor_whatsapp?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
  }

  export type profileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    nomor_telepon?: string
    AND?: profileWhereInput | profileWhereInput[]
    OR?: profileWhereInput[]
    NOT?: profileWhereInput | profileWhereInput[]
    nama?: StringFilter<"profile"> | string
    alamat?: StringNullableFilter<"profile"> | string | null
    nomor_whatsapp?: StringNullableFilter<"profile"> | string | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "id" | "userId" | "nomor_telepon">

  export type profileOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    nama?: SortOrder
    nomor_telepon?: SortOrderInput | SortOrder
    alamat?: SortOrderInput | SortOrder
    nomor_whatsapp?: SortOrderInput | SortOrder
    _count?: profileCountOrderByAggregateInput
    _max?: profileMaxOrderByAggregateInput
    _min?: profileMinOrderByAggregateInput
  }

  export type profileScalarWhereWithAggregatesInput = {
    AND?: profileScalarWhereWithAggregatesInput | profileScalarWhereWithAggregatesInput[]
    OR?: profileScalarWhereWithAggregatesInput[]
    NOT?: profileScalarWhereWithAggregatesInput | profileScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"profile"> | string
    userId?: StringWithAggregatesFilter<"profile"> | string
    nama?: StringWithAggregatesFilter<"profile"> | string
    nomor_telepon?: StringNullableWithAggregatesFilter<"profile"> | string | null
    alamat?: StringNullableWithAggregatesFilter<"profile"> | string | null
    nomor_whatsapp?: StringNullableWithAggregatesFilter<"profile"> | string | null
  }

  export type riwayattransaksiWhereInput = {
    AND?: riwayattransaksiWhereInput | riwayattransaksiWhereInput[]
    OR?: riwayattransaksiWhereInput[]
    NOT?: riwayattransaksiWhereInput | riwayattransaksiWhereInput[]
    id?: StringFilter<"riwayattransaksi"> | string
    kodeTransaksi?: StringFilter<"riwayattransaksi"> | string
    namaGame?: StringFilter<"riwayattransaksi"> | string
    harga?: IntFilter<"riwayattransaksi"> | number
    walletPenjual?: StringFilter<"riwayattransaksi"> | string
    walletPembeli?: StringFilter<"riwayattransaksi"> | string
    tanggalSelesai?: DateTimeFilter<"riwayattransaksi"> | Date | string
    dibuatPada?: DateTimeFilter<"riwayattransaksi"> | Date | string
  }

  export type riwayattransaksiOrderByWithRelationInput = {
    id?: SortOrder
    kodeTransaksi?: SortOrder
    namaGame?: SortOrder
    harga?: SortOrder
    walletPenjual?: SortOrder
    walletPembeli?: SortOrder
    tanggalSelesai?: SortOrder
    dibuatPada?: SortOrder
  }

  export type riwayattransaksiWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: riwayattransaksiWhereInput | riwayattransaksiWhereInput[]
    OR?: riwayattransaksiWhereInput[]
    NOT?: riwayattransaksiWhereInput | riwayattransaksiWhereInput[]
    kodeTransaksi?: StringFilter<"riwayattransaksi"> | string
    namaGame?: StringFilter<"riwayattransaksi"> | string
    harga?: IntFilter<"riwayattransaksi"> | number
    walletPenjual?: StringFilter<"riwayattransaksi"> | string
    walletPembeli?: StringFilter<"riwayattransaksi"> | string
    tanggalSelesai?: DateTimeFilter<"riwayattransaksi"> | Date | string
    dibuatPada?: DateTimeFilter<"riwayattransaksi"> | Date | string
  }, "id">

  export type riwayattransaksiOrderByWithAggregationInput = {
    id?: SortOrder
    kodeTransaksi?: SortOrder
    namaGame?: SortOrder
    harga?: SortOrder
    walletPenjual?: SortOrder
    walletPembeli?: SortOrder
    tanggalSelesai?: SortOrder
    dibuatPada?: SortOrder
    _count?: riwayattransaksiCountOrderByAggregateInput
    _avg?: riwayattransaksiAvgOrderByAggregateInput
    _max?: riwayattransaksiMaxOrderByAggregateInput
    _min?: riwayattransaksiMinOrderByAggregateInput
    _sum?: riwayattransaksiSumOrderByAggregateInput
  }

  export type riwayattransaksiScalarWhereWithAggregatesInput = {
    AND?: riwayattransaksiScalarWhereWithAggregatesInput | riwayattransaksiScalarWhereWithAggregatesInput[]
    OR?: riwayattransaksiScalarWhereWithAggregatesInput[]
    NOT?: riwayattransaksiScalarWhereWithAggregatesInput | riwayattransaksiScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"riwayattransaksi"> | string
    kodeTransaksi?: StringWithAggregatesFilter<"riwayattransaksi"> | string
    namaGame?: StringWithAggregatesFilter<"riwayattransaksi"> | string
    harga?: IntWithAggregatesFilter<"riwayattransaksi"> | number
    walletPenjual?: StringWithAggregatesFilter<"riwayattransaksi"> | string
    walletPembeli?: StringWithAggregatesFilter<"riwayattransaksi"> | string
    tanggalSelesai?: DateTimeWithAggregatesFilter<"riwayattransaksi"> | Date | string
    dibuatPada?: DateTimeWithAggregatesFilter<"riwayattransaksi"> | Date | string
  }

  export type sengketaWhereInput = {
    AND?: sengketaWhereInput | sengketaWhereInput[]
    OR?: sengketaWhereInput[]
    NOT?: sengketaWhereInput | sengketaWhereInput[]
    id?: StringFilter<"sengketa"> | string
    transaksiId?: StringFilter<"sengketa"> | string
    deskripsi?: StringNullableFilter<"sengketa"> | string | null
    adminNote?: StringNullableFilter<"sengketa"> | string | null
    dibuatPada?: DateTimeFilter<"sengketa"> | Date | string
    disputeType?: Enumsengketa_disputeTypeFilter<"sengketa"> | $Enums.sengketa_disputeType
    paymentMethod?: StringNullableFilter<"sengketa"> | string | null
    paymentTxHash?: StringNullableFilter<"sengketa"> | string | null
    pembeliBukti?: StringNullableFilter<"sengketa"> | string | null
    penjualBukti?: StringNullableFilter<"sengketa"> | string | null
    resolution?: StringNullableFilter<"sengketa"> | string | null
    resolvedAt?: DateTimeNullableFilter<"sengketa"> | Date | string | null
    status?: Enumsengketa_statusFilter<"sengketa"> | $Enums.sengketa_status
    transaksi?: XOR<TransaksiRelationFilter, transaksiWhereInput>
  }

  export type sengketaOrderByWithRelationInput = {
    id?: SortOrder
    transaksiId?: SortOrder
    deskripsi?: SortOrderInput | SortOrder
    adminNote?: SortOrderInput | SortOrder
    dibuatPada?: SortOrder
    disputeType?: SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentTxHash?: SortOrderInput | SortOrder
    pembeliBukti?: SortOrderInput | SortOrder
    penjualBukti?: SortOrderInput | SortOrder
    resolution?: SortOrderInput | SortOrder
    resolvedAt?: SortOrderInput | SortOrder
    status?: SortOrder
    transaksi?: transaksiOrderByWithRelationInput
  }

  export type sengketaWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    transaksiId?: string
    AND?: sengketaWhereInput | sengketaWhereInput[]
    OR?: sengketaWhereInput[]
    NOT?: sengketaWhereInput | sengketaWhereInput[]
    deskripsi?: StringNullableFilter<"sengketa"> | string | null
    adminNote?: StringNullableFilter<"sengketa"> | string | null
    dibuatPada?: DateTimeFilter<"sengketa"> | Date | string
    disputeType?: Enumsengketa_disputeTypeFilter<"sengketa"> | $Enums.sengketa_disputeType
    paymentMethod?: StringNullableFilter<"sengketa"> | string | null
    paymentTxHash?: StringNullableFilter<"sengketa"> | string | null
    pembeliBukti?: StringNullableFilter<"sengketa"> | string | null
    penjualBukti?: StringNullableFilter<"sengketa"> | string | null
    resolution?: StringNullableFilter<"sengketa"> | string | null
    resolvedAt?: DateTimeNullableFilter<"sengketa"> | Date | string | null
    status?: Enumsengketa_statusFilter<"sengketa"> | $Enums.sengketa_status
    transaksi?: XOR<TransaksiRelationFilter, transaksiWhereInput>
  }, "id" | "transaksiId">

  export type sengketaOrderByWithAggregationInput = {
    id?: SortOrder
    transaksiId?: SortOrder
    deskripsi?: SortOrderInput | SortOrder
    adminNote?: SortOrderInput | SortOrder
    dibuatPada?: SortOrder
    disputeType?: SortOrder
    paymentMethod?: SortOrderInput | SortOrder
    paymentTxHash?: SortOrderInput | SortOrder
    pembeliBukti?: SortOrderInput | SortOrder
    penjualBukti?: SortOrderInput | SortOrder
    resolution?: SortOrderInput | SortOrder
    resolvedAt?: SortOrderInput | SortOrder
    status?: SortOrder
    _count?: sengketaCountOrderByAggregateInput
    _max?: sengketaMaxOrderByAggregateInput
    _min?: sengketaMinOrderByAggregateInput
  }

  export type sengketaScalarWhereWithAggregatesInput = {
    AND?: sengketaScalarWhereWithAggregatesInput | sengketaScalarWhereWithAggregatesInput[]
    OR?: sengketaScalarWhereWithAggregatesInput[]
    NOT?: sengketaScalarWhereWithAggregatesInput | sengketaScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"sengketa"> | string
    transaksiId?: StringWithAggregatesFilter<"sengketa"> | string
    deskripsi?: StringNullableWithAggregatesFilter<"sengketa"> | string | null
    adminNote?: StringNullableWithAggregatesFilter<"sengketa"> | string | null
    dibuatPada?: DateTimeWithAggregatesFilter<"sengketa"> | Date | string
    disputeType?: Enumsengketa_disputeTypeWithAggregatesFilter<"sengketa"> | $Enums.sengketa_disputeType
    paymentMethod?: StringNullableWithAggregatesFilter<"sengketa"> | string | null
    paymentTxHash?: StringNullableWithAggregatesFilter<"sengketa"> | string | null
    pembeliBukti?: StringNullableWithAggregatesFilter<"sengketa"> | string | null
    penjualBukti?: StringNullableWithAggregatesFilter<"sengketa"> | string | null
    resolution?: StringNullableWithAggregatesFilter<"sengketa"> | string | null
    resolvedAt?: DateTimeNullableWithAggregatesFilter<"sengketa"> | Date | string | null
    status?: Enumsengketa_statusWithAggregatesFilter<"sengketa"> | $Enums.sengketa_status
  }

  export type transaksiWhereInput = {
    AND?: transaksiWhereInput | transaksiWhereInput[]
    OR?: transaksiWhereInput[]
    NOT?: transaksiWhereInput | transaksiWhereInput[]
    id?: StringFilter<"transaksi"> | string
    kodeTransaksi?: StringFilter<"transaksi"> | string
    produkId?: StringFilter<"transaksi"> | string
    pembeliId?: StringFilter<"transaksi"> | string
    penjualId?: StringFilter<"transaksi"> | string
    status?: Enumtransaksi_statusFilter<"transaksi"> | $Enums.transaksi_status
    waktuBayar?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    waktuSelesai?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    contractAddress?: StringNullableFilter<"transaksi"> | string | null
    escrowAmount?: StringNullableFilter<"transaksi"> | string | null
    smartContractTxHash?: StringNullableFilter<"transaksi"> | string | null
    accountData?: StringNullableFilter<"transaksi"> | string | null
    deskripsiBukti?: StringNullableFilter<"transaksi"> | string | null
    adminRefundAt?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    adminRefundBy?: StringNullableFilter<"transaksi"> | string | null
    adminRefundNote?: StringNullableFilter<"transaksi"> | string | null
    adminRefundTxHash?: StringNullableFilter<"transaksi"> | string | null
    adminReleaseAt?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    adminReleaseBy?: StringNullableFilter<"transaksi"> | string | null
    adminReleaseNote?: StringNullableFilter<"transaksi"> | string | null
    adminReleaseTxHash?: StringNullableFilter<"transaksi"> | string | null
    dibuatPada?: DateTimeFilter<"transaksi"> | Date | string
    diperbaruiPada?: DateTimeFilter<"transaksi"> | Date | string
    escrowId?: StringNullableFilter<"transaksi"> | string | null
    expiredAt?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    notifikasi?: NotifikasiListRelationFilter
    sengketa?: XOR<SengketaNullableRelationFilter, sengketaWhereInput> | null
    user_transaksi_pembeliIdTouser?: XOR<UserRelationFilter, userWhereInput>
    user_transaksi_penjualIdTouser?: XOR<UserRelationFilter, userWhereInput>
    produk?: XOR<ProdukRelationFilter, produkWhereInput>
  }

  export type transaksiOrderByWithRelationInput = {
    id?: SortOrder
    kodeTransaksi?: SortOrder
    produkId?: SortOrder
    pembeliId?: SortOrder
    penjualId?: SortOrder
    status?: SortOrder
    waktuBayar?: SortOrderInput | SortOrder
    waktuSelesai?: SortOrderInput | SortOrder
    contractAddress?: SortOrderInput | SortOrder
    escrowAmount?: SortOrderInput | SortOrder
    smartContractTxHash?: SortOrderInput | SortOrder
    accountData?: SortOrderInput | SortOrder
    deskripsiBukti?: SortOrderInput | SortOrder
    adminRefundAt?: SortOrderInput | SortOrder
    adminRefundBy?: SortOrderInput | SortOrder
    adminRefundNote?: SortOrderInput | SortOrder
    adminRefundTxHash?: SortOrderInput | SortOrder
    adminReleaseAt?: SortOrderInput | SortOrder
    adminReleaseBy?: SortOrderInput | SortOrder
    adminReleaseNote?: SortOrderInput | SortOrder
    adminReleaseTxHash?: SortOrderInput | SortOrder
    dibuatPada?: SortOrder
    diperbaruiPada?: SortOrder
    escrowId?: SortOrderInput | SortOrder
    expiredAt?: SortOrderInput | SortOrder
    notifikasi?: notifikasiOrderByRelationAggregateInput
    sengketa?: sengketaOrderByWithRelationInput
    user_transaksi_pembeliIdTouser?: userOrderByWithRelationInput
    user_transaksi_penjualIdTouser?: userOrderByWithRelationInput
    produk?: produkOrderByWithRelationInput
  }

  export type transaksiWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    kodeTransaksi?: string
    AND?: transaksiWhereInput | transaksiWhereInput[]
    OR?: transaksiWhereInput[]
    NOT?: transaksiWhereInput | transaksiWhereInput[]
    produkId?: StringFilter<"transaksi"> | string
    pembeliId?: StringFilter<"transaksi"> | string
    penjualId?: StringFilter<"transaksi"> | string
    status?: Enumtransaksi_statusFilter<"transaksi"> | $Enums.transaksi_status
    waktuBayar?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    waktuSelesai?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    contractAddress?: StringNullableFilter<"transaksi"> | string | null
    escrowAmount?: StringNullableFilter<"transaksi"> | string | null
    smartContractTxHash?: StringNullableFilter<"transaksi"> | string | null
    accountData?: StringNullableFilter<"transaksi"> | string | null
    deskripsiBukti?: StringNullableFilter<"transaksi"> | string | null
    adminRefundAt?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    adminRefundBy?: StringNullableFilter<"transaksi"> | string | null
    adminRefundNote?: StringNullableFilter<"transaksi"> | string | null
    adminRefundTxHash?: StringNullableFilter<"transaksi"> | string | null
    adminReleaseAt?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    adminReleaseBy?: StringNullableFilter<"transaksi"> | string | null
    adminReleaseNote?: StringNullableFilter<"transaksi"> | string | null
    adminReleaseTxHash?: StringNullableFilter<"transaksi"> | string | null
    dibuatPada?: DateTimeFilter<"transaksi"> | Date | string
    diperbaruiPada?: DateTimeFilter<"transaksi"> | Date | string
    escrowId?: StringNullableFilter<"transaksi"> | string | null
    expiredAt?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    notifikasi?: NotifikasiListRelationFilter
    sengketa?: XOR<SengketaNullableRelationFilter, sengketaWhereInput> | null
    user_transaksi_pembeliIdTouser?: XOR<UserRelationFilter, userWhereInput>
    user_transaksi_penjualIdTouser?: XOR<UserRelationFilter, userWhereInput>
    produk?: XOR<ProdukRelationFilter, produkWhereInput>
  }, "id" | "kodeTransaksi">

  export type transaksiOrderByWithAggregationInput = {
    id?: SortOrder
    kodeTransaksi?: SortOrder
    produkId?: SortOrder
    pembeliId?: SortOrder
    penjualId?: SortOrder
    status?: SortOrder
    waktuBayar?: SortOrderInput | SortOrder
    waktuSelesai?: SortOrderInput | SortOrder
    contractAddress?: SortOrderInput | SortOrder
    escrowAmount?: SortOrderInput | SortOrder
    smartContractTxHash?: SortOrderInput | SortOrder
    accountData?: SortOrderInput | SortOrder
    deskripsiBukti?: SortOrderInput | SortOrder
    adminRefundAt?: SortOrderInput | SortOrder
    adminRefundBy?: SortOrderInput | SortOrder
    adminRefundNote?: SortOrderInput | SortOrder
    adminRefundTxHash?: SortOrderInput | SortOrder
    adminReleaseAt?: SortOrderInput | SortOrder
    adminReleaseBy?: SortOrderInput | SortOrder
    adminReleaseNote?: SortOrderInput | SortOrder
    adminReleaseTxHash?: SortOrderInput | SortOrder
    dibuatPada?: SortOrder
    diperbaruiPada?: SortOrder
    escrowId?: SortOrderInput | SortOrder
    expiredAt?: SortOrderInput | SortOrder
    _count?: transaksiCountOrderByAggregateInput
    _max?: transaksiMaxOrderByAggregateInput
    _min?: transaksiMinOrderByAggregateInput
  }

  export type transaksiScalarWhereWithAggregatesInput = {
    AND?: transaksiScalarWhereWithAggregatesInput | transaksiScalarWhereWithAggregatesInput[]
    OR?: transaksiScalarWhereWithAggregatesInput[]
    NOT?: transaksiScalarWhereWithAggregatesInput | transaksiScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"transaksi"> | string
    kodeTransaksi?: StringWithAggregatesFilter<"transaksi"> | string
    produkId?: StringWithAggregatesFilter<"transaksi"> | string
    pembeliId?: StringWithAggregatesFilter<"transaksi"> | string
    penjualId?: StringWithAggregatesFilter<"transaksi"> | string
    status?: Enumtransaksi_statusWithAggregatesFilter<"transaksi"> | $Enums.transaksi_status
    waktuBayar?: DateTimeNullableWithAggregatesFilter<"transaksi"> | Date | string | null
    waktuSelesai?: DateTimeNullableWithAggregatesFilter<"transaksi"> | Date | string | null
    contractAddress?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    escrowAmount?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    smartContractTxHash?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    accountData?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    deskripsiBukti?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    adminRefundAt?: DateTimeNullableWithAggregatesFilter<"transaksi"> | Date | string | null
    adminRefundBy?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    adminRefundNote?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    adminRefundTxHash?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    adminReleaseAt?: DateTimeNullableWithAggregatesFilter<"transaksi"> | Date | string | null
    adminReleaseBy?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    adminReleaseNote?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    adminReleaseTxHash?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    dibuatPada?: DateTimeWithAggregatesFilter<"transaksi"> | Date | string
    diperbaruiPada?: DateTimeWithAggregatesFilter<"transaksi"> | Date | string
    escrowId?: StringNullableWithAggregatesFilter<"transaksi"> | string | null
    expiredAt?: DateTimeNullableWithAggregatesFilter<"transaksi"> | Date | string | null
  }

  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    id?: StringFilter<"user"> | string
    email?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    role?: Enumuser_roleFilter<"user"> | $Enums.user_role
    walletAddress?: StringNullableFilter<"user"> | string | null
    dibuatPada?: DateTimeFilter<"user"> | Date | string
    aplikasiPenjual?: XOR<Aplikasi_penjualNullableRelationFilter, aplikasi_penjualWhereInput> | null
    notifikasi?: NotifikasiListRelationFilter
    produk?: ProdukListRelationFilter
    profile?: XOR<ProfileNullableRelationFilter, profileWhereInput> | null
    transaksi_transaksi_pembeliIdTouser?: TransaksiListRelationFilter
    transaksi_transaksi_penjualIdTouser?: TransaksiListRelationFilter
  }

  export type userOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    walletAddress?: SortOrderInput | SortOrder
    dibuatPada?: SortOrder
    aplikasiPenjual?: aplikasi_penjualOrderByWithRelationInput
    notifikasi?: notifikasiOrderByRelationAggregateInput
    produk?: produkOrderByRelationAggregateInput
    profile?: profileOrderByWithRelationInput
    transaksi_transaksi_pembeliIdTouser?: transaksiOrderByRelationAggregateInput
    transaksi_transaksi_penjualIdTouser?: transaksiOrderByRelationAggregateInput
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    walletAddress?: string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    password?: StringFilter<"user"> | string
    role?: Enumuser_roleFilter<"user"> | $Enums.user_role
    dibuatPada?: DateTimeFilter<"user"> | Date | string
    aplikasiPenjual?: XOR<Aplikasi_penjualNullableRelationFilter, aplikasi_penjualWhereInput> | null
    notifikasi?: NotifikasiListRelationFilter
    produk?: ProdukListRelationFilter
    profile?: XOR<ProfileNullableRelationFilter, profileWhereInput> | null
    transaksi_transaksi_pembeliIdTouser?: TransaksiListRelationFilter
    transaksi_transaksi_penjualIdTouser?: TransaksiListRelationFilter
  }, "id" | "email" | "walletAddress">

  export type userOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    walletAddress?: SortOrderInput | SortOrder
    dibuatPada?: SortOrder
    _count?: userCountOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"user"> | string
    email?: StringWithAggregatesFilter<"user"> | string
    password?: StringWithAggregatesFilter<"user"> | string
    role?: Enumuser_roleWithAggregatesFilter<"user"> | $Enums.user_role
    walletAddress?: StringNullableWithAggregatesFilter<"user"> | string | null
    dibuatPada?: DateTimeWithAggregatesFilter<"user"> | Date | string
  }

  export type aplikasi_penjualWhereInput = {
    AND?: aplikasi_penjualWhereInput | aplikasi_penjualWhereInput[]
    OR?: aplikasi_penjualWhereInput[]
    NOT?: aplikasi_penjualWhereInput | aplikasi_penjualWhereInput[]
    id?: StringFilter<"aplikasi_penjual"> | string
    userId?: StringFilter<"aplikasi_penjual"> | string
    nomor_telepon?: StringNullableFilter<"aplikasi_penjual"> | string | null
    nomor_whatsapp?: StringNullableFilter<"aplikasi_penjual"> | string | null
    alamat?: StringNullableFilter<"aplikasi_penjual"> | string | null
    alasan_jual?: StringNullableFilter<"aplikasi_penjual"> | string | null
    status?: Enumstatus_aplikasiFilter<"aplikasi_penjual"> | $Enums.status_aplikasi
    catatan_admin?: StringNullableFilter<"aplikasi_penjual"> | string | null
    diajukan_pada?: DateTimeNullableFilter<"aplikasi_penjual"> | Date | string | null
    diperbarui?: DateTimeNullableFilter<"aplikasi_penjual"> | Date | string | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }

  export type aplikasi_penjualOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    nomor_telepon?: SortOrderInput | SortOrder
    nomor_whatsapp?: SortOrderInput | SortOrder
    alamat?: SortOrderInput | SortOrder
    alasan_jual?: SortOrderInput | SortOrder
    status?: SortOrder
    catatan_admin?: SortOrderInput | SortOrder
    diajukan_pada?: SortOrderInput | SortOrder
    diperbarui?: SortOrderInput | SortOrder
    user?: userOrderByWithRelationInput
  }

  export type aplikasi_penjualWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId?: string
    AND?: aplikasi_penjualWhereInput | aplikasi_penjualWhereInput[]
    OR?: aplikasi_penjualWhereInput[]
    NOT?: aplikasi_penjualWhereInput | aplikasi_penjualWhereInput[]
    nomor_telepon?: StringNullableFilter<"aplikasi_penjual"> | string | null
    nomor_whatsapp?: StringNullableFilter<"aplikasi_penjual"> | string | null
    alamat?: StringNullableFilter<"aplikasi_penjual"> | string | null
    alasan_jual?: StringNullableFilter<"aplikasi_penjual"> | string | null
    status?: Enumstatus_aplikasiFilter<"aplikasi_penjual"> | $Enums.status_aplikasi
    catatan_admin?: StringNullableFilter<"aplikasi_penjual"> | string | null
    diajukan_pada?: DateTimeNullableFilter<"aplikasi_penjual"> | Date | string | null
    diperbarui?: DateTimeNullableFilter<"aplikasi_penjual"> | Date | string | null
    user?: XOR<UserRelationFilter, userWhereInput>
  }, "id" | "userId">

  export type aplikasi_penjualOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    nomor_telepon?: SortOrderInput | SortOrder
    nomor_whatsapp?: SortOrderInput | SortOrder
    alamat?: SortOrderInput | SortOrder
    alasan_jual?: SortOrderInput | SortOrder
    status?: SortOrder
    catatan_admin?: SortOrderInput | SortOrder
    diajukan_pada?: SortOrderInput | SortOrder
    diperbarui?: SortOrderInput | SortOrder
    _count?: aplikasi_penjualCountOrderByAggregateInput
    _max?: aplikasi_penjualMaxOrderByAggregateInput
    _min?: aplikasi_penjualMinOrderByAggregateInput
  }

  export type aplikasi_penjualScalarWhereWithAggregatesInput = {
    AND?: aplikasi_penjualScalarWhereWithAggregatesInput | aplikasi_penjualScalarWhereWithAggregatesInput[]
    OR?: aplikasi_penjualScalarWhereWithAggregatesInput[]
    NOT?: aplikasi_penjualScalarWhereWithAggregatesInput | aplikasi_penjualScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"aplikasi_penjual"> | string
    userId?: StringWithAggregatesFilter<"aplikasi_penjual"> | string
    nomor_telepon?: StringNullableWithAggregatesFilter<"aplikasi_penjual"> | string | null
    nomor_whatsapp?: StringNullableWithAggregatesFilter<"aplikasi_penjual"> | string | null
    alamat?: StringNullableWithAggregatesFilter<"aplikasi_penjual"> | string | null
    alasan_jual?: StringNullableWithAggregatesFilter<"aplikasi_penjual"> | string | null
    status?: Enumstatus_aplikasiWithAggregatesFilter<"aplikasi_penjual"> | $Enums.status_aplikasi
    catatan_admin?: StringNullableWithAggregatesFilter<"aplikasi_penjual"> | string | null
    diajukan_pada?: DateTimeNullableWithAggregatesFilter<"aplikasi_penjual"> | Date | string | null
    diperbarui?: DateTimeNullableWithAggregatesFilter<"aplikasi_penjual"> | Date | string | null
  }

  export type notifikasiCreateInput = {
    id: string
    tipe: $Enums.notifikasi_tipe
    judul: string
    pesan: string
    dibaca?: boolean
    dibuatPada?: Date | string
    transaksi?: transaksiCreateNestedOneWithoutNotifikasiInput
    user: userCreateNestedOneWithoutNotifikasiInput
  }

  export type notifikasiUncheckedCreateInput = {
    id: string
    userId: string
    transaksiId?: string | null
    tipe: $Enums.notifikasi_tipe
    judul: string
    pesan: string
    dibaca?: boolean
    dibuatPada?: Date | string
  }

  export type notifikasiUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipe?: Enumnotifikasi_tipeFieldUpdateOperationsInput | $Enums.notifikasi_tipe
    judul?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    dibaca?: BoolFieldUpdateOperationsInput | boolean
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    transaksi?: transaksiUpdateOneWithoutNotifikasiNestedInput
    user?: userUpdateOneRequiredWithoutNotifikasiNestedInput
  }

  export type notifikasiUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    transaksiId?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: Enumnotifikasi_tipeFieldUpdateOperationsInput | $Enums.notifikasi_tipe
    judul?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    dibaca?: BoolFieldUpdateOperationsInput | boolean
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notifikasiCreateManyInput = {
    id: string
    userId: string
    transaksiId?: string | null
    tipe: $Enums.notifikasi_tipe
    judul: string
    pesan: string
    dibaca?: boolean
    dibuatPada?: Date | string
  }

  export type notifikasiUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipe?: Enumnotifikasi_tipeFieldUpdateOperationsInput | $Enums.notifikasi_tipe
    judul?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    dibaca?: BoolFieldUpdateOperationsInput | boolean
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notifikasiUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    transaksiId?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: Enumnotifikasi_tipeFieldUpdateOperationsInput | $Enums.notifikasi_tipe
    judul?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    dibaca?: BoolFieldUpdateOperationsInput | boolean
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type produkCreateInput = {
    id: string
    kodeProduk: string
    namaGame: string
    deskripsi?: string | null
    harga: number
    statusJual?: boolean
    gambar?: string | null
    judulProduk: string
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    statusProduk?: $Enums.produk_statusProduk | null
    hargaEth?: number | null
    user: userCreateNestedOneWithoutProdukInput
    transaksi?: transaksiCreateNestedManyWithoutProdukInput
  }

  export type produkUncheckedCreateInput = {
    id: string
    kodeProduk: string
    namaGame: string
    deskripsi?: string | null
    harga: number
    penjualId: string
    statusJual?: boolean
    gambar?: string | null
    judulProduk: string
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    statusProduk?: $Enums.produk_statusProduk | null
    hargaEth?: number | null
    transaksi?: transaksiUncheckedCreateNestedManyWithoutProdukInput
  }

  export type produkUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeProduk?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    harga?: IntFieldUpdateOperationsInput | number
    statusJual?: BoolFieldUpdateOperationsInput | boolean
    gambar?: NullableStringFieldUpdateOperationsInput | string | null
    judulProduk?: StringFieldUpdateOperationsInput | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    statusProduk?: NullableEnumproduk_statusProdukFieldUpdateOperationsInput | $Enums.produk_statusProduk | null
    hargaEth?: NullableFloatFieldUpdateOperationsInput | number | null
    user?: userUpdateOneRequiredWithoutProdukNestedInput
    transaksi?: transaksiUpdateManyWithoutProdukNestedInput
  }

  export type produkUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeProduk?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    harga?: IntFieldUpdateOperationsInput | number
    penjualId?: StringFieldUpdateOperationsInput | string
    statusJual?: BoolFieldUpdateOperationsInput | boolean
    gambar?: NullableStringFieldUpdateOperationsInput | string | null
    judulProduk?: StringFieldUpdateOperationsInput | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    statusProduk?: NullableEnumproduk_statusProdukFieldUpdateOperationsInput | $Enums.produk_statusProduk | null
    hargaEth?: NullableFloatFieldUpdateOperationsInput | number | null
    transaksi?: transaksiUncheckedUpdateManyWithoutProdukNestedInput
  }

  export type produkCreateManyInput = {
    id: string
    kodeProduk: string
    namaGame: string
    deskripsi?: string | null
    harga: number
    penjualId: string
    statusJual?: boolean
    gambar?: string | null
    judulProduk: string
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    statusProduk?: $Enums.produk_statusProduk | null
    hargaEth?: number | null
  }

  export type produkUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeProduk?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    harga?: IntFieldUpdateOperationsInput | number
    statusJual?: BoolFieldUpdateOperationsInput | boolean
    gambar?: NullableStringFieldUpdateOperationsInput | string | null
    judulProduk?: StringFieldUpdateOperationsInput | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    statusProduk?: NullableEnumproduk_statusProdukFieldUpdateOperationsInput | $Enums.produk_statusProduk | null
    hargaEth?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type produkUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeProduk?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    harga?: IntFieldUpdateOperationsInput | number
    penjualId?: StringFieldUpdateOperationsInput | string
    statusJual?: BoolFieldUpdateOperationsInput | boolean
    gambar?: NullableStringFieldUpdateOperationsInput | string | null
    judulProduk?: StringFieldUpdateOperationsInput | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    statusProduk?: NullableEnumproduk_statusProdukFieldUpdateOperationsInput | $Enums.produk_statusProduk | null
    hargaEth?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type profileCreateInput = {
    id: string
    nama: string
    nomor_telepon?: string | null
    alamat?: string | null
    nomor_whatsapp?: string | null
    user: userCreateNestedOneWithoutProfileInput
  }

  export type profileUncheckedCreateInput = {
    id: string
    userId: string
    nama: string
    nomor_telepon?: string | null
    alamat?: string | null
    nomor_whatsapp?: string | null
  }

  export type profileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    user?: userUpdateOneRequiredWithoutProfileNestedInput
  }

  export type profileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type profileCreateManyInput = {
    id: string
    userId: string
    nama: string
    nomor_telepon?: string | null
    alamat?: string | null
    nomor_whatsapp?: string | null
  }

  export type profileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type profileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type riwayattransaksiCreateInput = {
    id: string
    kodeTransaksi: string
    namaGame: string
    harga: number
    walletPenjual: string
    walletPembeli: string
    tanggalSelesai: Date | string
    dibuatPada?: Date | string
  }

  export type riwayattransaksiUncheckedCreateInput = {
    id: string
    kodeTransaksi: string
    namaGame: string
    harga: number
    walletPenjual: string
    walletPembeli: string
    tanggalSelesai: Date | string
    dibuatPada?: Date | string
  }

  export type riwayattransaksiUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    walletPenjual?: StringFieldUpdateOperationsInput | string
    walletPembeli?: StringFieldUpdateOperationsInput | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type riwayattransaksiUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    walletPenjual?: StringFieldUpdateOperationsInput | string
    walletPembeli?: StringFieldUpdateOperationsInput | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type riwayattransaksiCreateManyInput = {
    id: string
    kodeTransaksi: string
    namaGame: string
    harga: number
    walletPenjual: string
    walletPembeli: string
    tanggalSelesai: Date | string
    dibuatPada?: Date | string
  }

  export type riwayattransaksiUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    walletPenjual?: StringFieldUpdateOperationsInput | string
    walletPembeli?: StringFieldUpdateOperationsInput | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type riwayattransaksiUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    harga?: IntFieldUpdateOperationsInput | number
    walletPenjual?: StringFieldUpdateOperationsInput | string
    walletPembeli?: StringFieldUpdateOperationsInput | string
    tanggalSelesai?: DateTimeFieldUpdateOperationsInput | Date | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sengketaCreateInput = {
    id: string
    deskripsi?: string | null
    adminNote?: string | null
    dibuatPada?: Date | string
    disputeType?: $Enums.sengketa_disputeType
    paymentMethod?: string | null
    paymentTxHash?: string | null
    pembeliBukti?: string | null
    penjualBukti?: string | null
    resolution?: string | null
    resolvedAt?: Date | string | null
    status?: $Enums.sengketa_status
    transaksi: transaksiCreateNestedOneWithoutSengketaInput
  }

  export type sengketaUncheckedCreateInput = {
    id: string
    transaksiId: string
    deskripsi?: string | null
    adminNote?: string | null
    dibuatPada?: Date | string
    disputeType?: $Enums.sengketa_disputeType
    paymentMethod?: string | null
    paymentTxHash?: string | null
    pembeliBukti?: string | null
    penjualBukti?: string | null
    resolution?: string | null
    resolvedAt?: Date | string | null
    status?: $Enums.sengketa_status
  }

  export type sengketaUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    adminNote?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    disputeType?: Enumsengketa_disputeTypeFieldUpdateOperationsInput | $Enums.sengketa_disputeType
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    pembeliBukti?: NullableStringFieldUpdateOperationsInput | string | null
    penjualBukti?: NullableStringFieldUpdateOperationsInput | string | null
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: Enumsengketa_statusFieldUpdateOperationsInput | $Enums.sengketa_status
    transaksi?: transaksiUpdateOneRequiredWithoutSengketaNestedInput
  }

  export type sengketaUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    transaksiId?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    adminNote?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    disputeType?: Enumsengketa_disputeTypeFieldUpdateOperationsInput | $Enums.sengketa_disputeType
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    pembeliBukti?: NullableStringFieldUpdateOperationsInput | string | null
    penjualBukti?: NullableStringFieldUpdateOperationsInput | string | null
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: Enumsengketa_statusFieldUpdateOperationsInput | $Enums.sengketa_status
  }

  export type sengketaCreateManyInput = {
    id: string
    transaksiId: string
    deskripsi?: string | null
    adminNote?: string | null
    dibuatPada?: Date | string
    disputeType?: $Enums.sengketa_disputeType
    paymentMethod?: string | null
    paymentTxHash?: string | null
    pembeliBukti?: string | null
    penjualBukti?: string | null
    resolution?: string | null
    resolvedAt?: Date | string | null
    status?: $Enums.sengketa_status
  }

  export type sengketaUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    adminNote?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    disputeType?: Enumsengketa_disputeTypeFieldUpdateOperationsInput | $Enums.sengketa_disputeType
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    pembeliBukti?: NullableStringFieldUpdateOperationsInput | string | null
    penjualBukti?: NullableStringFieldUpdateOperationsInput | string | null
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: Enumsengketa_statusFieldUpdateOperationsInput | $Enums.sengketa_status
  }

  export type sengketaUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    transaksiId?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    adminNote?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    disputeType?: Enumsengketa_disputeTypeFieldUpdateOperationsInput | $Enums.sengketa_disputeType
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    pembeliBukti?: NullableStringFieldUpdateOperationsInput | string | null
    penjualBukti?: NullableStringFieldUpdateOperationsInput | string | null
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: Enumsengketa_statusFieldUpdateOperationsInput | $Enums.sengketa_status
  }

  export type transaksiCreateInput = {
    id: string
    kodeTransaksi: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    notifikasi?: notifikasiCreateNestedManyWithoutTransaksiInput
    sengketa?: sengketaCreateNestedOneWithoutTransaksiInput
    user_transaksi_pembeliIdTouser: userCreateNestedOneWithoutTransaksi_transaksi_pembeliIdTouserInput
    user_transaksi_penjualIdTouser: userCreateNestedOneWithoutTransaksi_transaksi_penjualIdTouserInput
    produk: produkCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiUncheckedCreateInput = {
    id: string
    kodeTransaksi: string
    produkId: string
    pembeliId: string
    penjualId: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutTransaksiInput
    sengketa?: sengketaUncheckedCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifikasi?: notifikasiUpdateManyWithoutTransaksiNestedInput
    sengketa?: sengketaUpdateOneWithoutTransaksiNestedInput
    user_transaksi_pembeliIdTouser?: userUpdateOneRequiredWithoutTransaksi_transaksi_pembeliIdTouserNestedInput
    user_transaksi_penjualIdTouser?: userUpdateOneRequiredWithoutTransaksi_transaksi_penjualIdTouserNestedInput
    produk?: produkUpdateOneRequiredWithoutTransaksiNestedInput
  }

  export type transaksiUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    produkId?: StringFieldUpdateOperationsInput | string
    pembeliId?: StringFieldUpdateOperationsInput | string
    penjualId?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifikasi?: notifikasiUncheckedUpdateManyWithoutTransaksiNestedInput
    sengketa?: sengketaUncheckedUpdateOneWithoutTransaksiNestedInput
  }

  export type transaksiCreateManyInput = {
    id: string
    kodeTransaksi: string
    produkId: string
    pembeliId: string
    penjualId: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
  }

  export type transaksiUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transaksiUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    produkId?: StringFieldUpdateOperationsInput | string
    pembeliId?: StringFieldUpdateOperationsInput | string
    penjualId?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userCreateInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualCreateNestedOneWithoutUserInput
    notifikasi?: notifikasiCreateNestedManyWithoutUserInput
    produk?: produkCreateNestedManyWithoutUserInput
    profile?: profileCreateNestedOneWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
    transaksi_transaksi_penjualIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userUncheckedCreateInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedCreateNestedOneWithoutUserInput
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutUserInput
    produk?: produkUncheckedCreateNestedManyWithoutUserInput
    profile?: profileUncheckedCreateNestedOneWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUpdateOneWithoutUserNestedInput
    notifikasi?: notifikasiUpdateManyWithoutUserNestedInput
    produk?: produkUpdateManyWithoutUserNestedInput
    profile?: profileUpdateOneWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type userUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedUpdateOneWithoutUserNestedInput
    notifikasi?: notifikasiUncheckedUpdateManyWithoutUserNestedInput
    produk?: produkUncheckedUpdateManyWithoutUserNestedInput
    profile?: profileUncheckedUpdateOneWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type userCreateManyInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
  }

  export type userUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type userUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type aplikasi_penjualCreateInput = {
    id: string
    nomor_telepon?: string | null
    nomor_whatsapp?: string | null
    alamat?: string | null
    alasan_jual?: string | null
    status?: $Enums.status_aplikasi
    catatan_admin?: string | null
    diajukan_pada?: Date | string | null
    diperbarui?: Date | string | null
    user: userCreateNestedOneWithoutAplikasiPenjualInput
  }

  export type aplikasi_penjualUncheckedCreateInput = {
    id: string
    userId: string
    nomor_telepon?: string | null
    nomor_whatsapp?: string | null
    alamat?: string | null
    alasan_jual?: string | null
    status?: $Enums.status_aplikasi
    catatan_admin?: string | null
    diajukan_pada?: Date | string | null
    diperbarui?: Date | string | null
  }

  export type aplikasi_penjualUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_jual?: NullableStringFieldUpdateOperationsInput | string | null
    status?: Enumstatus_aplikasiFieldUpdateOperationsInput | $Enums.status_aplikasi
    catatan_admin?: NullableStringFieldUpdateOperationsInput | string | null
    diajukan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diperbarui?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user?: userUpdateOneRequiredWithoutAplikasiPenjualNestedInput
  }

  export type aplikasi_penjualUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_jual?: NullableStringFieldUpdateOperationsInput | string | null
    status?: Enumstatus_aplikasiFieldUpdateOperationsInput | $Enums.status_aplikasi
    catatan_admin?: NullableStringFieldUpdateOperationsInput | string | null
    diajukan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diperbarui?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aplikasi_penjualCreateManyInput = {
    id: string
    userId: string
    nomor_telepon?: string | null
    nomor_whatsapp?: string | null
    alamat?: string | null
    alasan_jual?: string | null
    status?: $Enums.status_aplikasi
    catatan_admin?: string | null
    diajukan_pada?: Date | string | null
    diperbarui?: Date | string | null
  }

  export type aplikasi_penjualUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_jual?: NullableStringFieldUpdateOperationsInput | string | null
    status?: Enumstatus_aplikasiFieldUpdateOperationsInput | $Enums.status_aplikasi
    catatan_admin?: NullableStringFieldUpdateOperationsInput | string | null
    diajukan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diperbarui?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aplikasi_penjualUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_jual?: NullableStringFieldUpdateOperationsInput | string | null
    status?: Enumstatus_aplikasiFieldUpdateOperationsInput | $Enums.status_aplikasi
    catatan_admin?: NullableStringFieldUpdateOperationsInput | string | null
    diajukan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diperbarui?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Enumnotifikasi_tipeFilter<$PrismaModel = never> = {
    equals?: $Enums.notifikasi_tipe | Enumnotifikasi_tipeFieldRefInput<$PrismaModel>
    in?: $Enums.notifikasi_tipe[]
    notIn?: $Enums.notifikasi_tipe[]
    not?: NestedEnumnotifikasi_tipeFilter<$PrismaModel> | $Enums.notifikasi_tipe
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type TransaksiNullableRelationFilter = {
    is?: transaksiWhereInput | null
    isNot?: transaksiWhereInput | null
  }

  export type UserRelationFilter = {
    is?: userWhereInput
    isNot?: userWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type notifikasiCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    transaksiId?: SortOrder
    tipe?: SortOrder
    judul?: SortOrder
    pesan?: SortOrder
    dibaca?: SortOrder
    dibuatPada?: SortOrder
  }

  export type notifikasiMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    transaksiId?: SortOrder
    tipe?: SortOrder
    judul?: SortOrder
    pesan?: SortOrder
    dibaca?: SortOrder
    dibuatPada?: SortOrder
  }

  export type notifikasiMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    transaksiId?: SortOrder
    tipe?: SortOrder
    judul?: SortOrder
    pesan?: SortOrder
    dibaca?: SortOrder
    dibuatPada?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Enumnotifikasi_tipeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.notifikasi_tipe | Enumnotifikasi_tipeFieldRefInput<$PrismaModel>
    in?: $Enums.notifikasi_tipe[]
    notIn?: $Enums.notifikasi_tipe[]
    not?: NestedEnumnotifikasi_tipeWithAggregatesFilter<$PrismaModel> | $Enums.notifikasi_tipe
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumnotifikasi_tipeFilter<$PrismaModel>
    _max?: NestedEnumnotifikasi_tipeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type Enumproduk_statusProdukNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.produk_statusProduk | Enumproduk_statusProdukFieldRefInput<$PrismaModel> | null
    in?: $Enums.produk_statusProduk[] | null
    notIn?: $Enums.produk_statusProduk[] | null
    not?: NestedEnumproduk_statusProdukNullableFilter<$PrismaModel> | $Enums.produk_statusProduk | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type TransaksiListRelationFilter = {
    every?: transaksiWhereInput
    some?: transaksiWhereInput
    none?: transaksiWhereInput
  }

  export type transaksiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type produkCountOrderByAggregateInput = {
    id?: SortOrder
    kodeProduk?: SortOrder
    namaGame?: SortOrder
    deskripsi?: SortOrder
    harga?: SortOrder
    penjualId?: SortOrder
    statusJual?: SortOrder
    gambar?: SortOrder
    judulProduk?: SortOrder
    dibuatPada?: SortOrder
    diperbaruiPada?: SortOrder
    statusProduk?: SortOrder
    hargaEth?: SortOrder
  }

  export type produkAvgOrderByAggregateInput = {
    harga?: SortOrder
    hargaEth?: SortOrder
  }

  export type produkMaxOrderByAggregateInput = {
    id?: SortOrder
    kodeProduk?: SortOrder
    namaGame?: SortOrder
    deskripsi?: SortOrder
    harga?: SortOrder
    penjualId?: SortOrder
    statusJual?: SortOrder
    gambar?: SortOrder
    judulProduk?: SortOrder
    dibuatPada?: SortOrder
    diperbaruiPada?: SortOrder
    statusProduk?: SortOrder
    hargaEth?: SortOrder
  }

  export type produkMinOrderByAggregateInput = {
    id?: SortOrder
    kodeProduk?: SortOrder
    namaGame?: SortOrder
    deskripsi?: SortOrder
    harga?: SortOrder
    penjualId?: SortOrder
    statusJual?: SortOrder
    gambar?: SortOrder
    judulProduk?: SortOrder
    dibuatPada?: SortOrder
    diperbaruiPada?: SortOrder
    statusProduk?: SortOrder
    hargaEth?: SortOrder
  }

  export type produkSumOrderByAggregateInput = {
    harga?: SortOrder
    hargaEth?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type Enumproduk_statusProdukNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.produk_statusProduk | Enumproduk_statusProdukFieldRefInput<$PrismaModel> | null
    in?: $Enums.produk_statusProduk[] | null
    notIn?: $Enums.produk_statusProduk[] | null
    not?: NestedEnumproduk_statusProdukNullableWithAggregatesFilter<$PrismaModel> | $Enums.produk_statusProduk | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumproduk_statusProdukNullableFilter<$PrismaModel>
    _max?: NestedEnumproduk_statusProdukNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type profileCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nama?: SortOrder
    nomor_telepon?: SortOrder
    alamat?: SortOrder
    nomor_whatsapp?: SortOrder
  }

  export type profileMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nama?: SortOrder
    nomor_telepon?: SortOrder
    alamat?: SortOrder
    nomor_whatsapp?: SortOrder
  }

  export type profileMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nama?: SortOrder
    nomor_telepon?: SortOrder
    alamat?: SortOrder
    nomor_whatsapp?: SortOrder
  }

  export type riwayattransaksiCountOrderByAggregateInput = {
    id?: SortOrder
    kodeTransaksi?: SortOrder
    namaGame?: SortOrder
    harga?: SortOrder
    walletPenjual?: SortOrder
    walletPembeli?: SortOrder
    tanggalSelesai?: SortOrder
    dibuatPada?: SortOrder
  }

  export type riwayattransaksiAvgOrderByAggregateInput = {
    harga?: SortOrder
  }

  export type riwayattransaksiMaxOrderByAggregateInput = {
    id?: SortOrder
    kodeTransaksi?: SortOrder
    namaGame?: SortOrder
    harga?: SortOrder
    walletPenjual?: SortOrder
    walletPembeli?: SortOrder
    tanggalSelesai?: SortOrder
    dibuatPada?: SortOrder
  }

  export type riwayattransaksiMinOrderByAggregateInput = {
    id?: SortOrder
    kodeTransaksi?: SortOrder
    namaGame?: SortOrder
    harga?: SortOrder
    walletPenjual?: SortOrder
    walletPembeli?: SortOrder
    tanggalSelesai?: SortOrder
    dibuatPada?: SortOrder
  }

  export type riwayattransaksiSumOrderByAggregateInput = {
    harga?: SortOrder
  }

  export type Enumsengketa_disputeTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.sengketa_disputeType | Enumsengketa_disputeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.sengketa_disputeType[]
    notIn?: $Enums.sengketa_disputeType[]
    not?: NestedEnumsengketa_disputeTypeFilter<$PrismaModel> | $Enums.sengketa_disputeType
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Enumsengketa_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.sengketa_status | Enumsengketa_statusFieldRefInput<$PrismaModel>
    in?: $Enums.sengketa_status[]
    notIn?: $Enums.sengketa_status[]
    not?: NestedEnumsengketa_statusFilter<$PrismaModel> | $Enums.sengketa_status
  }

  export type TransaksiRelationFilter = {
    is?: transaksiWhereInput
    isNot?: transaksiWhereInput
  }

  export type sengketaCountOrderByAggregateInput = {
    id?: SortOrder
    transaksiId?: SortOrder
    deskripsi?: SortOrder
    adminNote?: SortOrder
    dibuatPada?: SortOrder
    disputeType?: SortOrder
    paymentMethod?: SortOrder
    paymentTxHash?: SortOrder
    pembeliBukti?: SortOrder
    penjualBukti?: SortOrder
    resolution?: SortOrder
    resolvedAt?: SortOrder
    status?: SortOrder
  }

  export type sengketaMaxOrderByAggregateInput = {
    id?: SortOrder
    transaksiId?: SortOrder
    deskripsi?: SortOrder
    adminNote?: SortOrder
    dibuatPada?: SortOrder
    disputeType?: SortOrder
    paymentMethod?: SortOrder
    paymentTxHash?: SortOrder
    pembeliBukti?: SortOrder
    penjualBukti?: SortOrder
    resolution?: SortOrder
    resolvedAt?: SortOrder
    status?: SortOrder
  }

  export type sengketaMinOrderByAggregateInput = {
    id?: SortOrder
    transaksiId?: SortOrder
    deskripsi?: SortOrder
    adminNote?: SortOrder
    dibuatPada?: SortOrder
    disputeType?: SortOrder
    paymentMethod?: SortOrder
    paymentTxHash?: SortOrder
    pembeliBukti?: SortOrder
    penjualBukti?: SortOrder
    resolution?: SortOrder
    resolvedAt?: SortOrder
    status?: SortOrder
  }

  export type Enumsengketa_disputeTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.sengketa_disputeType | Enumsengketa_disputeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.sengketa_disputeType[]
    notIn?: $Enums.sengketa_disputeType[]
    not?: NestedEnumsengketa_disputeTypeWithAggregatesFilter<$PrismaModel> | $Enums.sengketa_disputeType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumsengketa_disputeTypeFilter<$PrismaModel>
    _max?: NestedEnumsengketa_disputeTypeFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type Enumsengketa_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.sengketa_status | Enumsengketa_statusFieldRefInput<$PrismaModel>
    in?: $Enums.sengketa_status[]
    notIn?: $Enums.sengketa_status[]
    not?: NestedEnumsengketa_statusWithAggregatesFilter<$PrismaModel> | $Enums.sengketa_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumsengketa_statusFilter<$PrismaModel>
    _max?: NestedEnumsengketa_statusFilter<$PrismaModel>
  }

  export type Enumtransaksi_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.transaksi_status | Enumtransaksi_statusFieldRefInput<$PrismaModel>
    in?: $Enums.transaksi_status[]
    notIn?: $Enums.transaksi_status[]
    not?: NestedEnumtransaksi_statusFilter<$PrismaModel> | $Enums.transaksi_status
  }

  export type NotifikasiListRelationFilter = {
    every?: notifikasiWhereInput
    some?: notifikasiWhereInput
    none?: notifikasiWhereInput
  }

  export type SengketaNullableRelationFilter = {
    is?: sengketaWhereInput | null
    isNot?: sengketaWhereInput | null
  }

  export type ProdukRelationFilter = {
    is?: produkWhereInput
    isNot?: produkWhereInput
  }

  export type notifikasiOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type transaksiCountOrderByAggregateInput = {
    id?: SortOrder
    kodeTransaksi?: SortOrder
    produkId?: SortOrder
    pembeliId?: SortOrder
    penjualId?: SortOrder
    status?: SortOrder
    waktuBayar?: SortOrder
    waktuSelesai?: SortOrder
    contractAddress?: SortOrder
    escrowAmount?: SortOrder
    smartContractTxHash?: SortOrder
    accountData?: SortOrder
    deskripsiBukti?: SortOrder
    adminRefundAt?: SortOrder
    adminRefundBy?: SortOrder
    adminRefundNote?: SortOrder
    adminRefundTxHash?: SortOrder
    adminReleaseAt?: SortOrder
    adminReleaseBy?: SortOrder
    adminReleaseNote?: SortOrder
    adminReleaseTxHash?: SortOrder
    dibuatPada?: SortOrder
    diperbaruiPada?: SortOrder
    escrowId?: SortOrder
    expiredAt?: SortOrder
  }

  export type transaksiMaxOrderByAggregateInput = {
    id?: SortOrder
    kodeTransaksi?: SortOrder
    produkId?: SortOrder
    pembeliId?: SortOrder
    penjualId?: SortOrder
    status?: SortOrder
    waktuBayar?: SortOrder
    waktuSelesai?: SortOrder
    contractAddress?: SortOrder
    escrowAmount?: SortOrder
    smartContractTxHash?: SortOrder
    accountData?: SortOrder
    deskripsiBukti?: SortOrder
    adminRefundAt?: SortOrder
    adminRefundBy?: SortOrder
    adminRefundNote?: SortOrder
    adminRefundTxHash?: SortOrder
    adminReleaseAt?: SortOrder
    adminReleaseBy?: SortOrder
    adminReleaseNote?: SortOrder
    adminReleaseTxHash?: SortOrder
    dibuatPada?: SortOrder
    diperbaruiPada?: SortOrder
    escrowId?: SortOrder
    expiredAt?: SortOrder
  }

  export type transaksiMinOrderByAggregateInput = {
    id?: SortOrder
    kodeTransaksi?: SortOrder
    produkId?: SortOrder
    pembeliId?: SortOrder
    penjualId?: SortOrder
    status?: SortOrder
    waktuBayar?: SortOrder
    waktuSelesai?: SortOrder
    contractAddress?: SortOrder
    escrowAmount?: SortOrder
    smartContractTxHash?: SortOrder
    accountData?: SortOrder
    deskripsiBukti?: SortOrder
    adminRefundAt?: SortOrder
    adminRefundBy?: SortOrder
    adminRefundNote?: SortOrder
    adminRefundTxHash?: SortOrder
    adminReleaseAt?: SortOrder
    adminReleaseBy?: SortOrder
    adminReleaseNote?: SortOrder
    adminReleaseTxHash?: SortOrder
    dibuatPada?: SortOrder
    diperbaruiPada?: SortOrder
    escrowId?: SortOrder
    expiredAt?: SortOrder
  }

  export type Enumtransaksi_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.transaksi_status | Enumtransaksi_statusFieldRefInput<$PrismaModel>
    in?: $Enums.transaksi_status[]
    notIn?: $Enums.transaksi_status[]
    not?: NestedEnumtransaksi_statusWithAggregatesFilter<$PrismaModel> | $Enums.transaksi_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtransaksi_statusFilter<$PrismaModel>
    _max?: NestedEnumtransaksi_statusFilter<$PrismaModel>
  }

  export type Enumuser_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[]
    notIn?: $Enums.user_role[]
    not?: NestedEnumuser_roleFilter<$PrismaModel> | $Enums.user_role
  }

  export type Aplikasi_penjualNullableRelationFilter = {
    is?: aplikasi_penjualWhereInput | null
    isNot?: aplikasi_penjualWhereInput | null
  }

  export type ProdukListRelationFilter = {
    every?: produkWhereInput
    some?: produkWhereInput
    none?: produkWhereInput
  }

  export type ProfileNullableRelationFilter = {
    is?: profileWhereInput | null
    isNot?: profileWhereInput | null
  }

  export type produkOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    walletAddress?: SortOrder
    dibuatPada?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    walletAddress?: SortOrder
    dibuatPada?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    walletAddress?: SortOrder
    dibuatPada?: SortOrder
  }

  export type Enumuser_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[]
    notIn?: $Enums.user_role[]
    not?: NestedEnumuser_roleWithAggregatesFilter<$PrismaModel> | $Enums.user_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_roleFilter<$PrismaModel>
    _max?: NestedEnumuser_roleFilter<$PrismaModel>
  }

  export type Enumstatus_aplikasiFilter<$PrismaModel = never> = {
    equals?: $Enums.status_aplikasi | Enumstatus_aplikasiFieldRefInput<$PrismaModel>
    in?: $Enums.status_aplikasi[]
    notIn?: $Enums.status_aplikasi[]
    not?: NestedEnumstatus_aplikasiFilter<$PrismaModel> | $Enums.status_aplikasi
  }

  export type aplikasi_penjualCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nomor_telepon?: SortOrder
    nomor_whatsapp?: SortOrder
    alamat?: SortOrder
    alasan_jual?: SortOrder
    status?: SortOrder
    catatan_admin?: SortOrder
    diajukan_pada?: SortOrder
    diperbarui?: SortOrder
  }

  export type aplikasi_penjualMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nomor_telepon?: SortOrder
    nomor_whatsapp?: SortOrder
    alamat?: SortOrder
    alasan_jual?: SortOrder
    status?: SortOrder
    catatan_admin?: SortOrder
    diajukan_pada?: SortOrder
    diperbarui?: SortOrder
  }

  export type aplikasi_penjualMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    nomor_telepon?: SortOrder
    nomor_whatsapp?: SortOrder
    alamat?: SortOrder
    alasan_jual?: SortOrder
    status?: SortOrder
    catatan_admin?: SortOrder
    diajukan_pada?: SortOrder
    diperbarui?: SortOrder
  }

  export type Enumstatus_aplikasiWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.status_aplikasi | Enumstatus_aplikasiFieldRefInput<$PrismaModel>
    in?: $Enums.status_aplikasi[]
    notIn?: $Enums.status_aplikasi[]
    not?: NestedEnumstatus_aplikasiWithAggregatesFilter<$PrismaModel> | $Enums.status_aplikasi
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumstatus_aplikasiFilter<$PrismaModel>
    _max?: NestedEnumstatus_aplikasiFilter<$PrismaModel>
  }

  export type transaksiCreateNestedOneWithoutNotifikasiInput = {
    create?: XOR<transaksiCreateWithoutNotifikasiInput, transaksiUncheckedCreateWithoutNotifikasiInput>
    connectOrCreate?: transaksiCreateOrConnectWithoutNotifikasiInput
    connect?: transaksiWhereUniqueInput
  }

  export type userCreateNestedOneWithoutNotifikasiInput = {
    create?: XOR<userCreateWithoutNotifikasiInput, userUncheckedCreateWithoutNotifikasiInput>
    connectOrCreate?: userCreateOrConnectWithoutNotifikasiInput
    connect?: userWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type Enumnotifikasi_tipeFieldUpdateOperationsInput = {
    set?: $Enums.notifikasi_tipe
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type transaksiUpdateOneWithoutNotifikasiNestedInput = {
    create?: XOR<transaksiCreateWithoutNotifikasiInput, transaksiUncheckedCreateWithoutNotifikasiInput>
    connectOrCreate?: transaksiCreateOrConnectWithoutNotifikasiInput
    upsert?: transaksiUpsertWithoutNotifikasiInput
    disconnect?: transaksiWhereInput | boolean
    delete?: transaksiWhereInput | boolean
    connect?: transaksiWhereUniqueInput
    update?: XOR<XOR<transaksiUpdateToOneWithWhereWithoutNotifikasiInput, transaksiUpdateWithoutNotifikasiInput>, transaksiUncheckedUpdateWithoutNotifikasiInput>
  }

  export type userUpdateOneRequiredWithoutNotifikasiNestedInput = {
    create?: XOR<userCreateWithoutNotifikasiInput, userUncheckedCreateWithoutNotifikasiInput>
    connectOrCreate?: userCreateOrConnectWithoutNotifikasiInput
    upsert?: userUpsertWithoutNotifikasiInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutNotifikasiInput, userUpdateWithoutNotifikasiInput>, userUncheckedUpdateWithoutNotifikasiInput>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type userCreateNestedOneWithoutProdukInput = {
    create?: XOR<userCreateWithoutProdukInput, userUncheckedCreateWithoutProdukInput>
    connectOrCreate?: userCreateOrConnectWithoutProdukInput
    connect?: userWhereUniqueInput
  }

  export type transaksiCreateNestedManyWithoutProdukInput = {
    create?: XOR<transaksiCreateWithoutProdukInput, transaksiUncheckedCreateWithoutProdukInput> | transaksiCreateWithoutProdukInput[] | transaksiUncheckedCreateWithoutProdukInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutProdukInput | transaksiCreateOrConnectWithoutProdukInput[]
    createMany?: transaksiCreateManyProdukInputEnvelope
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
  }

  export type transaksiUncheckedCreateNestedManyWithoutProdukInput = {
    create?: XOR<transaksiCreateWithoutProdukInput, transaksiUncheckedCreateWithoutProdukInput> | transaksiCreateWithoutProdukInput[] | transaksiUncheckedCreateWithoutProdukInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutProdukInput | transaksiCreateOrConnectWithoutProdukInput[]
    createMany?: transaksiCreateManyProdukInputEnvelope
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumproduk_statusProdukFieldUpdateOperationsInput = {
    set?: $Enums.produk_statusProduk | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type userUpdateOneRequiredWithoutProdukNestedInput = {
    create?: XOR<userCreateWithoutProdukInput, userUncheckedCreateWithoutProdukInput>
    connectOrCreate?: userCreateOrConnectWithoutProdukInput
    upsert?: userUpsertWithoutProdukInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutProdukInput, userUpdateWithoutProdukInput>, userUncheckedUpdateWithoutProdukInput>
  }

  export type transaksiUpdateManyWithoutProdukNestedInput = {
    create?: XOR<transaksiCreateWithoutProdukInput, transaksiUncheckedCreateWithoutProdukInput> | transaksiCreateWithoutProdukInput[] | transaksiUncheckedCreateWithoutProdukInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutProdukInput | transaksiCreateOrConnectWithoutProdukInput[]
    upsert?: transaksiUpsertWithWhereUniqueWithoutProdukInput | transaksiUpsertWithWhereUniqueWithoutProdukInput[]
    createMany?: transaksiCreateManyProdukInputEnvelope
    set?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    disconnect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    delete?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    update?: transaksiUpdateWithWhereUniqueWithoutProdukInput | transaksiUpdateWithWhereUniqueWithoutProdukInput[]
    updateMany?: transaksiUpdateManyWithWhereWithoutProdukInput | transaksiUpdateManyWithWhereWithoutProdukInput[]
    deleteMany?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
  }

  export type transaksiUncheckedUpdateManyWithoutProdukNestedInput = {
    create?: XOR<transaksiCreateWithoutProdukInput, transaksiUncheckedCreateWithoutProdukInput> | transaksiCreateWithoutProdukInput[] | transaksiUncheckedCreateWithoutProdukInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutProdukInput | transaksiCreateOrConnectWithoutProdukInput[]
    upsert?: transaksiUpsertWithWhereUniqueWithoutProdukInput | transaksiUpsertWithWhereUniqueWithoutProdukInput[]
    createMany?: transaksiCreateManyProdukInputEnvelope
    set?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    disconnect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    delete?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    update?: transaksiUpdateWithWhereUniqueWithoutProdukInput | transaksiUpdateWithWhereUniqueWithoutProdukInput[]
    updateMany?: transaksiUpdateManyWithWhereWithoutProdukInput | transaksiUpdateManyWithWhereWithoutProdukInput[]
    deleteMany?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutProfileInput = {
    create?: XOR<userCreateWithoutProfileInput, userUncheckedCreateWithoutProfileInput>
    connectOrCreate?: userCreateOrConnectWithoutProfileInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutProfileNestedInput = {
    create?: XOR<userCreateWithoutProfileInput, userUncheckedCreateWithoutProfileInput>
    connectOrCreate?: userCreateOrConnectWithoutProfileInput
    upsert?: userUpsertWithoutProfileInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutProfileInput, userUpdateWithoutProfileInput>, userUncheckedUpdateWithoutProfileInput>
  }

  export type transaksiCreateNestedOneWithoutSengketaInput = {
    create?: XOR<transaksiCreateWithoutSengketaInput, transaksiUncheckedCreateWithoutSengketaInput>
    connectOrCreate?: transaksiCreateOrConnectWithoutSengketaInput
    connect?: transaksiWhereUniqueInput
  }

  export type Enumsengketa_disputeTypeFieldUpdateOperationsInput = {
    set?: $Enums.sengketa_disputeType
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type Enumsengketa_statusFieldUpdateOperationsInput = {
    set?: $Enums.sengketa_status
  }

  export type transaksiUpdateOneRequiredWithoutSengketaNestedInput = {
    create?: XOR<transaksiCreateWithoutSengketaInput, transaksiUncheckedCreateWithoutSengketaInput>
    connectOrCreate?: transaksiCreateOrConnectWithoutSengketaInput
    upsert?: transaksiUpsertWithoutSengketaInput
    connect?: transaksiWhereUniqueInput
    update?: XOR<XOR<transaksiUpdateToOneWithWhereWithoutSengketaInput, transaksiUpdateWithoutSengketaInput>, transaksiUncheckedUpdateWithoutSengketaInput>
  }

  export type notifikasiCreateNestedManyWithoutTransaksiInput = {
    create?: XOR<notifikasiCreateWithoutTransaksiInput, notifikasiUncheckedCreateWithoutTransaksiInput> | notifikasiCreateWithoutTransaksiInput[] | notifikasiUncheckedCreateWithoutTransaksiInput[]
    connectOrCreate?: notifikasiCreateOrConnectWithoutTransaksiInput | notifikasiCreateOrConnectWithoutTransaksiInput[]
    createMany?: notifikasiCreateManyTransaksiInputEnvelope
    connect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
  }

  export type sengketaCreateNestedOneWithoutTransaksiInput = {
    create?: XOR<sengketaCreateWithoutTransaksiInput, sengketaUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: sengketaCreateOrConnectWithoutTransaksiInput
    connect?: sengketaWhereUniqueInput
  }

  export type userCreateNestedOneWithoutTransaksi_transaksi_pembeliIdTouserInput = {
    create?: XOR<userCreateWithoutTransaksi_transaksi_pembeliIdTouserInput, userUncheckedCreateWithoutTransaksi_transaksi_pembeliIdTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutTransaksi_transaksi_pembeliIdTouserInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutTransaksi_transaksi_penjualIdTouserInput = {
    create?: XOR<userCreateWithoutTransaksi_transaksi_penjualIdTouserInput, userUncheckedCreateWithoutTransaksi_transaksi_penjualIdTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutTransaksi_transaksi_penjualIdTouserInput
    connect?: userWhereUniqueInput
  }

  export type produkCreateNestedOneWithoutTransaksiInput = {
    create?: XOR<produkCreateWithoutTransaksiInput, produkUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: produkCreateOrConnectWithoutTransaksiInput
    connect?: produkWhereUniqueInput
  }

  export type notifikasiUncheckedCreateNestedManyWithoutTransaksiInput = {
    create?: XOR<notifikasiCreateWithoutTransaksiInput, notifikasiUncheckedCreateWithoutTransaksiInput> | notifikasiCreateWithoutTransaksiInput[] | notifikasiUncheckedCreateWithoutTransaksiInput[]
    connectOrCreate?: notifikasiCreateOrConnectWithoutTransaksiInput | notifikasiCreateOrConnectWithoutTransaksiInput[]
    createMany?: notifikasiCreateManyTransaksiInputEnvelope
    connect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
  }

  export type sengketaUncheckedCreateNestedOneWithoutTransaksiInput = {
    create?: XOR<sengketaCreateWithoutTransaksiInput, sengketaUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: sengketaCreateOrConnectWithoutTransaksiInput
    connect?: sengketaWhereUniqueInput
  }

  export type Enumtransaksi_statusFieldUpdateOperationsInput = {
    set?: $Enums.transaksi_status
  }

  export type notifikasiUpdateManyWithoutTransaksiNestedInput = {
    create?: XOR<notifikasiCreateWithoutTransaksiInput, notifikasiUncheckedCreateWithoutTransaksiInput> | notifikasiCreateWithoutTransaksiInput[] | notifikasiUncheckedCreateWithoutTransaksiInput[]
    connectOrCreate?: notifikasiCreateOrConnectWithoutTransaksiInput | notifikasiCreateOrConnectWithoutTransaksiInput[]
    upsert?: notifikasiUpsertWithWhereUniqueWithoutTransaksiInput | notifikasiUpsertWithWhereUniqueWithoutTransaksiInput[]
    createMany?: notifikasiCreateManyTransaksiInputEnvelope
    set?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    disconnect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    delete?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    connect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    update?: notifikasiUpdateWithWhereUniqueWithoutTransaksiInput | notifikasiUpdateWithWhereUniqueWithoutTransaksiInput[]
    updateMany?: notifikasiUpdateManyWithWhereWithoutTransaksiInput | notifikasiUpdateManyWithWhereWithoutTransaksiInput[]
    deleteMany?: notifikasiScalarWhereInput | notifikasiScalarWhereInput[]
  }

  export type sengketaUpdateOneWithoutTransaksiNestedInput = {
    create?: XOR<sengketaCreateWithoutTransaksiInput, sengketaUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: sengketaCreateOrConnectWithoutTransaksiInput
    upsert?: sengketaUpsertWithoutTransaksiInput
    disconnect?: sengketaWhereInput | boolean
    delete?: sengketaWhereInput | boolean
    connect?: sengketaWhereUniqueInput
    update?: XOR<XOR<sengketaUpdateToOneWithWhereWithoutTransaksiInput, sengketaUpdateWithoutTransaksiInput>, sengketaUncheckedUpdateWithoutTransaksiInput>
  }

  export type userUpdateOneRequiredWithoutTransaksi_transaksi_pembeliIdTouserNestedInput = {
    create?: XOR<userCreateWithoutTransaksi_transaksi_pembeliIdTouserInput, userUncheckedCreateWithoutTransaksi_transaksi_pembeliIdTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutTransaksi_transaksi_pembeliIdTouserInput
    upsert?: userUpsertWithoutTransaksi_transaksi_pembeliIdTouserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutTransaksi_transaksi_pembeliIdTouserInput, userUpdateWithoutTransaksi_transaksi_pembeliIdTouserInput>, userUncheckedUpdateWithoutTransaksi_transaksi_pembeliIdTouserInput>
  }

  export type userUpdateOneRequiredWithoutTransaksi_transaksi_penjualIdTouserNestedInput = {
    create?: XOR<userCreateWithoutTransaksi_transaksi_penjualIdTouserInput, userUncheckedCreateWithoutTransaksi_transaksi_penjualIdTouserInput>
    connectOrCreate?: userCreateOrConnectWithoutTransaksi_transaksi_penjualIdTouserInput
    upsert?: userUpsertWithoutTransaksi_transaksi_penjualIdTouserInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutTransaksi_transaksi_penjualIdTouserInput, userUpdateWithoutTransaksi_transaksi_penjualIdTouserInput>, userUncheckedUpdateWithoutTransaksi_transaksi_penjualIdTouserInput>
  }

  export type produkUpdateOneRequiredWithoutTransaksiNestedInput = {
    create?: XOR<produkCreateWithoutTransaksiInput, produkUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: produkCreateOrConnectWithoutTransaksiInput
    upsert?: produkUpsertWithoutTransaksiInput
    connect?: produkWhereUniqueInput
    update?: XOR<XOR<produkUpdateToOneWithWhereWithoutTransaksiInput, produkUpdateWithoutTransaksiInput>, produkUncheckedUpdateWithoutTransaksiInput>
  }

  export type notifikasiUncheckedUpdateManyWithoutTransaksiNestedInput = {
    create?: XOR<notifikasiCreateWithoutTransaksiInput, notifikasiUncheckedCreateWithoutTransaksiInput> | notifikasiCreateWithoutTransaksiInput[] | notifikasiUncheckedCreateWithoutTransaksiInput[]
    connectOrCreate?: notifikasiCreateOrConnectWithoutTransaksiInput | notifikasiCreateOrConnectWithoutTransaksiInput[]
    upsert?: notifikasiUpsertWithWhereUniqueWithoutTransaksiInput | notifikasiUpsertWithWhereUniqueWithoutTransaksiInput[]
    createMany?: notifikasiCreateManyTransaksiInputEnvelope
    set?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    disconnect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    delete?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    connect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    update?: notifikasiUpdateWithWhereUniqueWithoutTransaksiInput | notifikasiUpdateWithWhereUniqueWithoutTransaksiInput[]
    updateMany?: notifikasiUpdateManyWithWhereWithoutTransaksiInput | notifikasiUpdateManyWithWhereWithoutTransaksiInput[]
    deleteMany?: notifikasiScalarWhereInput | notifikasiScalarWhereInput[]
  }

  export type sengketaUncheckedUpdateOneWithoutTransaksiNestedInput = {
    create?: XOR<sengketaCreateWithoutTransaksiInput, sengketaUncheckedCreateWithoutTransaksiInput>
    connectOrCreate?: sengketaCreateOrConnectWithoutTransaksiInput
    upsert?: sengketaUpsertWithoutTransaksiInput
    disconnect?: sengketaWhereInput | boolean
    delete?: sengketaWhereInput | boolean
    connect?: sengketaWhereUniqueInput
    update?: XOR<XOR<sengketaUpdateToOneWithWhereWithoutTransaksiInput, sengketaUpdateWithoutTransaksiInput>, sengketaUncheckedUpdateWithoutTransaksiInput>
  }

  export type aplikasi_penjualCreateNestedOneWithoutUserInput = {
    create?: XOR<aplikasi_penjualCreateWithoutUserInput, aplikasi_penjualUncheckedCreateWithoutUserInput>
    connectOrCreate?: aplikasi_penjualCreateOrConnectWithoutUserInput
    connect?: aplikasi_penjualWhereUniqueInput
  }

  export type notifikasiCreateNestedManyWithoutUserInput = {
    create?: XOR<notifikasiCreateWithoutUserInput, notifikasiUncheckedCreateWithoutUserInput> | notifikasiCreateWithoutUserInput[] | notifikasiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: notifikasiCreateOrConnectWithoutUserInput | notifikasiCreateOrConnectWithoutUserInput[]
    createMany?: notifikasiCreateManyUserInputEnvelope
    connect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
  }

  export type produkCreateNestedManyWithoutUserInput = {
    create?: XOR<produkCreateWithoutUserInput, produkUncheckedCreateWithoutUserInput> | produkCreateWithoutUserInput[] | produkUncheckedCreateWithoutUserInput[]
    connectOrCreate?: produkCreateOrConnectWithoutUserInput | produkCreateOrConnectWithoutUserInput[]
    createMany?: produkCreateManyUserInputEnvelope
    connect?: produkWhereUniqueInput | produkWhereUniqueInput[]
  }

  export type profileCreateNestedOneWithoutUserInput = {
    create?: XOR<profileCreateWithoutUserInput, profileUncheckedCreateWithoutUserInput>
    connectOrCreate?: profileCreateOrConnectWithoutUserInput
    connect?: profileWhereUniqueInput
  }

  export type transaksiCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput = {
    create?: XOR<transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput> | transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput[] | transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUser_transaksi_pembeliIdTouserInput | transaksiCreateOrConnectWithoutUser_transaksi_pembeliIdTouserInput[]
    createMany?: transaksiCreateManyUser_transaksi_pembeliIdTouserInputEnvelope
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
  }

  export type transaksiCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput = {
    create?: XOR<transaksiCreateWithoutUser_transaksi_penjualIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput> | transaksiCreateWithoutUser_transaksi_penjualIdTouserInput[] | transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUser_transaksi_penjualIdTouserInput | transaksiCreateOrConnectWithoutUser_transaksi_penjualIdTouserInput[]
    createMany?: transaksiCreateManyUser_transaksi_penjualIdTouserInputEnvelope
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
  }

  export type aplikasi_penjualUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<aplikasi_penjualCreateWithoutUserInput, aplikasi_penjualUncheckedCreateWithoutUserInput>
    connectOrCreate?: aplikasi_penjualCreateOrConnectWithoutUserInput
    connect?: aplikasi_penjualWhereUniqueInput
  }

  export type notifikasiUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<notifikasiCreateWithoutUserInput, notifikasiUncheckedCreateWithoutUserInput> | notifikasiCreateWithoutUserInput[] | notifikasiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: notifikasiCreateOrConnectWithoutUserInput | notifikasiCreateOrConnectWithoutUserInput[]
    createMany?: notifikasiCreateManyUserInputEnvelope
    connect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
  }

  export type produkUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<produkCreateWithoutUserInput, produkUncheckedCreateWithoutUserInput> | produkCreateWithoutUserInput[] | produkUncheckedCreateWithoutUserInput[]
    connectOrCreate?: produkCreateOrConnectWithoutUserInput | produkCreateOrConnectWithoutUserInput[]
    createMany?: produkCreateManyUserInputEnvelope
    connect?: produkWhereUniqueInput | produkWhereUniqueInput[]
  }

  export type profileUncheckedCreateNestedOneWithoutUserInput = {
    create?: XOR<profileCreateWithoutUserInput, profileUncheckedCreateWithoutUserInput>
    connectOrCreate?: profileCreateOrConnectWithoutUserInput
    connect?: profileWhereUniqueInput
  }

  export type transaksiUncheckedCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput = {
    create?: XOR<transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput> | transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput[] | transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUser_transaksi_pembeliIdTouserInput | transaksiCreateOrConnectWithoutUser_transaksi_pembeliIdTouserInput[]
    createMany?: transaksiCreateManyUser_transaksi_pembeliIdTouserInputEnvelope
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
  }

  export type transaksiUncheckedCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput = {
    create?: XOR<transaksiCreateWithoutUser_transaksi_penjualIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput> | transaksiCreateWithoutUser_transaksi_penjualIdTouserInput[] | transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUser_transaksi_penjualIdTouserInput | transaksiCreateOrConnectWithoutUser_transaksi_penjualIdTouserInput[]
    createMany?: transaksiCreateManyUser_transaksi_penjualIdTouserInputEnvelope
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
  }

  export type Enumuser_roleFieldUpdateOperationsInput = {
    set?: $Enums.user_role
  }

  export type aplikasi_penjualUpdateOneWithoutUserNestedInput = {
    create?: XOR<aplikasi_penjualCreateWithoutUserInput, aplikasi_penjualUncheckedCreateWithoutUserInput>
    connectOrCreate?: aplikasi_penjualCreateOrConnectWithoutUserInput
    upsert?: aplikasi_penjualUpsertWithoutUserInput
    disconnect?: aplikasi_penjualWhereInput | boolean
    delete?: aplikasi_penjualWhereInput | boolean
    connect?: aplikasi_penjualWhereUniqueInput
    update?: XOR<XOR<aplikasi_penjualUpdateToOneWithWhereWithoutUserInput, aplikasi_penjualUpdateWithoutUserInput>, aplikasi_penjualUncheckedUpdateWithoutUserInput>
  }

  export type notifikasiUpdateManyWithoutUserNestedInput = {
    create?: XOR<notifikasiCreateWithoutUserInput, notifikasiUncheckedCreateWithoutUserInput> | notifikasiCreateWithoutUserInput[] | notifikasiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: notifikasiCreateOrConnectWithoutUserInput | notifikasiCreateOrConnectWithoutUserInput[]
    upsert?: notifikasiUpsertWithWhereUniqueWithoutUserInput | notifikasiUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: notifikasiCreateManyUserInputEnvelope
    set?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    disconnect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    delete?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    connect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    update?: notifikasiUpdateWithWhereUniqueWithoutUserInput | notifikasiUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: notifikasiUpdateManyWithWhereWithoutUserInput | notifikasiUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: notifikasiScalarWhereInput | notifikasiScalarWhereInput[]
  }

  export type produkUpdateManyWithoutUserNestedInput = {
    create?: XOR<produkCreateWithoutUserInput, produkUncheckedCreateWithoutUserInput> | produkCreateWithoutUserInput[] | produkUncheckedCreateWithoutUserInput[]
    connectOrCreate?: produkCreateOrConnectWithoutUserInput | produkCreateOrConnectWithoutUserInput[]
    upsert?: produkUpsertWithWhereUniqueWithoutUserInput | produkUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: produkCreateManyUserInputEnvelope
    set?: produkWhereUniqueInput | produkWhereUniqueInput[]
    disconnect?: produkWhereUniqueInput | produkWhereUniqueInput[]
    delete?: produkWhereUniqueInput | produkWhereUniqueInput[]
    connect?: produkWhereUniqueInput | produkWhereUniqueInput[]
    update?: produkUpdateWithWhereUniqueWithoutUserInput | produkUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: produkUpdateManyWithWhereWithoutUserInput | produkUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: produkScalarWhereInput | produkScalarWhereInput[]
  }

  export type profileUpdateOneWithoutUserNestedInput = {
    create?: XOR<profileCreateWithoutUserInput, profileUncheckedCreateWithoutUserInput>
    connectOrCreate?: profileCreateOrConnectWithoutUserInput
    upsert?: profileUpsertWithoutUserInput
    disconnect?: profileWhereInput | boolean
    delete?: profileWhereInput | boolean
    connect?: profileWhereUniqueInput
    update?: XOR<XOR<profileUpdateToOneWithWhereWithoutUserInput, profileUpdateWithoutUserInput>, profileUncheckedUpdateWithoutUserInput>
  }

  export type transaksiUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput = {
    create?: XOR<transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput> | transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput[] | transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUser_transaksi_pembeliIdTouserInput | transaksiCreateOrConnectWithoutUser_transaksi_pembeliIdTouserInput[]
    upsert?: transaksiUpsertWithWhereUniqueWithoutUser_transaksi_pembeliIdTouserInput | transaksiUpsertWithWhereUniqueWithoutUser_transaksi_pembeliIdTouserInput[]
    createMany?: transaksiCreateManyUser_transaksi_pembeliIdTouserInputEnvelope
    set?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    disconnect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    delete?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    update?: transaksiUpdateWithWhereUniqueWithoutUser_transaksi_pembeliIdTouserInput | transaksiUpdateWithWhereUniqueWithoutUser_transaksi_pembeliIdTouserInput[]
    updateMany?: transaksiUpdateManyWithWhereWithoutUser_transaksi_pembeliIdTouserInput | transaksiUpdateManyWithWhereWithoutUser_transaksi_pembeliIdTouserInput[]
    deleteMany?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
  }

  export type transaksiUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput = {
    create?: XOR<transaksiCreateWithoutUser_transaksi_penjualIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput> | transaksiCreateWithoutUser_transaksi_penjualIdTouserInput[] | transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUser_transaksi_penjualIdTouserInput | transaksiCreateOrConnectWithoutUser_transaksi_penjualIdTouserInput[]
    upsert?: transaksiUpsertWithWhereUniqueWithoutUser_transaksi_penjualIdTouserInput | transaksiUpsertWithWhereUniqueWithoutUser_transaksi_penjualIdTouserInput[]
    createMany?: transaksiCreateManyUser_transaksi_penjualIdTouserInputEnvelope
    set?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    disconnect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    delete?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    update?: transaksiUpdateWithWhereUniqueWithoutUser_transaksi_penjualIdTouserInput | transaksiUpdateWithWhereUniqueWithoutUser_transaksi_penjualIdTouserInput[]
    updateMany?: transaksiUpdateManyWithWhereWithoutUser_transaksi_penjualIdTouserInput | transaksiUpdateManyWithWhereWithoutUser_transaksi_penjualIdTouserInput[]
    deleteMany?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
  }

  export type aplikasi_penjualUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<aplikasi_penjualCreateWithoutUserInput, aplikasi_penjualUncheckedCreateWithoutUserInput>
    connectOrCreate?: aplikasi_penjualCreateOrConnectWithoutUserInput
    upsert?: aplikasi_penjualUpsertWithoutUserInput
    disconnect?: aplikasi_penjualWhereInput | boolean
    delete?: aplikasi_penjualWhereInput | boolean
    connect?: aplikasi_penjualWhereUniqueInput
    update?: XOR<XOR<aplikasi_penjualUpdateToOneWithWhereWithoutUserInput, aplikasi_penjualUpdateWithoutUserInput>, aplikasi_penjualUncheckedUpdateWithoutUserInput>
  }

  export type notifikasiUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<notifikasiCreateWithoutUserInput, notifikasiUncheckedCreateWithoutUserInput> | notifikasiCreateWithoutUserInput[] | notifikasiUncheckedCreateWithoutUserInput[]
    connectOrCreate?: notifikasiCreateOrConnectWithoutUserInput | notifikasiCreateOrConnectWithoutUserInput[]
    upsert?: notifikasiUpsertWithWhereUniqueWithoutUserInput | notifikasiUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: notifikasiCreateManyUserInputEnvelope
    set?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    disconnect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    delete?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    connect?: notifikasiWhereUniqueInput | notifikasiWhereUniqueInput[]
    update?: notifikasiUpdateWithWhereUniqueWithoutUserInput | notifikasiUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: notifikasiUpdateManyWithWhereWithoutUserInput | notifikasiUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: notifikasiScalarWhereInput | notifikasiScalarWhereInput[]
  }

  export type produkUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<produkCreateWithoutUserInput, produkUncheckedCreateWithoutUserInput> | produkCreateWithoutUserInput[] | produkUncheckedCreateWithoutUserInput[]
    connectOrCreate?: produkCreateOrConnectWithoutUserInput | produkCreateOrConnectWithoutUserInput[]
    upsert?: produkUpsertWithWhereUniqueWithoutUserInput | produkUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: produkCreateManyUserInputEnvelope
    set?: produkWhereUniqueInput | produkWhereUniqueInput[]
    disconnect?: produkWhereUniqueInput | produkWhereUniqueInput[]
    delete?: produkWhereUniqueInput | produkWhereUniqueInput[]
    connect?: produkWhereUniqueInput | produkWhereUniqueInput[]
    update?: produkUpdateWithWhereUniqueWithoutUserInput | produkUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: produkUpdateManyWithWhereWithoutUserInput | produkUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: produkScalarWhereInput | produkScalarWhereInput[]
  }

  export type profileUncheckedUpdateOneWithoutUserNestedInput = {
    create?: XOR<profileCreateWithoutUserInput, profileUncheckedCreateWithoutUserInput>
    connectOrCreate?: profileCreateOrConnectWithoutUserInput
    upsert?: profileUpsertWithoutUserInput
    disconnect?: profileWhereInput | boolean
    delete?: profileWhereInput | boolean
    connect?: profileWhereUniqueInput
    update?: XOR<XOR<profileUpdateToOneWithWhereWithoutUserInput, profileUpdateWithoutUserInput>, profileUncheckedUpdateWithoutUserInput>
  }

  export type transaksiUncheckedUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput = {
    create?: XOR<transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput> | transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput[] | transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUser_transaksi_pembeliIdTouserInput | transaksiCreateOrConnectWithoutUser_transaksi_pembeliIdTouserInput[]
    upsert?: transaksiUpsertWithWhereUniqueWithoutUser_transaksi_pembeliIdTouserInput | transaksiUpsertWithWhereUniqueWithoutUser_transaksi_pembeliIdTouserInput[]
    createMany?: transaksiCreateManyUser_transaksi_pembeliIdTouserInputEnvelope
    set?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    disconnect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    delete?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    update?: transaksiUpdateWithWhereUniqueWithoutUser_transaksi_pembeliIdTouserInput | transaksiUpdateWithWhereUniqueWithoutUser_transaksi_pembeliIdTouserInput[]
    updateMany?: transaksiUpdateManyWithWhereWithoutUser_transaksi_pembeliIdTouserInput | transaksiUpdateManyWithWhereWithoutUser_transaksi_pembeliIdTouserInput[]
    deleteMany?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
  }

  export type transaksiUncheckedUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput = {
    create?: XOR<transaksiCreateWithoutUser_transaksi_penjualIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput> | transaksiCreateWithoutUser_transaksi_penjualIdTouserInput[] | transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput[]
    connectOrCreate?: transaksiCreateOrConnectWithoutUser_transaksi_penjualIdTouserInput | transaksiCreateOrConnectWithoutUser_transaksi_penjualIdTouserInput[]
    upsert?: transaksiUpsertWithWhereUniqueWithoutUser_transaksi_penjualIdTouserInput | transaksiUpsertWithWhereUniqueWithoutUser_transaksi_penjualIdTouserInput[]
    createMany?: transaksiCreateManyUser_transaksi_penjualIdTouserInputEnvelope
    set?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    disconnect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    delete?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    connect?: transaksiWhereUniqueInput | transaksiWhereUniqueInput[]
    update?: transaksiUpdateWithWhereUniqueWithoutUser_transaksi_penjualIdTouserInput | transaksiUpdateWithWhereUniqueWithoutUser_transaksi_penjualIdTouserInput[]
    updateMany?: transaksiUpdateManyWithWhereWithoutUser_transaksi_penjualIdTouserInput | transaksiUpdateManyWithWhereWithoutUser_transaksi_penjualIdTouserInput[]
    deleteMany?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutAplikasiPenjualInput = {
    create?: XOR<userCreateWithoutAplikasiPenjualInput, userUncheckedCreateWithoutAplikasiPenjualInput>
    connectOrCreate?: userCreateOrConnectWithoutAplikasiPenjualInput
    connect?: userWhereUniqueInput
  }

  export type Enumstatus_aplikasiFieldUpdateOperationsInput = {
    set?: $Enums.status_aplikasi
  }

  export type userUpdateOneRequiredWithoutAplikasiPenjualNestedInput = {
    create?: XOR<userCreateWithoutAplikasiPenjualInput, userUncheckedCreateWithoutAplikasiPenjualInput>
    connectOrCreate?: userCreateOrConnectWithoutAplikasiPenjualInput
    upsert?: userUpsertWithoutAplikasiPenjualInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutAplikasiPenjualInput, userUpdateWithoutAplikasiPenjualInput>, userUncheckedUpdateWithoutAplikasiPenjualInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedEnumnotifikasi_tipeFilter<$PrismaModel = never> = {
    equals?: $Enums.notifikasi_tipe | Enumnotifikasi_tipeFieldRefInput<$PrismaModel>
    in?: $Enums.notifikasi_tipe[]
    notIn?: $Enums.notifikasi_tipe[]
    not?: NestedEnumnotifikasi_tipeFilter<$PrismaModel> | $Enums.notifikasi_tipe
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumnotifikasi_tipeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.notifikasi_tipe | Enumnotifikasi_tipeFieldRefInput<$PrismaModel>
    in?: $Enums.notifikasi_tipe[]
    notIn?: $Enums.notifikasi_tipe[]
    not?: NestedEnumnotifikasi_tipeWithAggregatesFilter<$PrismaModel> | $Enums.notifikasi_tipe
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumnotifikasi_tipeFilter<$PrismaModel>
    _max?: NestedEnumnotifikasi_tipeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumproduk_statusProdukNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.produk_statusProduk | Enumproduk_statusProdukFieldRefInput<$PrismaModel> | null
    in?: $Enums.produk_statusProduk[] | null
    notIn?: $Enums.produk_statusProduk[] | null
    not?: NestedEnumproduk_statusProdukNullableFilter<$PrismaModel> | $Enums.produk_statusProduk | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumproduk_statusProdukNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.produk_statusProduk | Enumproduk_statusProdukFieldRefInput<$PrismaModel> | null
    in?: $Enums.produk_statusProduk[] | null
    notIn?: $Enums.produk_statusProduk[] | null
    not?: NestedEnumproduk_statusProdukNullableWithAggregatesFilter<$PrismaModel> | $Enums.produk_statusProduk | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumproduk_statusProdukNullableFilter<$PrismaModel>
    _max?: NestedEnumproduk_statusProdukNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumsengketa_disputeTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.sengketa_disputeType | Enumsengketa_disputeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.sengketa_disputeType[]
    notIn?: $Enums.sengketa_disputeType[]
    not?: NestedEnumsengketa_disputeTypeFilter<$PrismaModel> | $Enums.sengketa_disputeType
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumsengketa_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.sengketa_status | Enumsengketa_statusFieldRefInput<$PrismaModel>
    in?: $Enums.sengketa_status[]
    notIn?: $Enums.sengketa_status[]
    not?: NestedEnumsengketa_statusFilter<$PrismaModel> | $Enums.sengketa_status
  }

  export type NestedEnumsengketa_disputeTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.sengketa_disputeType | Enumsengketa_disputeTypeFieldRefInput<$PrismaModel>
    in?: $Enums.sengketa_disputeType[]
    notIn?: $Enums.sengketa_disputeType[]
    not?: NestedEnumsengketa_disputeTypeWithAggregatesFilter<$PrismaModel> | $Enums.sengketa_disputeType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumsengketa_disputeTypeFilter<$PrismaModel>
    _max?: NestedEnumsengketa_disputeTypeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumsengketa_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.sengketa_status | Enumsengketa_statusFieldRefInput<$PrismaModel>
    in?: $Enums.sengketa_status[]
    notIn?: $Enums.sengketa_status[]
    not?: NestedEnumsengketa_statusWithAggregatesFilter<$PrismaModel> | $Enums.sengketa_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumsengketa_statusFilter<$PrismaModel>
    _max?: NestedEnumsengketa_statusFilter<$PrismaModel>
  }

  export type NestedEnumtransaksi_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.transaksi_status | Enumtransaksi_statusFieldRefInput<$PrismaModel>
    in?: $Enums.transaksi_status[]
    notIn?: $Enums.transaksi_status[]
    not?: NestedEnumtransaksi_statusFilter<$PrismaModel> | $Enums.transaksi_status
  }

  export type NestedEnumtransaksi_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.transaksi_status | Enumtransaksi_statusFieldRefInput<$PrismaModel>
    in?: $Enums.transaksi_status[]
    notIn?: $Enums.transaksi_status[]
    not?: NestedEnumtransaksi_statusWithAggregatesFilter<$PrismaModel> | $Enums.transaksi_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumtransaksi_statusFilter<$PrismaModel>
    _max?: NestedEnumtransaksi_statusFilter<$PrismaModel>
  }

  export type NestedEnumuser_roleFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[]
    notIn?: $Enums.user_role[]
    not?: NestedEnumuser_roleFilter<$PrismaModel> | $Enums.user_role
  }

  export type NestedEnumuser_roleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_role | Enumuser_roleFieldRefInput<$PrismaModel>
    in?: $Enums.user_role[]
    notIn?: $Enums.user_role[]
    not?: NestedEnumuser_roleWithAggregatesFilter<$PrismaModel> | $Enums.user_role
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_roleFilter<$PrismaModel>
    _max?: NestedEnumuser_roleFilter<$PrismaModel>
  }

  export type NestedEnumstatus_aplikasiFilter<$PrismaModel = never> = {
    equals?: $Enums.status_aplikasi | Enumstatus_aplikasiFieldRefInput<$PrismaModel>
    in?: $Enums.status_aplikasi[]
    notIn?: $Enums.status_aplikasi[]
    not?: NestedEnumstatus_aplikasiFilter<$PrismaModel> | $Enums.status_aplikasi
  }

  export type NestedEnumstatus_aplikasiWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.status_aplikasi | Enumstatus_aplikasiFieldRefInput<$PrismaModel>
    in?: $Enums.status_aplikasi[]
    notIn?: $Enums.status_aplikasi[]
    not?: NestedEnumstatus_aplikasiWithAggregatesFilter<$PrismaModel> | $Enums.status_aplikasi
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumstatus_aplikasiFilter<$PrismaModel>
    _max?: NestedEnumstatus_aplikasiFilter<$PrismaModel>
  }

  export type transaksiCreateWithoutNotifikasiInput = {
    id: string
    kodeTransaksi: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    sengketa?: sengketaCreateNestedOneWithoutTransaksiInput
    user_transaksi_pembeliIdTouser: userCreateNestedOneWithoutTransaksi_transaksi_pembeliIdTouserInput
    user_transaksi_penjualIdTouser: userCreateNestedOneWithoutTransaksi_transaksi_penjualIdTouserInput
    produk: produkCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiUncheckedCreateWithoutNotifikasiInput = {
    id: string
    kodeTransaksi: string
    produkId: string
    pembeliId: string
    penjualId: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    sengketa?: sengketaUncheckedCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiCreateOrConnectWithoutNotifikasiInput = {
    where: transaksiWhereUniqueInput
    create: XOR<transaksiCreateWithoutNotifikasiInput, transaksiUncheckedCreateWithoutNotifikasiInput>
  }

  export type userCreateWithoutNotifikasiInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualCreateNestedOneWithoutUserInput
    produk?: produkCreateNestedManyWithoutUserInput
    profile?: profileCreateNestedOneWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
    transaksi_transaksi_penjualIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userUncheckedCreateWithoutNotifikasiInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedCreateNestedOneWithoutUserInput
    produk?: produkUncheckedCreateNestedManyWithoutUserInput
    profile?: profileUncheckedCreateNestedOneWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userCreateOrConnectWithoutNotifikasiInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutNotifikasiInput, userUncheckedCreateWithoutNotifikasiInput>
  }

  export type transaksiUpsertWithoutNotifikasiInput = {
    update: XOR<transaksiUpdateWithoutNotifikasiInput, transaksiUncheckedUpdateWithoutNotifikasiInput>
    create: XOR<transaksiCreateWithoutNotifikasiInput, transaksiUncheckedCreateWithoutNotifikasiInput>
    where?: transaksiWhereInput
  }

  export type transaksiUpdateToOneWithWhereWithoutNotifikasiInput = {
    where?: transaksiWhereInput
    data: XOR<transaksiUpdateWithoutNotifikasiInput, transaksiUncheckedUpdateWithoutNotifikasiInput>
  }

  export type transaksiUpdateWithoutNotifikasiInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sengketa?: sengketaUpdateOneWithoutTransaksiNestedInput
    user_transaksi_pembeliIdTouser?: userUpdateOneRequiredWithoutTransaksi_transaksi_pembeliIdTouserNestedInput
    user_transaksi_penjualIdTouser?: userUpdateOneRequiredWithoutTransaksi_transaksi_penjualIdTouserNestedInput
    produk?: produkUpdateOneRequiredWithoutTransaksiNestedInput
  }

  export type transaksiUncheckedUpdateWithoutNotifikasiInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    produkId?: StringFieldUpdateOperationsInput | string
    pembeliId?: StringFieldUpdateOperationsInput | string
    penjualId?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sengketa?: sengketaUncheckedUpdateOneWithoutTransaksiNestedInput
  }

  export type userUpsertWithoutNotifikasiInput = {
    update: XOR<userUpdateWithoutNotifikasiInput, userUncheckedUpdateWithoutNotifikasiInput>
    create: XOR<userCreateWithoutNotifikasiInput, userUncheckedCreateWithoutNotifikasiInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutNotifikasiInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutNotifikasiInput, userUncheckedUpdateWithoutNotifikasiInput>
  }

  export type userUpdateWithoutNotifikasiInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUpdateOneWithoutUserNestedInput
    produk?: produkUpdateManyWithoutUserNestedInput
    profile?: profileUpdateOneWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type userUncheckedUpdateWithoutNotifikasiInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedUpdateOneWithoutUserNestedInput
    produk?: produkUncheckedUpdateManyWithoutUserNestedInput
    profile?: profileUncheckedUpdateOneWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type userCreateWithoutProdukInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualCreateNestedOneWithoutUserInput
    notifikasi?: notifikasiCreateNestedManyWithoutUserInput
    profile?: profileCreateNestedOneWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
    transaksi_transaksi_penjualIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userUncheckedCreateWithoutProdukInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedCreateNestedOneWithoutUserInput
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutUserInput
    profile?: profileUncheckedCreateNestedOneWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userCreateOrConnectWithoutProdukInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutProdukInput, userUncheckedCreateWithoutProdukInput>
  }

  export type transaksiCreateWithoutProdukInput = {
    id: string
    kodeTransaksi: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    notifikasi?: notifikasiCreateNestedManyWithoutTransaksiInput
    sengketa?: sengketaCreateNestedOneWithoutTransaksiInput
    user_transaksi_pembeliIdTouser: userCreateNestedOneWithoutTransaksi_transaksi_pembeliIdTouserInput
    user_transaksi_penjualIdTouser: userCreateNestedOneWithoutTransaksi_transaksi_penjualIdTouserInput
  }

  export type transaksiUncheckedCreateWithoutProdukInput = {
    id: string
    kodeTransaksi: string
    pembeliId: string
    penjualId: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutTransaksiInput
    sengketa?: sengketaUncheckedCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiCreateOrConnectWithoutProdukInput = {
    where: transaksiWhereUniqueInput
    create: XOR<transaksiCreateWithoutProdukInput, transaksiUncheckedCreateWithoutProdukInput>
  }

  export type transaksiCreateManyProdukInputEnvelope = {
    data: transaksiCreateManyProdukInput | transaksiCreateManyProdukInput[]
    skipDuplicates?: boolean
  }

  export type userUpsertWithoutProdukInput = {
    update: XOR<userUpdateWithoutProdukInput, userUncheckedUpdateWithoutProdukInput>
    create: XOR<userCreateWithoutProdukInput, userUncheckedCreateWithoutProdukInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutProdukInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutProdukInput, userUncheckedUpdateWithoutProdukInput>
  }

  export type userUpdateWithoutProdukInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUpdateOneWithoutUserNestedInput
    notifikasi?: notifikasiUpdateManyWithoutUserNestedInput
    profile?: profileUpdateOneWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type userUncheckedUpdateWithoutProdukInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedUpdateOneWithoutUserNestedInput
    notifikasi?: notifikasiUncheckedUpdateManyWithoutUserNestedInput
    profile?: profileUncheckedUpdateOneWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type transaksiUpsertWithWhereUniqueWithoutProdukInput = {
    where: transaksiWhereUniqueInput
    update: XOR<transaksiUpdateWithoutProdukInput, transaksiUncheckedUpdateWithoutProdukInput>
    create: XOR<transaksiCreateWithoutProdukInput, transaksiUncheckedCreateWithoutProdukInput>
  }

  export type transaksiUpdateWithWhereUniqueWithoutProdukInput = {
    where: transaksiWhereUniqueInput
    data: XOR<transaksiUpdateWithoutProdukInput, transaksiUncheckedUpdateWithoutProdukInput>
  }

  export type transaksiUpdateManyWithWhereWithoutProdukInput = {
    where: transaksiScalarWhereInput
    data: XOR<transaksiUpdateManyMutationInput, transaksiUncheckedUpdateManyWithoutProdukInput>
  }

  export type transaksiScalarWhereInput = {
    AND?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
    OR?: transaksiScalarWhereInput[]
    NOT?: transaksiScalarWhereInput | transaksiScalarWhereInput[]
    id?: StringFilter<"transaksi"> | string
    kodeTransaksi?: StringFilter<"transaksi"> | string
    produkId?: StringFilter<"transaksi"> | string
    pembeliId?: StringFilter<"transaksi"> | string
    penjualId?: StringFilter<"transaksi"> | string
    status?: Enumtransaksi_statusFilter<"transaksi"> | $Enums.transaksi_status
    waktuBayar?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    waktuSelesai?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    contractAddress?: StringNullableFilter<"transaksi"> | string | null
    escrowAmount?: StringNullableFilter<"transaksi"> | string | null
    smartContractTxHash?: StringNullableFilter<"transaksi"> | string | null
    accountData?: StringNullableFilter<"transaksi"> | string | null
    deskripsiBukti?: StringNullableFilter<"transaksi"> | string | null
    adminRefundAt?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    adminRefundBy?: StringNullableFilter<"transaksi"> | string | null
    adminRefundNote?: StringNullableFilter<"transaksi"> | string | null
    adminRefundTxHash?: StringNullableFilter<"transaksi"> | string | null
    adminReleaseAt?: DateTimeNullableFilter<"transaksi"> | Date | string | null
    adminReleaseBy?: StringNullableFilter<"transaksi"> | string | null
    adminReleaseNote?: StringNullableFilter<"transaksi"> | string | null
    adminReleaseTxHash?: StringNullableFilter<"transaksi"> | string | null
    dibuatPada?: DateTimeFilter<"transaksi"> | Date | string
    diperbaruiPada?: DateTimeFilter<"transaksi"> | Date | string
    escrowId?: StringNullableFilter<"transaksi"> | string | null
    expiredAt?: DateTimeNullableFilter<"transaksi"> | Date | string | null
  }

  export type userCreateWithoutProfileInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualCreateNestedOneWithoutUserInput
    notifikasi?: notifikasiCreateNestedManyWithoutUserInput
    produk?: produkCreateNestedManyWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
    transaksi_transaksi_penjualIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userUncheckedCreateWithoutProfileInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedCreateNestedOneWithoutUserInput
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutUserInput
    produk?: produkUncheckedCreateNestedManyWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userCreateOrConnectWithoutProfileInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutProfileInput, userUncheckedCreateWithoutProfileInput>
  }

  export type userUpsertWithoutProfileInput = {
    update: XOR<userUpdateWithoutProfileInput, userUncheckedUpdateWithoutProfileInput>
    create: XOR<userCreateWithoutProfileInput, userUncheckedCreateWithoutProfileInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutProfileInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutProfileInput, userUncheckedUpdateWithoutProfileInput>
  }

  export type userUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUpdateOneWithoutUserNestedInput
    notifikasi?: notifikasiUpdateManyWithoutUserNestedInput
    produk?: produkUpdateManyWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type userUncheckedUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedUpdateOneWithoutUserNestedInput
    notifikasi?: notifikasiUncheckedUpdateManyWithoutUserNestedInput
    produk?: produkUncheckedUpdateManyWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type transaksiCreateWithoutSengketaInput = {
    id: string
    kodeTransaksi: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    notifikasi?: notifikasiCreateNestedManyWithoutTransaksiInput
    user_transaksi_pembeliIdTouser: userCreateNestedOneWithoutTransaksi_transaksi_pembeliIdTouserInput
    user_transaksi_penjualIdTouser: userCreateNestedOneWithoutTransaksi_transaksi_penjualIdTouserInput
    produk: produkCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiUncheckedCreateWithoutSengketaInput = {
    id: string
    kodeTransaksi: string
    produkId: string
    pembeliId: string
    penjualId: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutTransaksiInput
  }

  export type transaksiCreateOrConnectWithoutSengketaInput = {
    where: transaksiWhereUniqueInput
    create: XOR<transaksiCreateWithoutSengketaInput, transaksiUncheckedCreateWithoutSengketaInput>
  }

  export type transaksiUpsertWithoutSengketaInput = {
    update: XOR<transaksiUpdateWithoutSengketaInput, transaksiUncheckedUpdateWithoutSengketaInput>
    create: XOR<transaksiCreateWithoutSengketaInput, transaksiUncheckedCreateWithoutSengketaInput>
    where?: transaksiWhereInput
  }

  export type transaksiUpdateToOneWithWhereWithoutSengketaInput = {
    where?: transaksiWhereInput
    data: XOR<transaksiUpdateWithoutSengketaInput, transaksiUncheckedUpdateWithoutSengketaInput>
  }

  export type transaksiUpdateWithoutSengketaInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifikasi?: notifikasiUpdateManyWithoutTransaksiNestedInput
    user_transaksi_pembeliIdTouser?: userUpdateOneRequiredWithoutTransaksi_transaksi_pembeliIdTouserNestedInput
    user_transaksi_penjualIdTouser?: userUpdateOneRequiredWithoutTransaksi_transaksi_penjualIdTouserNestedInput
    produk?: produkUpdateOneRequiredWithoutTransaksiNestedInput
  }

  export type transaksiUncheckedUpdateWithoutSengketaInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    produkId?: StringFieldUpdateOperationsInput | string
    pembeliId?: StringFieldUpdateOperationsInput | string
    penjualId?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifikasi?: notifikasiUncheckedUpdateManyWithoutTransaksiNestedInput
  }

  export type notifikasiCreateWithoutTransaksiInput = {
    id: string
    tipe: $Enums.notifikasi_tipe
    judul: string
    pesan: string
    dibaca?: boolean
    dibuatPada?: Date | string
    user: userCreateNestedOneWithoutNotifikasiInput
  }

  export type notifikasiUncheckedCreateWithoutTransaksiInput = {
    id: string
    userId: string
    tipe: $Enums.notifikasi_tipe
    judul: string
    pesan: string
    dibaca?: boolean
    dibuatPada?: Date | string
  }

  export type notifikasiCreateOrConnectWithoutTransaksiInput = {
    where: notifikasiWhereUniqueInput
    create: XOR<notifikasiCreateWithoutTransaksiInput, notifikasiUncheckedCreateWithoutTransaksiInput>
  }

  export type notifikasiCreateManyTransaksiInputEnvelope = {
    data: notifikasiCreateManyTransaksiInput | notifikasiCreateManyTransaksiInput[]
    skipDuplicates?: boolean
  }

  export type sengketaCreateWithoutTransaksiInput = {
    id: string
    deskripsi?: string | null
    adminNote?: string | null
    dibuatPada?: Date | string
    disputeType?: $Enums.sengketa_disputeType
    paymentMethod?: string | null
    paymentTxHash?: string | null
    pembeliBukti?: string | null
    penjualBukti?: string | null
    resolution?: string | null
    resolvedAt?: Date | string | null
    status?: $Enums.sengketa_status
  }

  export type sengketaUncheckedCreateWithoutTransaksiInput = {
    id: string
    deskripsi?: string | null
    adminNote?: string | null
    dibuatPada?: Date | string
    disputeType?: $Enums.sengketa_disputeType
    paymentMethod?: string | null
    paymentTxHash?: string | null
    pembeliBukti?: string | null
    penjualBukti?: string | null
    resolution?: string | null
    resolvedAt?: Date | string | null
    status?: $Enums.sengketa_status
  }

  export type sengketaCreateOrConnectWithoutTransaksiInput = {
    where: sengketaWhereUniqueInput
    create: XOR<sengketaCreateWithoutTransaksiInput, sengketaUncheckedCreateWithoutTransaksiInput>
  }

  export type userCreateWithoutTransaksi_transaksi_pembeliIdTouserInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualCreateNestedOneWithoutUserInput
    notifikasi?: notifikasiCreateNestedManyWithoutUserInput
    produk?: produkCreateNestedManyWithoutUserInput
    profile?: profileCreateNestedOneWithoutUserInput
    transaksi_transaksi_penjualIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userUncheckedCreateWithoutTransaksi_transaksi_pembeliIdTouserInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedCreateNestedOneWithoutUserInput
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutUserInput
    produk?: produkUncheckedCreateNestedManyWithoutUserInput
    profile?: profileUncheckedCreateNestedOneWithoutUserInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userCreateOrConnectWithoutTransaksi_transaksi_pembeliIdTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutTransaksi_transaksi_pembeliIdTouserInput, userUncheckedCreateWithoutTransaksi_transaksi_pembeliIdTouserInput>
  }

  export type userCreateWithoutTransaksi_transaksi_penjualIdTouserInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualCreateNestedOneWithoutUserInput
    notifikasi?: notifikasiCreateNestedManyWithoutUserInput
    produk?: produkCreateNestedManyWithoutUserInput
    profile?: profileCreateNestedOneWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
  }

  export type userUncheckedCreateWithoutTransaksi_transaksi_penjualIdTouserInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedCreateNestedOneWithoutUserInput
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutUserInput
    produk?: produkUncheckedCreateNestedManyWithoutUserInput
    profile?: profileUncheckedCreateNestedOneWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
  }

  export type userCreateOrConnectWithoutTransaksi_transaksi_penjualIdTouserInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutTransaksi_transaksi_penjualIdTouserInput, userUncheckedCreateWithoutTransaksi_transaksi_penjualIdTouserInput>
  }

  export type produkCreateWithoutTransaksiInput = {
    id: string
    kodeProduk: string
    namaGame: string
    deskripsi?: string | null
    harga: number
    statusJual?: boolean
    gambar?: string | null
    judulProduk: string
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    statusProduk?: $Enums.produk_statusProduk | null
    hargaEth?: number | null
    user: userCreateNestedOneWithoutProdukInput
  }

  export type produkUncheckedCreateWithoutTransaksiInput = {
    id: string
    kodeProduk: string
    namaGame: string
    deskripsi?: string | null
    harga: number
    penjualId: string
    statusJual?: boolean
    gambar?: string | null
    judulProduk: string
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    statusProduk?: $Enums.produk_statusProduk | null
    hargaEth?: number | null
  }

  export type produkCreateOrConnectWithoutTransaksiInput = {
    where: produkWhereUniqueInput
    create: XOR<produkCreateWithoutTransaksiInput, produkUncheckedCreateWithoutTransaksiInput>
  }

  export type notifikasiUpsertWithWhereUniqueWithoutTransaksiInput = {
    where: notifikasiWhereUniqueInput
    update: XOR<notifikasiUpdateWithoutTransaksiInput, notifikasiUncheckedUpdateWithoutTransaksiInput>
    create: XOR<notifikasiCreateWithoutTransaksiInput, notifikasiUncheckedCreateWithoutTransaksiInput>
  }

  export type notifikasiUpdateWithWhereUniqueWithoutTransaksiInput = {
    where: notifikasiWhereUniqueInput
    data: XOR<notifikasiUpdateWithoutTransaksiInput, notifikasiUncheckedUpdateWithoutTransaksiInput>
  }

  export type notifikasiUpdateManyWithWhereWithoutTransaksiInput = {
    where: notifikasiScalarWhereInput
    data: XOR<notifikasiUpdateManyMutationInput, notifikasiUncheckedUpdateManyWithoutTransaksiInput>
  }

  export type notifikasiScalarWhereInput = {
    AND?: notifikasiScalarWhereInput | notifikasiScalarWhereInput[]
    OR?: notifikasiScalarWhereInput[]
    NOT?: notifikasiScalarWhereInput | notifikasiScalarWhereInput[]
    id?: StringFilter<"notifikasi"> | string
    userId?: StringFilter<"notifikasi"> | string
    transaksiId?: StringNullableFilter<"notifikasi"> | string | null
    tipe?: Enumnotifikasi_tipeFilter<"notifikasi"> | $Enums.notifikasi_tipe
    judul?: StringFilter<"notifikasi"> | string
    pesan?: StringFilter<"notifikasi"> | string
    dibaca?: BoolFilter<"notifikasi"> | boolean
    dibuatPada?: DateTimeFilter<"notifikasi"> | Date | string
  }

  export type sengketaUpsertWithoutTransaksiInput = {
    update: XOR<sengketaUpdateWithoutTransaksiInput, sengketaUncheckedUpdateWithoutTransaksiInput>
    create: XOR<sengketaCreateWithoutTransaksiInput, sengketaUncheckedCreateWithoutTransaksiInput>
    where?: sengketaWhereInput
  }

  export type sengketaUpdateToOneWithWhereWithoutTransaksiInput = {
    where?: sengketaWhereInput
    data: XOR<sengketaUpdateWithoutTransaksiInput, sengketaUncheckedUpdateWithoutTransaksiInput>
  }

  export type sengketaUpdateWithoutTransaksiInput = {
    id?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    adminNote?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    disputeType?: Enumsengketa_disputeTypeFieldUpdateOperationsInput | $Enums.sengketa_disputeType
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    pembeliBukti?: NullableStringFieldUpdateOperationsInput | string | null
    penjualBukti?: NullableStringFieldUpdateOperationsInput | string | null
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: Enumsengketa_statusFieldUpdateOperationsInput | $Enums.sengketa_status
  }

  export type sengketaUncheckedUpdateWithoutTransaksiInput = {
    id?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    adminNote?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    disputeType?: Enumsengketa_disputeTypeFieldUpdateOperationsInput | $Enums.sengketa_disputeType
    paymentMethod?: NullableStringFieldUpdateOperationsInput | string | null
    paymentTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    pembeliBukti?: NullableStringFieldUpdateOperationsInput | string | null
    penjualBukti?: NullableStringFieldUpdateOperationsInput | string | null
    resolution?: NullableStringFieldUpdateOperationsInput | string | null
    resolvedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: Enumsengketa_statusFieldUpdateOperationsInput | $Enums.sengketa_status
  }

  export type userUpsertWithoutTransaksi_transaksi_pembeliIdTouserInput = {
    update: XOR<userUpdateWithoutTransaksi_transaksi_pembeliIdTouserInput, userUncheckedUpdateWithoutTransaksi_transaksi_pembeliIdTouserInput>
    create: XOR<userCreateWithoutTransaksi_transaksi_pembeliIdTouserInput, userUncheckedCreateWithoutTransaksi_transaksi_pembeliIdTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutTransaksi_transaksi_pembeliIdTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutTransaksi_transaksi_pembeliIdTouserInput, userUncheckedUpdateWithoutTransaksi_transaksi_pembeliIdTouserInput>
  }

  export type userUpdateWithoutTransaksi_transaksi_pembeliIdTouserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUpdateOneWithoutUserNestedInput
    notifikasi?: notifikasiUpdateManyWithoutUserNestedInput
    produk?: produkUpdateManyWithoutUserNestedInput
    profile?: profileUpdateOneWithoutUserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type userUncheckedUpdateWithoutTransaksi_transaksi_pembeliIdTouserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedUpdateOneWithoutUserNestedInput
    notifikasi?: notifikasiUncheckedUpdateManyWithoutUserNestedInput
    produk?: produkUncheckedUpdateManyWithoutUserNestedInput
    profile?: profileUncheckedUpdateOneWithoutUserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type userUpsertWithoutTransaksi_transaksi_penjualIdTouserInput = {
    update: XOR<userUpdateWithoutTransaksi_transaksi_penjualIdTouserInput, userUncheckedUpdateWithoutTransaksi_transaksi_penjualIdTouserInput>
    create: XOR<userCreateWithoutTransaksi_transaksi_penjualIdTouserInput, userUncheckedCreateWithoutTransaksi_transaksi_penjualIdTouserInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutTransaksi_transaksi_penjualIdTouserInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutTransaksi_transaksi_penjualIdTouserInput, userUncheckedUpdateWithoutTransaksi_transaksi_penjualIdTouserInput>
  }

  export type userUpdateWithoutTransaksi_transaksi_penjualIdTouserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUpdateOneWithoutUserNestedInput
    notifikasi?: notifikasiUpdateManyWithoutUserNestedInput
    produk?: produkUpdateManyWithoutUserNestedInput
    profile?: profileUpdateOneWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
  }

  export type userUncheckedUpdateWithoutTransaksi_transaksi_penjualIdTouserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    aplikasiPenjual?: aplikasi_penjualUncheckedUpdateOneWithoutUserNestedInput
    notifikasi?: notifikasiUncheckedUpdateManyWithoutUserNestedInput
    produk?: produkUncheckedUpdateManyWithoutUserNestedInput
    profile?: profileUncheckedUpdateOneWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
  }

  export type produkUpsertWithoutTransaksiInput = {
    update: XOR<produkUpdateWithoutTransaksiInput, produkUncheckedUpdateWithoutTransaksiInput>
    create: XOR<produkCreateWithoutTransaksiInput, produkUncheckedCreateWithoutTransaksiInput>
    where?: produkWhereInput
  }

  export type produkUpdateToOneWithWhereWithoutTransaksiInput = {
    where?: produkWhereInput
    data: XOR<produkUpdateWithoutTransaksiInput, produkUncheckedUpdateWithoutTransaksiInput>
  }

  export type produkUpdateWithoutTransaksiInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeProduk?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    harga?: IntFieldUpdateOperationsInput | number
    statusJual?: BoolFieldUpdateOperationsInput | boolean
    gambar?: NullableStringFieldUpdateOperationsInput | string | null
    judulProduk?: StringFieldUpdateOperationsInput | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    statusProduk?: NullableEnumproduk_statusProdukFieldUpdateOperationsInput | $Enums.produk_statusProduk | null
    hargaEth?: NullableFloatFieldUpdateOperationsInput | number | null
    user?: userUpdateOneRequiredWithoutProdukNestedInput
  }

  export type produkUncheckedUpdateWithoutTransaksiInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeProduk?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    harga?: IntFieldUpdateOperationsInput | number
    penjualId?: StringFieldUpdateOperationsInput | string
    statusJual?: BoolFieldUpdateOperationsInput | boolean
    gambar?: NullableStringFieldUpdateOperationsInput | string | null
    judulProduk?: StringFieldUpdateOperationsInput | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    statusProduk?: NullableEnumproduk_statusProdukFieldUpdateOperationsInput | $Enums.produk_statusProduk | null
    hargaEth?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type aplikasi_penjualCreateWithoutUserInput = {
    id: string
    nomor_telepon?: string | null
    nomor_whatsapp?: string | null
    alamat?: string | null
    alasan_jual?: string | null
    status?: $Enums.status_aplikasi
    catatan_admin?: string | null
    diajukan_pada?: Date | string | null
    diperbarui?: Date | string | null
  }

  export type aplikasi_penjualUncheckedCreateWithoutUserInput = {
    id: string
    nomor_telepon?: string | null
    nomor_whatsapp?: string | null
    alamat?: string | null
    alasan_jual?: string | null
    status?: $Enums.status_aplikasi
    catatan_admin?: string | null
    diajukan_pada?: Date | string | null
    diperbarui?: Date | string | null
  }

  export type aplikasi_penjualCreateOrConnectWithoutUserInput = {
    where: aplikasi_penjualWhereUniqueInput
    create: XOR<aplikasi_penjualCreateWithoutUserInput, aplikasi_penjualUncheckedCreateWithoutUserInput>
  }

  export type notifikasiCreateWithoutUserInput = {
    id: string
    tipe: $Enums.notifikasi_tipe
    judul: string
    pesan: string
    dibaca?: boolean
    dibuatPada?: Date | string
    transaksi?: transaksiCreateNestedOneWithoutNotifikasiInput
  }

  export type notifikasiUncheckedCreateWithoutUserInput = {
    id: string
    transaksiId?: string | null
    tipe: $Enums.notifikasi_tipe
    judul: string
    pesan: string
    dibaca?: boolean
    dibuatPada?: Date | string
  }

  export type notifikasiCreateOrConnectWithoutUserInput = {
    where: notifikasiWhereUniqueInput
    create: XOR<notifikasiCreateWithoutUserInput, notifikasiUncheckedCreateWithoutUserInput>
  }

  export type notifikasiCreateManyUserInputEnvelope = {
    data: notifikasiCreateManyUserInput | notifikasiCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type produkCreateWithoutUserInput = {
    id: string
    kodeProduk: string
    namaGame: string
    deskripsi?: string | null
    harga: number
    statusJual?: boolean
    gambar?: string | null
    judulProduk: string
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    statusProduk?: $Enums.produk_statusProduk | null
    hargaEth?: number | null
    transaksi?: transaksiCreateNestedManyWithoutProdukInput
  }

  export type produkUncheckedCreateWithoutUserInput = {
    id: string
    kodeProduk: string
    namaGame: string
    deskripsi?: string | null
    harga: number
    statusJual?: boolean
    gambar?: string | null
    judulProduk: string
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    statusProduk?: $Enums.produk_statusProduk | null
    hargaEth?: number | null
    transaksi?: transaksiUncheckedCreateNestedManyWithoutProdukInput
  }

  export type produkCreateOrConnectWithoutUserInput = {
    where: produkWhereUniqueInput
    create: XOR<produkCreateWithoutUserInput, produkUncheckedCreateWithoutUserInput>
  }

  export type produkCreateManyUserInputEnvelope = {
    data: produkCreateManyUserInput | produkCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type profileCreateWithoutUserInput = {
    id: string
    nama: string
    nomor_telepon?: string | null
    alamat?: string | null
    nomor_whatsapp?: string | null
  }

  export type profileUncheckedCreateWithoutUserInput = {
    id: string
    nama: string
    nomor_telepon?: string | null
    alamat?: string | null
    nomor_whatsapp?: string | null
  }

  export type profileCreateOrConnectWithoutUserInput = {
    where: profileWhereUniqueInput
    create: XOR<profileCreateWithoutUserInput, profileUncheckedCreateWithoutUserInput>
  }

  export type transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput = {
    id: string
    kodeTransaksi: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    notifikasi?: notifikasiCreateNestedManyWithoutTransaksiInput
    sengketa?: sengketaCreateNestedOneWithoutTransaksiInput
    user_transaksi_penjualIdTouser: userCreateNestedOneWithoutTransaksi_transaksi_penjualIdTouserInput
    produk: produkCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput = {
    id: string
    kodeTransaksi: string
    produkId: string
    penjualId: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutTransaksiInput
    sengketa?: sengketaUncheckedCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiCreateOrConnectWithoutUser_transaksi_pembeliIdTouserInput = {
    where: transaksiWhereUniqueInput
    create: XOR<transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput>
  }

  export type transaksiCreateManyUser_transaksi_pembeliIdTouserInputEnvelope = {
    data: transaksiCreateManyUser_transaksi_pembeliIdTouserInput | transaksiCreateManyUser_transaksi_pembeliIdTouserInput[]
    skipDuplicates?: boolean
  }

  export type transaksiCreateWithoutUser_transaksi_penjualIdTouserInput = {
    id: string
    kodeTransaksi: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    notifikasi?: notifikasiCreateNestedManyWithoutTransaksiInput
    sengketa?: sengketaCreateNestedOneWithoutTransaksiInput
    user_transaksi_pembeliIdTouser: userCreateNestedOneWithoutTransaksi_transaksi_pembeliIdTouserInput
    produk: produkCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput = {
    id: string
    kodeTransaksi: string
    produkId: string
    pembeliId: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutTransaksiInput
    sengketa?: sengketaUncheckedCreateNestedOneWithoutTransaksiInput
  }

  export type transaksiCreateOrConnectWithoutUser_transaksi_penjualIdTouserInput = {
    where: transaksiWhereUniqueInput
    create: XOR<transaksiCreateWithoutUser_transaksi_penjualIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput>
  }

  export type transaksiCreateManyUser_transaksi_penjualIdTouserInputEnvelope = {
    data: transaksiCreateManyUser_transaksi_penjualIdTouserInput | transaksiCreateManyUser_transaksi_penjualIdTouserInput[]
    skipDuplicates?: boolean
  }

  export type aplikasi_penjualUpsertWithoutUserInput = {
    update: XOR<aplikasi_penjualUpdateWithoutUserInput, aplikasi_penjualUncheckedUpdateWithoutUserInput>
    create: XOR<aplikasi_penjualCreateWithoutUserInput, aplikasi_penjualUncheckedCreateWithoutUserInput>
    where?: aplikasi_penjualWhereInput
  }

  export type aplikasi_penjualUpdateToOneWithWhereWithoutUserInput = {
    where?: aplikasi_penjualWhereInput
    data: XOR<aplikasi_penjualUpdateWithoutUserInput, aplikasi_penjualUncheckedUpdateWithoutUserInput>
  }

  export type aplikasi_penjualUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_jual?: NullableStringFieldUpdateOperationsInput | string | null
    status?: Enumstatus_aplikasiFieldUpdateOperationsInput | $Enums.status_aplikasi
    catatan_admin?: NullableStringFieldUpdateOperationsInput | string | null
    diajukan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diperbarui?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type aplikasi_penjualUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    alasan_jual?: NullableStringFieldUpdateOperationsInput | string | null
    status?: Enumstatus_aplikasiFieldUpdateOperationsInput | $Enums.status_aplikasi
    catatan_admin?: NullableStringFieldUpdateOperationsInput | string | null
    diajukan_pada?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diperbarui?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notifikasiUpsertWithWhereUniqueWithoutUserInput = {
    where: notifikasiWhereUniqueInput
    update: XOR<notifikasiUpdateWithoutUserInput, notifikasiUncheckedUpdateWithoutUserInput>
    create: XOR<notifikasiCreateWithoutUserInput, notifikasiUncheckedCreateWithoutUserInput>
  }

  export type notifikasiUpdateWithWhereUniqueWithoutUserInput = {
    where: notifikasiWhereUniqueInput
    data: XOR<notifikasiUpdateWithoutUserInput, notifikasiUncheckedUpdateWithoutUserInput>
  }

  export type notifikasiUpdateManyWithWhereWithoutUserInput = {
    where: notifikasiScalarWhereInput
    data: XOR<notifikasiUpdateManyMutationInput, notifikasiUncheckedUpdateManyWithoutUserInput>
  }

  export type produkUpsertWithWhereUniqueWithoutUserInput = {
    where: produkWhereUniqueInput
    update: XOR<produkUpdateWithoutUserInput, produkUncheckedUpdateWithoutUserInput>
    create: XOR<produkCreateWithoutUserInput, produkUncheckedCreateWithoutUserInput>
  }

  export type produkUpdateWithWhereUniqueWithoutUserInput = {
    where: produkWhereUniqueInput
    data: XOR<produkUpdateWithoutUserInput, produkUncheckedUpdateWithoutUserInput>
  }

  export type produkUpdateManyWithWhereWithoutUserInput = {
    where: produkScalarWhereInput
    data: XOR<produkUpdateManyMutationInput, produkUncheckedUpdateManyWithoutUserInput>
  }

  export type produkScalarWhereInput = {
    AND?: produkScalarWhereInput | produkScalarWhereInput[]
    OR?: produkScalarWhereInput[]
    NOT?: produkScalarWhereInput | produkScalarWhereInput[]
    id?: StringFilter<"produk"> | string
    kodeProduk?: StringFilter<"produk"> | string
    namaGame?: StringFilter<"produk"> | string
    deskripsi?: StringNullableFilter<"produk"> | string | null
    harga?: IntFilter<"produk"> | number
    penjualId?: StringFilter<"produk"> | string
    statusJual?: BoolFilter<"produk"> | boolean
    gambar?: StringNullableFilter<"produk"> | string | null
    judulProduk?: StringFilter<"produk"> | string
    dibuatPada?: DateTimeFilter<"produk"> | Date | string
    diperbaruiPada?: DateTimeFilter<"produk"> | Date | string
    statusProduk?: Enumproduk_statusProdukNullableFilter<"produk"> | $Enums.produk_statusProduk | null
    hargaEth?: FloatNullableFilter<"produk"> | number | null
  }

  export type profileUpsertWithoutUserInput = {
    update: XOR<profileUpdateWithoutUserInput, profileUncheckedUpdateWithoutUserInput>
    create: XOR<profileCreateWithoutUserInput, profileUncheckedCreateWithoutUserInput>
    where?: profileWhereInput
  }

  export type profileUpdateToOneWithWhereWithoutUserInput = {
    where?: profileWhereInput
    data: XOR<profileUpdateWithoutUserInput, profileUncheckedUpdateWithoutUserInput>
  }

  export type profileUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type profileUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    nama?: StringFieldUpdateOperationsInput | string
    nomor_telepon?: NullableStringFieldUpdateOperationsInput | string | null
    alamat?: NullableStringFieldUpdateOperationsInput | string | null
    nomor_whatsapp?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type transaksiUpsertWithWhereUniqueWithoutUser_transaksi_pembeliIdTouserInput = {
    where: transaksiWhereUniqueInput
    update: XOR<transaksiUpdateWithoutUser_transaksi_pembeliIdTouserInput, transaksiUncheckedUpdateWithoutUser_transaksi_pembeliIdTouserInput>
    create: XOR<transaksiCreateWithoutUser_transaksi_pembeliIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_pembeliIdTouserInput>
  }

  export type transaksiUpdateWithWhereUniqueWithoutUser_transaksi_pembeliIdTouserInput = {
    where: transaksiWhereUniqueInput
    data: XOR<transaksiUpdateWithoutUser_transaksi_pembeliIdTouserInput, transaksiUncheckedUpdateWithoutUser_transaksi_pembeliIdTouserInput>
  }

  export type transaksiUpdateManyWithWhereWithoutUser_transaksi_pembeliIdTouserInput = {
    where: transaksiScalarWhereInput
    data: XOR<transaksiUpdateManyMutationInput, transaksiUncheckedUpdateManyWithoutUser_transaksi_pembeliIdTouserInput>
  }

  export type transaksiUpsertWithWhereUniqueWithoutUser_transaksi_penjualIdTouserInput = {
    where: transaksiWhereUniqueInput
    update: XOR<transaksiUpdateWithoutUser_transaksi_penjualIdTouserInput, transaksiUncheckedUpdateWithoutUser_transaksi_penjualIdTouserInput>
    create: XOR<transaksiCreateWithoutUser_transaksi_penjualIdTouserInput, transaksiUncheckedCreateWithoutUser_transaksi_penjualIdTouserInput>
  }

  export type transaksiUpdateWithWhereUniqueWithoutUser_transaksi_penjualIdTouserInput = {
    where: transaksiWhereUniqueInput
    data: XOR<transaksiUpdateWithoutUser_transaksi_penjualIdTouserInput, transaksiUncheckedUpdateWithoutUser_transaksi_penjualIdTouserInput>
  }

  export type transaksiUpdateManyWithWhereWithoutUser_transaksi_penjualIdTouserInput = {
    where: transaksiScalarWhereInput
    data: XOR<transaksiUpdateManyMutationInput, transaksiUncheckedUpdateManyWithoutUser_transaksi_penjualIdTouserInput>
  }

  export type userCreateWithoutAplikasiPenjualInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    notifikasi?: notifikasiCreateNestedManyWithoutUserInput
    produk?: produkCreateNestedManyWithoutUserInput
    profile?: profileCreateNestedOneWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
    transaksi_transaksi_penjualIdTouser?: transaksiCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userUncheckedCreateWithoutAplikasiPenjualInput = {
    id: string
    email: string
    password: string
    role?: $Enums.user_role
    walletAddress?: string | null
    dibuatPada?: Date | string
    notifikasi?: notifikasiUncheckedCreateNestedManyWithoutUserInput
    produk?: produkUncheckedCreateNestedManyWithoutUserInput
    profile?: profileUncheckedCreateNestedOneWithoutUserInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_pembeliIdTouserInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedCreateNestedManyWithoutUser_transaksi_penjualIdTouserInput
  }

  export type userCreateOrConnectWithoutAplikasiPenjualInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutAplikasiPenjualInput, userUncheckedCreateWithoutAplikasiPenjualInput>
  }

  export type userUpsertWithoutAplikasiPenjualInput = {
    update: XOR<userUpdateWithoutAplikasiPenjualInput, userUncheckedUpdateWithoutAplikasiPenjualInput>
    create: XOR<userCreateWithoutAplikasiPenjualInput, userUncheckedCreateWithoutAplikasiPenjualInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutAplikasiPenjualInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutAplikasiPenjualInput, userUncheckedUpdateWithoutAplikasiPenjualInput>
  }

  export type userUpdateWithoutAplikasiPenjualInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    notifikasi?: notifikasiUpdateManyWithoutUserNestedInput
    produk?: produkUpdateManyWithoutUserNestedInput
    profile?: profileUpdateOneWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type userUncheckedUpdateWithoutAplikasiPenjualInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: Enumuser_roleFieldUpdateOperationsInput | $Enums.user_role
    walletAddress?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    notifikasi?: notifikasiUncheckedUpdateManyWithoutUserNestedInput
    produk?: produkUncheckedUpdateManyWithoutUserNestedInput
    profile?: profileUncheckedUpdateOneWithoutUserNestedInput
    transaksi_transaksi_pembeliIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_pembeliIdTouserNestedInput
    transaksi_transaksi_penjualIdTouser?: transaksiUncheckedUpdateManyWithoutUser_transaksi_penjualIdTouserNestedInput
  }

  export type transaksiCreateManyProdukInput = {
    id: string
    kodeTransaksi: string
    pembeliId: string
    penjualId: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
  }

  export type transaksiUpdateWithoutProdukInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifikasi?: notifikasiUpdateManyWithoutTransaksiNestedInput
    sengketa?: sengketaUpdateOneWithoutTransaksiNestedInput
    user_transaksi_pembeliIdTouser?: userUpdateOneRequiredWithoutTransaksi_transaksi_pembeliIdTouserNestedInput
    user_transaksi_penjualIdTouser?: userUpdateOneRequiredWithoutTransaksi_transaksi_penjualIdTouserNestedInput
  }

  export type transaksiUncheckedUpdateWithoutProdukInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    pembeliId?: StringFieldUpdateOperationsInput | string
    penjualId?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifikasi?: notifikasiUncheckedUpdateManyWithoutTransaksiNestedInput
    sengketa?: sengketaUncheckedUpdateOneWithoutTransaksiNestedInput
  }

  export type transaksiUncheckedUpdateManyWithoutProdukInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    pembeliId?: StringFieldUpdateOperationsInput | string
    penjualId?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notifikasiCreateManyTransaksiInput = {
    id: string
    userId: string
    tipe: $Enums.notifikasi_tipe
    judul: string
    pesan: string
    dibaca?: boolean
    dibuatPada?: Date | string
  }

  export type notifikasiUpdateWithoutTransaksiInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipe?: Enumnotifikasi_tipeFieldUpdateOperationsInput | $Enums.notifikasi_tipe
    judul?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    dibaca?: BoolFieldUpdateOperationsInput | boolean
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutNotifikasiNestedInput
  }

  export type notifikasiUncheckedUpdateWithoutTransaksiInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    tipe?: Enumnotifikasi_tipeFieldUpdateOperationsInput | $Enums.notifikasi_tipe
    judul?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    dibaca?: BoolFieldUpdateOperationsInput | boolean
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notifikasiUncheckedUpdateManyWithoutTransaksiInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    tipe?: Enumnotifikasi_tipeFieldUpdateOperationsInput | $Enums.notifikasi_tipe
    judul?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    dibaca?: BoolFieldUpdateOperationsInput | boolean
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notifikasiCreateManyUserInput = {
    id: string
    transaksiId?: string | null
    tipe: $Enums.notifikasi_tipe
    judul: string
    pesan: string
    dibaca?: boolean
    dibuatPada?: Date | string
  }

  export type produkCreateManyUserInput = {
    id: string
    kodeProduk: string
    namaGame: string
    deskripsi?: string | null
    harga: number
    statusJual?: boolean
    gambar?: string | null
    judulProduk: string
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    statusProduk?: $Enums.produk_statusProduk | null
    hargaEth?: number | null
  }

  export type transaksiCreateManyUser_transaksi_pembeliIdTouserInput = {
    id: string
    kodeTransaksi: string
    produkId: string
    penjualId: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
  }

  export type transaksiCreateManyUser_transaksi_penjualIdTouserInput = {
    id: string
    kodeTransaksi: string
    produkId: string
    pembeliId: string
    status?: $Enums.transaksi_status
    waktuBayar?: Date | string | null
    waktuSelesai?: Date | string | null
    contractAddress?: string | null
    escrowAmount?: string | null
    smartContractTxHash?: string | null
    accountData?: string | null
    deskripsiBukti?: string | null
    adminRefundAt?: Date | string | null
    adminRefundBy?: string | null
    adminRefundNote?: string | null
    adminRefundTxHash?: string | null
    adminReleaseAt?: Date | string | null
    adminReleaseBy?: string | null
    adminReleaseNote?: string | null
    adminReleaseTxHash?: string | null
    dibuatPada?: Date | string
    diperbaruiPada?: Date | string
    escrowId?: string | null
    expiredAt?: Date | string | null
  }

  export type notifikasiUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    tipe?: Enumnotifikasi_tipeFieldUpdateOperationsInput | $Enums.notifikasi_tipe
    judul?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    dibaca?: BoolFieldUpdateOperationsInput | boolean
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    transaksi?: transaksiUpdateOneWithoutNotifikasiNestedInput
  }

  export type notifikasiUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    transaksiId?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: Enumnotifikasi_tipeFieldUpdateOperationsInput | $Enums.notifikasi_tipe
    judul?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    dibaca?: BoolFieldUpdateOperationsInput | boolean
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notifikasiUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    transaksiId?: NullableStringFieldUpdateOperationsInput | string | null
    tipe?: Enumnotifikasi_tipeFieldUpdateOperationsInput | $Enums.notifikasi_tipe
    judul?: StringFieldUpdateOperationsInput | string
    pesan?: StringFieldUpdateOperationsInput | string
    dibaca?: BoolFieldUpdateOperationsInput | boolean
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type produkUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeProduk?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    harga?: IntFieldUpdateOperationsInput | number
    statusJual?: BoolFieldUpdateOperationsInput | boolean
    gambar?: NullableStringFieldUpdateOperationsInput | string | null
    judulProduk?: StringFieldUpdateOperationsInput | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    statusProduk?: NullableEnumproduk_statusProdukFieldUpdateOperationsInput | $Enums.produk_statusProduk | null
    hargaEth?: NullableFloatFieldUpdateOperationsInput | number | null
    transaksi?: transaksiUpdateManyWithoutProdukNestedInput
  }

  export type produkUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeProduk?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    harga?: IntFieldUpdateOperationsInput | number
    statusJual?: BoolFieldUpdateOperationsInput | boolean
    gambar?: NullableStringFieldUpdateOperationsInput | string | null
    judulProduk?: StringFieldUpdateOperationsInput | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    statusProduk?: NullableEnumproduk_statusProdukFieldUpdateOperationsInput | $Enums.produk_statusProduk | null
    hargaEth?: NullableFloatFieldUpdateOperationsInput | number | null
    transaksi?: transaksiUncheckedUpdateManyWithoutProdukNestedInput
  }

  export type produkUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeProduk?: StringFieldUpdateOperationsInput | string
    namaGame?: StringFieldUpdateOperationsInput | string
    deskripsi?: NullableStringFieldUpdateOperationsInput | string | null
    harga?: IntFieldUpdateOperationsInput | number
    statusJual?: BoolFieldUpdateOperationsInput | boolean
    gambar?: NullableStringFieldUpdateOperationsInput | string | null
    judulProduk?: StringFieldUpdateOperationsInput | string
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    statusProduk?: NullableEnumproduk_statusProdukFieldUpdateOperationsInput | $Enums.produk_statusProduk | null
    hargaEth?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type transaksiUpdateWithoutUser_transaksi_pembeliIdTouserInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifikasi?: notifikasiUpdateManyWithoutTransaksiNestedInput
    sengketa?: sengketaUpdateOneWithoutTransaksiNestedInput
    user_transaksi_penjualIdTouser?: userUpdateOneRequiredWithoutTransaksi_transaksi_penjualIdTouserNestedInput
    produk?: produkUpdateOneRequiredWithoutTransaksiNestedInput
  }

  export type transaksiUncheckedUpdateWithoutUser_transaksi_pembeliIdTouserInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    produkId?: StringFieldUpdateOperationsInput | string
    penjualId?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifikasi?: notifikasiUncheckedUpdateManyWithoutTransaksiNestedInput
    sengketa?: sengketaUncheckedUpdateOneWithoutTransaksiNestedInput
  }

  export type transaksiUncheckedUpdateManyWithoutUser_transaksi_pembeliIdTouserInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    produkId?: StringFieldUpdateOperationsInput | string
    penjualId?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type transaksiUpdateWithoutUser_transaksi_penjualIdTouserInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifikasi?: notifikasiUpdateManyWithoutTransaksiNestedInput
    sengketa?: sengketaUpdateOneWithoutTransaksiNestedInput
    user_transaksi_pembeliIdTouser?: userUpdateOneRequiredWithoutTransaksi_transaksi_pembeliIdTouserNestedInput
    produk?: produkUpdateOneRequiredWithoutTransaksiNestedInput
  }

  export type transaksiUncheckedUpdateWithoutUser_transaksi_penjualIdTouserInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    produkId?: StringFieldUpdateOperationsInput | string
    pembeliId?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notifikasi?: notifikasiUncheckedUpdateManyWithoutTransaksiNestedInput
    sengketa?: sengketaUncheckedUpdateOneWithoutTransaksiNestedInput
  }

  export type transaksiUncheckedUpdateManyWithoutUser_transaksi_penjualIdTouserInput = {
    id?: StringFieldUpdateOperationsInput | string
    kodeTransaksi?: StringFieldUpdateOperationsInput | string
    produkId?: StringFieldUpdateOperationsInput | string
    pembeliId?: StringFieldUpdateOperationsInput | string
    status?: Enumtransaksi_statusFieldUpdateOperationsInput | $Enums.transaksi_status
    waktuBayar?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    waktuSelesai?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    contractAddress?: NullableStringFieldUpdateOperationsInput | string | null
    escrowAmount?: NullableStringFieldUpdateOperationsInput | string | null
    smartContractTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    accountData?: NullableStringFieldUpdateOperationsInput | string | null
    deskripsiBukti?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminRefundBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminRefundTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    adminReleaseBy?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseNote?: NullableStringFieldUpdateOperationsInput | string | null
    adminReleaseTxHash?: NullableStringFieldUpdateOperationsInput | string | null
    dibuatPada?: DateTimeFieldUpdateOperationsInput | Date | string
    diperbaruiPada?: DateTimeFieldUpdateOperationsInput | Date | string
    escrowId?: NullableStringFieldUpdateOperationsInput | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use ProdukCountOutputTypeDefaultArgs instead
     */
    export type ProdukCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProdukCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TransaksiCountOutputTypeDefaultArgs instead
     */
    export type TransaksiCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TransaksiCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use notifikasiDefaultArgs instead
     */
    export type notifikasiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = notifikasiDefaultArgs<ExtArgs>
    /**
     * @deprecated Use produkDefaultArgs instead
     */
    export type produkArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = produkDefaultArgs<ExtArgs>
    /**
     * @deprecated Use profileDefaultArgs instead
     */
    export type profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = profileDefaultArgs<ExtArgs>
    /**
     * @deprecated Use riwayattransaksiDefaultArgs instead
     */
    export type riwayattransaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = riwayattransaksiDefaultArgs<ExtArgs>
    /**
     * @deprecated Use sengketaDefaultArgs instead
     */
    export type sengketaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = sengketaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use transaksiDefaultArgs instead
     */
    export type transaksiArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = transaksiDefaultArgs<ExtArgs>
    /**
     * @deprecated Use userDefaultArgs instead
     */
    export type userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = userDefaultArgs<ExtArgs>
    /**
     * @deprecated Use aplikasi_penjualDefaultArgs instead
     */
    export type aplikasi_penjualArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = aplikasi_penjualDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}